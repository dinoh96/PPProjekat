INFO  01:20:14,252 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:20:14,310 - #8 program
INFO  01:20:14,310 - #38 p
INFO  01:20:14,311 - #16 const
INFO  01:20:14,312 - #38 int
INFO  01:20:14,312 - #38 size
INFO  01:20:14,314 - #21 =
INFO  01:20:14,315 - #37 10
INFO  01:20:14,315 - #17 ;
INFO  01:20:14,316 - #38 int
INFO  01:20:14,318 - #38 pos
INFO  01:20:14,318 - #4 [
INFO  01:20:14,318 - #5 ]
INFO  01:20:14,318 - #19 ,
INFO  01:20:14,321 - #38 neg
INFO  01:20:14,321 - #4 [
INFO  01:20:14,321 - #5 ]
INFO  01:20:14,321 - #17 ;
INFO  01:20:14,322 - #6 {
INFO  01:20:14,323 - #15 void
INFO  01:20:14,324 - #38 putp
INFO  01:20:14,325 - #2 (
INFO  01:20:14,325 - #38 int
INFO  01:20:14,325 - #38 a
INFO  01:20:14,325 - #19 ,
INFO  01:20:14,327 - #38 int
INFO  01:20:14,327 - #38 idx
INFO  01:20:14,327 - #3 )
INFO  01:20:14,328 - #6 {
INFO  01:20:14,329 - #38 pos
INFO  01:20:14,331 - #4 [
INFO  01:20:14,331 - #38 idx
INFO  01:20:14,332 - #5 ]
INFO  01:20:14,337 - #21 =
INFO  01:20:14,337 - #38 a
INFO  01:20:14,337 - #17 ;
INFO  01:20:14,337 - #7 }
INFO  01:20:14,338 - #15 void
INFO  01:20:14,340 - #38 putn
INFO  01:20:14,340 - #2 (
INFO  01:20:14,340 - #38 int
INFO  01:20:14,341 - #38 a
INFO  01:20:14,341 - #19 ,
INFO  01:20:14,341 - #38 int
INFO  01:20:14,341 - #38 idx
INFO  01:20:14,341 - #3 )
INFO  01:20:14,341 - #6 {
INFO  01:20:14,342 - #38 neg
INFO  01:20:14,342 - #4 [
INFO  01:20:14,342 - #38 idx
INFO  01:20:14,343 - #5 ]
INFO  01:20:14,343 - #21 =
INFO  01:20:14,343 - #38 a
INFO  01:20:14,343 - #17 ;
INFO  01:20:14,344 - #7 }
INFO  01:20:14,344 - #38 int
INFO  01:20:14,344 - #38 getp
INFO  01:20:14,344 - #2 (
INFO  01:20:14,344 - #38 int
INFO  01:20:14,345 - #38 idx
INFO  01:20:14,345 - #19 ,
INFO  01:20:14,345 - #38 int
INFO  01:20:14,345 - #38 a
INFO  01:20:14,345 - #19 ,
INFO  01:20:14,345 - #38 char
INFO  01:20:14,346 - #38 b
INFO  01:20:14,346 - #19 ,
INFO  01:20:14,346 - #38 char
INFO  01:20:14,347 - #38 c
INFO  01:20:14,347 - #3 )
INFO  01:20:14,347 - #38 int
INFO  01:20:14,347 - #38 d
INFO  01:20:14,347 - #17 ;
INFO  01:20:14,348 - #6 {
INFO  01:20:14,348 - #14 return
INFO  01:20:14,348 - #38 pos
INFO  01:20:14,348 - #4 [
INFO  01:20:14,348 - #38 idx
INFO  01:20:14,348 - #5 ]
INFO  01:20:14,348 - #17 ;
INFO  01:20:14,349 - #7 }
INFO  01:20:14,349 - #38 int
INFO  01:20:14,349 - #38 getn
INFO  01:20:14,349 - #2 (
INFO  01:20:14,349 - #38 int
INFO  01:20:14,349 - #38 idx
INFO  01:20:14,349 - #3 )
INFO  01:20:14,349 - #6 {
INFO  01:20:14,349 - #14 return
INFO  01:20:14,349 - #38 neg
INFO  01:20:14,350 - #4 [
INFO  01:20:14,350 - #38 idx
INFO  01:20:14,350 - #5 ]
INFO  01:20:14,350 - #17 ;
INFO  01:20:14,350 - #7 }
INFO  01:20:14,350 - #15 void
INFO  01:20:14,350 - #38 f
INFO  01:20:14,350 - #2 (
INFO  01:20:14,350 - #38 char
INFO  01:20:14,351 - #38 ch
INFO  01:20:14,351 - #19 ,
INFO  01:20:14,351 - #38 int
INFO  01:20:14,351 - #38 a
INFO  01:20:14,351 - #19 ,
INFO  01:20:14,351 - #38 int
INFO  01:20:14,351 - #38 arg
INFO  01:20:14,351 - #3 )
INFO  01:20:14,351 - #38 int
INFO  01:20:14,351 - #38 x
INFO  01:20:14,351 - #17 ;
INFO  01:20:14,352 - #6 {
INFO  01:20:14,352 - #38 x
INFO  01:20:14,352 - #21 =
INFO  01:20:14,352 - #38 arg
INFO  01:20:14,352 - #17 ;
INFO  01:20:14,352 - #7 }
INFO  01:20:14,352 - #15 void
INFO  01:20:14,352 - #38 main
INFO  01:20:14,352 - #2 (
INFO  01:20:14,352 - #3 )
INFO  01:20:14,353 - #38 int
INFO  01:20:14,354 - #38 x
INFO  01:20:14,354 - #19 ,
INFO  01:20:14,354 - #38 i
INFO  01:20:14,354 - #17 ;
INFO  01:20:14,354 - #38 char
INFO  01:20:14,354 - #38 c
INFO  01:20:14,354 - #17 ;
INFO  01:20:14,354 - #6 {
INFO  01:20:14,354 - #38 pos
INFO  01:20:14,355 - #21 =
INFO  01:20:14,355 - #13 new
INFO  01:20:14,355 - #38 int
INFO  01:20:14,355 - #4 [
INFO  01:20:14,355 - #38 size
INFO  01:20:14,355 - #5 ]
INFO  01:20:14,355 - #17 ;
INFO  01:20:14,355 - #38 neg
INFO  01:20:14,356 - #21 =
INFO  01:20:14,356 - #13 new
INFO  01:20:14,356 - #38 int
INFO  01:20:14,356 - #4 [
INFO  01:20:14,356 - #38 size
INFO  01:20:14,356 - #5 ]
INFO  01:20:14,356 - #17 ;
INFO  01:20:14,356 - #38 i
INFO  01:20:14,357 - #21 =
INFO  01:20:14,357 - #37 0
INFO  01:20:14,357 - #17 ;
INFO  01:20:14,357 - #41 if
INFO  01:20:14,357 - #2 (
INFO  01:20:14,357 - #37 1
INFO  01:20:14,358 - #31 ==
INFO  01:20:14,358 - #37 1
INFO  01:20:14,359 - #3 )
INFO  01:20:14,364 - #6 {
INFO  01:20:14,366 - #10 print
INFO  01:20:14,366 - #2 (
INFO  01:20:14,366 - #37 1
INFO  01:20:14,366 - #3 )
INFO  01:20:14,367 - #17 ;
INFO  01:20:14,367 - #7 }
INFO  01:20:14,367 - #42 else
INFO  01:20:14,367 - #6 {
INFO  01:20:14,368 - #10 print
INFO  01:20:14,372 - #2 (
INFO  01:20:14,373 - #37 2
INFO  01:20:14,373 - #3 )
INFO  01:20:14,373 - #17 ;
INFO  01:20:14,373 - #7 }
INFO  01:20:14,373 - #43 do
INFO  01:20:14,374 - #6 {
INFO  01:20:14,374 - #38 putp
INFO  01:20:14,374 - #2 (
INFO  01:20:14,374 - #37 0
INFO  01:20:14,374 - #19 ,
INFO  01:20:14,374 - #38 i
INFO  01:20:14,374 - #3 )
INFO  01:20:14,375 - #17 ;
INFO  01:20:14,376 - #38 putn
INFO  01:20:14,376 - #2 (
INFO  01:20:14,376 - #37 0
INFO  01:20:14,376 - #19 ,
INFO  01:20:14,376 - #38 i
INFO  01:20:14,376 - #3 )
INFO  01:20:14,376 - #17 ;
INFO  01:20:14,376 - #38 i
INFO  01:20:14,376 - #27 ++
INFO  01:20:14,377 - #17 ;
INFO  01:20:14,377 - #7 }
INFO  01:20:14,377 - #44 while
INFO  01:20:14,378 - #2 (
INFO  01:20:14,378 - #38 i
INFO  01:20:14,378 - #33 <
INFO  01:20:14,378 - #38 size
INFO  01:20:14,379 - #3 )
INFO  01:20:14,379 - #17 ;
INFO  01:20:14,379 - #38 f
INFO  01:20:14,379 - #2 (
INFO  01:20:14,379 - #38 c
INFO  01:20:14,380 - #19 ,
INFO  01:20:14,380 - #38 x
INFO  01:20:14,380 - #19 ,
INFO  01:20:14,380 - #38 i
INFO  01:20:14,380 - #3 )
INFO  01:20:14,380 - #17 ;
INFO  01:20:14,380 - #9 read
INFO  01:20:14,380 - #2 (
INFO  01:20:14,381 - #38 x
INFO  01:20:14,381 - #3 )
INFO  01:20:14,381 - #17 ;
INFO  01:20:14,381 - #43 do
INFO  01:20:14,381 - #6 {
INFO  01:20:14,382 - #41 if
INFO  01:20:14,382 - #2 (
INFO  01:20:14,382 - #38 x
INFO  01:20:14,382 - #34 <=
INFO  01:20:14,382 - #37 0
INFO  01:20:14,384 - #3 )
INFO  01:20:14,384 - #11 break
INFO  01:20:14,384 - #17 ;
INFO  01:20:14,384 - #41 if
INFO  01:20:14,385 - #2 (
INFO  01:20:14,385 - #37 0
INFO  01:20:14,385 - #34 <=
INFO  01:20:14,385 - #38 x
INFO  01:20:14,385 - #30 &&
INFO  01:20:14,385 - #38 x
INFO  01:20:14,385 - #33 <
INFO  01:20:14,385 - #38 size
INFO  01:20:14,385 - #3 )
INFO  01:20:14,386 - #6 {
INFO  01:20:14,386 - #38 putp
INFO  01:20:14,386 - #2 (
INFO  01:20:14,386 - #38 getp
INFO  01:20:14,386 - #2 (
INFO  01:20:14,386 - #38 x
INFO  01:20:14,386 - #19 ,
INFO  01:20:14,386 - #38 i
INFO  01:20:14,386 - #19 ,
INFO  01:20:14,386 - #38 c
INFO  01:20:14,386 - #19 ,
INFO  01:20:14,387 - #37 1
INFO  01:20:14,387 - #3 )
INFO  01:20:14,387 - #23 +
INFO  01:20:14,387 - #37 1
INFO  01:20:14,388 - #3 )
INFO  01:20:14,388 - #17 ;
INFO  01:20:14,389 - #7 }
INFO  01:20:14,389 - #42 else
INFO  01:20:14,389 - #41 if
INFO  01:20:14,389 - #2 (
INFO  01:20:14,389 - #22 -
INFO  01:20:14,389 - #38 size
INFO  01:20:14,389 - #33 <
INFO  01:20:14,389 - #38 x
INFO  01:20:14,390 - #30 &&
INFO  01:20:14,390 - #38 x
INFO  01:20:14,390 - #33 <
INFO  01:20:14,390 - #37 0
INFO  01:20:14,390 - #3 )
INFO  01:20:14,390 - #6 {
INFO  01:20:14,391 - #38 putn
INFO  01:20:14,391 - #2 (
INFO  01:20:14,391 - #38 getn
INFO  01:20:14,391 - #2 (
INFO  01:20:14,391 - #22 -
INFO  01:20:14,391 - #38 x
INFO  01:20:14,391 - #3 )
INFO  01:20:14,391 - #23 +
INFO  01:20:14,392 - #37 1
INFO  01:20:14,392 - #3 )
INFO  01:20:14,392 - #17 ;
INFO  01:20:14,392 - #7 }
INFO  01:20:14,392 - #9 read
INFO  01:20:14,392 - #2 (
INFO  01:20:14,392 - #38 x
INFO  01:20:14,392 - #3 )
INFO  01:20:14,393 - #17 ;
INFO  01:20:14,393 - #7 }
INFO  01:20:14,393 - #44 while
INFO  01:20:14,393 - #2 (
INFO  01:20:14,394 - #39 true
INFO  01:20:14,394 - #3 )
INFO  01:20:14,394 - #17 ;
INFO  01:20:14,394 - #10 print
INFO  01:20:14,394 - #2 (
INFO  01:20:14,394 - #38 x
INFO  01:20:14,394 - #33 <
INFO  01:20:14,394 - #37 0
INFO  01:20:14,395 - #20 ?
INFO  01:20:14,395 - #40 -
INFO  01:20:14,395 - #18 :
INFO  01:20:14,395 - #40 +
INFO  01:20:14,396 - #3 )
INFO  01:20:14,397 - #17 ;
INFO  01:20:14,397 - #7 }
INFO  01:20:14,397 - #7 }
INFO  01:20:14,408 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:20:14,408 - Deklarisana promenljiva pos na liniji 3
INFO  01:20:14,408 - Deklarisana promenljiva neg na liniji 3
INFO  01:20:14,408 - Obradjuje se funkcija putp na liniji 4
INFO  01:20:14,408 - Obradjuje se funkcija putn na liniji 7
INFO  01:20:14,408 - Obradjuje se funkcija getp na liniji 10
INFO  01:20:14,408 - Deklarisana promenljiva d na liniji 10
INFO  01:20:14,408 - Obradjuje se funkcija getn na liniji 13
INFO  01:20:14,409 - Obradjuje se funkcija f na liniji 16
INFO  01:20:14,409 - Deklarisana promenljiva x na liniji 17
INFO  01:20:14,409 - Obradjuje se funkcija main na liniji 20
INFO  01:20:14,409 - Deklarisana promenljiva x na liniji 20
INFO  01:20:14,409 - Deklarisana promenljiva i na liniji 20
INFO  01:20:14,409 - Deklarisana promenljiva c na liniji 21
INFO  01:20:14,410 - Pronadjen poziv procedure putp na liniji 31
INFO  01:20:14,411 - Pronadjen poziv procedure putn na liniji 32
INFO  01:20:14,411 - Pronadjen poziv procedure f na liniji 35
INFO  01:20:14,411 - Pronadjen poziv funkcije getp na liniji 40
ERROR 01:20:14,412 - Semanticka greska na liniji 40 : Ne poklapaju se tipovi parametara na poziciji 4
INFO  01:20:14,412 - Pronadjen poziv procedure putp na liniji 40
ERROR 01:20:14,412 - Semanticka greska na liniji 40 : Neodgovarajuc broj aktuelnih parametera (1) i formalnih parametara (2) za funkciju putp
INFO  01:20:14,412 - Pronadjen poziv funkcije getn na liniji 42
INFO  01:20:14,412 - Pronadjen poziv procedure putn na liniji 42
ERROR 01:20:14,412 - Semanticka greska na liniji 42 : Neodgovarajuc broj aktuelnih parametera (1) i formalnih parametara (2) za funkciju putn
INFO  01:20:14,413 - Print calls = 3
ERROR 01:20:14,414 - Parsiranje NIJE uspesno zavrseno!
