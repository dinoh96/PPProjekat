INFO  21:02:22,192 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  21:02:22,371 - #8 program
INFO  21:02:22,372 - #38 p
INFO  21:02:22,372 - #16 const
INFO  21:02:22,373 - #38 int
INFO  21:02:22,374 - #38 size
INFO  21:02:22,374 - #21 =
INFO  21:02:22,375 - #37 10
INFO  21:02:22,375 - #17 ;
INFO  21:02:22,376 - #38 int
INFO  21:02:22,377 - #38 pos
INFO  21:02:22,377 - #4 [
INFO  21:02:22,378 - #5 ]
INFO  21:02:22,378 - #19 ,
INFO  21:02:22,380 - #38 neg
INFO  21:02:22,380 - #4 [
INFO  21:02:22,380 - #5 ]
INFO  21:02:22,380 - #17 ;
INFO  21:02:22,381 - #6 {
INFO  21:02:22,382 - #15 void
INFO  21:02:22,383 - #38 putp
INFO  21:02:22,385 - #2 (
INFO  21:02:22,386 - #38 int
INFO  21:02:22,386 - #38 a
INFO  21:02:22,386 - #19 ,
INFO  21:02:22,388 - #38 int
INFO  21:02:22,388 - #38 idx
INFO  21:02:22,388 - #3 )
INFO  21:02:22,389 - #6 {
INFO  21:02:22,389 - #38 pos
INFO  21:02:22,390 - #4 [
INFO  21:02:22,390 - #38 idx
INFO  21:02:22,390 - #5 ]
INFO  21:02:22,393 - #21 =
INFO  21:02:22,394 - #38 a
INFO  21:02:22,394 - #17 ;
INFO  21:02:22,394 - #7 }
INFO  21:02:22,394 - #15 void
INFO  21:02:22,396 - #38 putn
INFO  21:02:22,396 - #2 (
INFO  21:02:22,396 - #38 int
INFO  21:02:22,396 - #38 a
INFO  21:02:22,396 - #19 ,
INFO  21:02:22,396 - #38 int
INFO  21:02:22,396 - #38 idx
INFO  21:02:22,398 - #3 )
INFO  21:02:22,398 - #6 {
INFO  21:02:22,398 - #38 neg
INFO  21:02:22,398 - #4 [
INFO  21:02:22,398 - #38 idx
INFO  21:02:22,401 - #5 ]
INFO  21:02:22,401 - #21 =
INFO  21:02:22,401 - #38 a
INFO  21:02:22,402 - #17 ;
INFO  21:02:22,402 - #7 }
INFO  21:02:22,402 - #38 int
INFO  21:02:22,402 - #38 getp
INFO  21:02:22,402 - #2 (
INFO  21:02:22,402 - #38 int
INFO  21:02:22,403 - #38 idx
INFO  21:02:22,403 - #3 )
INFO  21:02:22,403 - #6 {
INFO  21:02:22,403 - #14 return
INFO  21:02:22,403 - #38 pos
INFO  21:02:22,404 - #4 [
INFO  21:02:22,404 - #38 idx
INFO  21:02:22,405 - #5 ]
INFO  21:02:22,405 - #17 ;
INFO  21:02:22,405 - #7 }
INFO  21:02:22,405 - #38 int
INFO  21:02:22,405 - #38 getn
INFO  21:02:22,405 - #2 (
INFO  21:02:22,405 - #38 int
INFO  21:02:22,405 - #38 idx
INFO  21:02:22,406 - #3 )
INFO  21:02:22,406 - #6 {
INFO  21:02:22,406 - #14 return
INFO  21:02:22,406 - #38 neg
INFO  21:02:22,406 - #4 [
INFO  21:02:22,406 - #38 idx
INFO  21:02:22,406 - #5 ]
INFO  21:02:22,406 - #17 ;
INFO  21:02:22,406 - #7 }
INFO  21:02:22,407 - #15 void
INFO  21:02:22,407 - #38 f
INFO  21:02:22,407 - #2 (
INFO  21:02:22,407 - #38 char
INFO  21:02:22,407 - #38 ch
INFO  21:02:22,407 - #19 ,
INFO  21:02:22,407 - #38 int
INFO  21:02:22,407 - #38 a
INFO  21:02:22,407 - #19 ,
INFO  21:02:22,408 - #38 int
INFO  21:02:22,408 - #38 arg
INFO  21:02:22,408 - #3 )
INFO  21:02:22,408 - #38 int
INFO  21:02:22,408 - #38 x
INFO  21:02:22,408 - #17 ;
INFO  21:02:22,409 - #6 {
INFO  21:02:22,409 - #38 x
INFO  21:02:22,409 - #21 =
INFO  21:02:22,415 - #38 arg
INFO  21:02:22,416 - #17 ;
INFO  21:02:22,416 - #7 }
INFO  21:02:22,416 - #15 void
INFO  21:02:22,416 - #38 main
INFO  21:02:22,423 - #2 (
INFO  21:02:22,424 - #3 )
INFO  21:02:22,424 - #38 int
INFO  21:02:22,425 - #38 x
INFO  21:02:22,425 - #19 ,
INFO  21:02:22,425 - #38 i
INFO  21:02:22,425 - #17 ;
INFO  21:02:22,426 - #38 char
INFO  21:02:22,426 - #38 c
INFO  21:02:22,426 - #17 ;
INFO  21:02:22,426 - #6 {
INFO  21:02:22,426 - #38 pos
INFO  21:02:22,426 - #21 =
INFO  21:02:22,427 - #13 new
INFO  21:02:22,427 - #38 int
INFO  21:02:22,427 - #4 [
INFO  21:02:22,427 - #38 size
INFO  21:02:22,427 - #5 ]
INFO  21:02:22,427 - #17 ;
INFO  21:02:22,427 - #38 neg
INFO  21:02:22,428 - #21 =
INFO  21:02:22,428 - #13 new
INFO  21:02:22,428 - #38 int
INFO  21:02:22,428 - #4 [
INFO  21:02:22,429 - #38 size
INFO  21:02:22,429 - #5 ]
INFO  21:02:22,429 - #17 ;
INFO  21:02:22,429 - #38 i
INFO  21:02:22,429 - #21 =
INFO  21:02:22,429 - #37 0
INFO  21:02:22,429 - #17 ;
INFO  21:02:22,429 - #41 if
INFO  21:02:22,430 - #2 (
INFO  21:02:22,430 - #37 1
INFO  21:02:22,430 - #31 ==
INFO  21:02:22,430 - #37 1
INFO  21:02:22,431 - #3 )
INFO  21:02:22,444 - #6 {
INFO  21:02:22,445 - #10 print
INFO  21:02:22,445 - #2 (
INFO  21:02:22,445 - #37 1
INFO  21:02:22,445 - #3 )
INFO  21:02:22,446 - #17 ;
INFO  21:02:22,446 - #7 }
INFO  21:02:22,446 - #42 else
INFO  21:02:22,446 - #6 {
INFO  21:02:22,446 - #10 print
INFO  21:02:22,446 - #2 (
INFO  21:02:22,447 - #37 2
INFO  21:02:22,447 - #3 )
INFO  21:02:22,447 - #17 ;
INFO  21:02:22,447 - #7 }
INFO  21:02:22,448 - #43 do
INFO  21:02:22,448 - #6 {
INFO  21:02:22,448 - #38 putp
INFO  21:02:22,448 - #2 (
INFO  21:02:22,449 - #37 0
INFO  21:02:22,449 - #19 ,
INFO  21:02:22,449 - #38 i
INFO  21:02:22,449 - #3 )
INFO  21:02:22,450 - #17 ;
INFO  21:02:22,451 - #38 putn
INFO  21:02:22,451 - #2 (
INFO  21:02:22,451 - #37 0
INFO  21:02:22,451 - #19 ,
INFO  21:02:22,451 - #38 i
INFO  21:02:22,451 - #3 )
INFO  21:02:22,451 - #17 ;
INFO  21:02:22,451 - #38 i
INFO  21:02:22,451 - #27 ++
INFO  21:02:22,451 - #17 ;
INFO  21:02:22,452 - #7 }
INFO  21:02:22,452 - #44 while
INFO  21:02:22,452 - #2 (
INFO  21:02:22,452 - #38 i
INFO  21:02:22,452 - #33 <
INFO  21:02:22,452 - #38 size
INFO  21:02:22,453 - #3 )
INFO  21:02:22,453 - #17 ;
INFO  21:02:22,453 - #38 f
INFO  21:02:22,453 - #2 (
INFO  21:02:22,454 - #38 c
INFO  21:02:22,454 - #19 ,
INFO  21:02:22,454 - #38 x
INFO  21:02:22,454 - #19 ,
INFO  21:02:22,454 - #38 i
INFO  21:02:22,454 - #3 )
INFO  21:02:22,454 - #17 ;
INFO  21:02:22,454 - #9 read
INFO  21:02:22,454 - #2 (
INFO  21:02:22,454 - #38 x
INFO  21:02:22,455 - #3 )
INFO  21:02:22,455 - #17 ;
INFO  21:02:22,455 - #43 do
INFO  21:02:22,455 - #6 {
INFO  21:02:22,455 - #41 if
INFO  21:02:22,455 - #2 (
INFO  21:02:22,455 - #38 x
INFO  21:02:22,455 - #34 <=
INFO  21:02:22,455 - #37 0
INFO  21:02:22,456 - #3 )
INFO  21:02:22,456 - #11 break
INFO  21:02:22,456 - #17 ;
INFO  21:02:22,456 - #41 if
INFO  21:02:22,457 - #2 (
INFO  21:02:22,457 - #37 0
INFO  21:02:22,457 - #34 <=
INFO  21:02:22,458 - #38 x
INFO  21:02:22,458 - #30 &&
INFO  21:02:22,458 - #38 x
INFO  21:02:22,458 - #33 <
INFO  21:02:22,458 - #38 size
INFO  21:02:22,458 - #3 )
INFO  21:02:22,458 - #6 {
INFO  21:02:22,458 - #38 putp
INFO  21:02:22,458 - #2 (
INFO  21:02:22,458 - #38 getp
INFO  21:02:22,458 - #2 (
INFO  21:02:22,459 - #38 x
INFO  21:02:22,459 - #3 )
INFO  21:02:22,459 - #23 +
INFO  21:02:22,459 - #37 1
INFO  21:02:22,463 - #3 )
INFO  21:02:22,463 - #17 ;
INFO  21:02:22,463 - #7 }
INFO  21:02:22,464 - #42 else
INFO  21:02:22,464 - #41 if
INFO  21:02:22,464 - #2 (
INFO  21:02:22,464 - #22 -
INFO  21:02:22,464 - #38 size
INFO  21:02:22,464 - #33 <
INFO  21:02:22,464 - #38 x
INFO  21:02:22,464 - #30 &&
INFO  21:02:22,464 - #38 x
INFO  21:02:22,464 - #33 <
INFO  21:02:22,464 - #37 0
INFO  21:02:22,464 - #3 )
INFO  21:02:22,464 - #6 {
INFO  21:02:22,464 - #38 putn
INFO  21:02:22,464 - #2 (
INFO  21:02:22,464 - #38 getn
INFO  21:02:22,464 - #2 (
INFO  21:02:22,464 - #22 -
INFO  21:02:22,464 - #38 x
INFO  21:02:22,464 - #3 )
INFO  21:02:22,464 - #23 +
INFO  21:02:22,464 - #37 1
INFO  21:02:22,465 - #3 )
INFO  21:02:22,465 - #17 ;
INFO  21:02:22,465 - #7 }
INFO  21:02:22,465 - #9 read
INFO  21:02:22,465 - #2 (
INFO  21:02:22,465 - #38 x
INFO  21:02:22,465 - #3 )
INFO  21:02:22,466 - #17 ;
INFO  21:02:22,466 - #7 }
INFO  21:02:22,466 - #44 while
INFO  21:02:22,466 - #2 (
INFO  21:02:22,466 - #39 true
INFO  21:02:22,466 - #3 )
INFO  21:02:22,466 - #17 ;
INFO  21:02:22,466 - #10 print
INFO  21:02:22,466 - #2 (
INFO  21:02:22,467 - #38 x
INFO  21:02:22,467 - #33 <
INFO  21:02:22,467 - #37 0
INFO  21:02:22,467 - #20 ?
INFO  21:02:22,467 - #40 -
INFO  21:02:22,468 - #18 :
INFO  21:02:22,468 - #40 +
INFO  21:02:22,468 - #3 )
INFO  21:02:22,469 - #17 ;
INFO  21:02:22,469 - #7 }
INFO  21:02:22,469 - #7 }
INFO  21:02:22,523 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  21:02:22,523 - Deklarisana promenljiva pos na liniji 3
INFO  21:02:22,523 - Deklarisana promenljiva neg na liniji 3
INFO  21:02:22,524 - Obradjuje se funkcija putp na liniji 4
