INFO  01:13:04,377 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:13:04,443 - #8 program
INFO  01:13:04,443 - #38 p
INFO  01:13:04,444 - #16 const
INFO  01:13:04,445 - #38 int
INFO  01:13:04,445 - #38 size
INFO  01:13:04,446 - #21 =
INFO  01:13:04,446 - #37 10
INFO  01:13:04,447 - #17 ;
INFO  01:13:04,447 - #38 int
INFO  01:13:04,448 - #38 pos
INFO  01:13:04,448 - #4 [
INFO  01:13:04,448 - #5 ]
INFO  01:13:04,448 - #19 ,
INFO  01:13:04,450 - #38 neg
INFO  01:13:04,450 - #4 [
INFO  01:13:04,450 - #5 ]
INFO  01:13:04,450 - #17 ;
INFO  01:13:04,450 - #6 {
INFO  01:13:04,451 - #15 void
INFO  01:13:04,451 - #38 putp
INFO  01:13:04,453 - #2 (
INFO  01:13:04,453 - #38 int
INFO  01:13:04,453 - #38 a
INFO  01:13:04,453 - #19 ,
INFO  01:13:04,455 - #38 int
INFO  01:13:04,455 - #38 idx
INFO  01:13:04,456 - #3 )
INFO  01:13:04,456 - #6 {
INFO  01:13:04,457 - #38 pos
INFO  01:13:04,458 - #4 [
INFO  01:13:04,458 - #38 idx
INFO  01:13:04,458 - #5 ]
INFO  01:13:04,462 - #21 =
INFO  01:13:04,462 - #38 a
INFO  01:13:04,462 - #17 ;
INFO  01:13:04,462 - #7 }
INFO  01:13:04,463 - #15 void
INFO  01:13:04,464 - #38 putn
INFO  01:13:04,464 - #2 (
INFO  01:13:04,464 - #38 int
INFO  01:13:04,465 - #38 a
INFO  01:13:04,465 - #19 ,
INFO  01:13:04,465 - #38 int
INFO  01:13:04,465 - #38 idx
INFO  01:13:04,465 - #3 )
INFO  01:13:04,465 - #6 {
INFO  01:13:04,466 - #38 neg
INFO  01:13:04,466 - #4 [
INFO  01:13:04,466 - #38 idx
INFO  01:13:04,466 - #5 ]
INFO  01:13:04,466 - #21 =
INFO  01:13:04,466 - #38 a
INFO  01:13:04,466 - #17 ;
INFO  01:13:04,466 - #7 }
INFO  01:13:04,467 - #38 int
INFO  01:13:04,467 - #38 getp
INFO  01:13:04,467 - #2 (
INFO  01:13:04,467 - #38 int
INFO  01:13:04,467 - #38 idx
INFO  01:13:04,467 - #19 ,
INFO  01:13:04,467 - #38 int
INFO  01:13:04,467 - #38 a
INFO  01:13:04,467 - #19 ,
INFO  01:13:04,468 - #38 char
INFO  01:13:04,468 - #38 b
INFO  01:13:04,468 - #19 ,
INFO  01:13:04,468 - #38 int
INFO  01:13:04,468 - #38 c
INFO  01:13:04,468 - #3 )
INFO  01:13:04,468 - #38 int
INFO  01:13:04,468 - #38 d
INFO  01:13:04,468 - #17 ;
INFO  01:13:04,468 - #6 {
INFO  01:13:04,468 - #14 return
INFO  01:13:04,469 - #38 pos
INFO  01:13:04,469 - #4 [
INFO  01:13:04,469 - #38 idx
INFO  01:13:04,469 - #5 ]
INFO  01:13:04,469 - #17 ;
INFO  01:13:04,469 - #7 }
INFO  01:13:04,469 - #38 int
INFO  01:13:04,469 - #38 getn
INFO  01:13:04,469 - #2 (
INFO  01:13:04,469 - #38 int
INFO  01:13:04,470 - #38 idx
INFO  01:13:04,470 - #3 )
INFO  01:13:04,470 - #6 {
INFO  01:13:04,470 - #14 return
INFO  01:13:04,470 - #38 neg
INFO  01:13:04,470 - #4 [
INFO  01:13:04,470 - #38 idx
INFO  01:13:04,470 - #5 ]
INFO  01:13:04,470 - #17 ;
INFO  01:13:04,470 - #7 }
INFO  01:13:04,470 - #15 void
INFO  01:13:04,470 - #38 f
INFO  01:13:04,470 - #2 (
INFO  01:13:04,470 - #38 char
INFO  01:13:04,471 - #38 ch
INFO  01:13:04,471 - #19 ,
INFO  01:13:04,471 - #38 int
INFO  01:13:04,471 - #38 a
INFO  01:13:04,471 - #19 ,
INFO  01:13:04,471 - #38 int
INFO  01:13:04,471 - #38 arg
INFO  01:13:04,471 - #3 )
INFO  01:13:04,471 - #38 int
INFO  01:13:04,471 - #38 x
INFO  01:13:04,471 - #17 ;
INFO  01:13:04,471 - #6 {
INFO  01:13:04,471 - #38 x
INFO  01:13:04,471 - #21 =
INFO  01:13:04,471 - #38 arg
INFO  01:13:04,472 - #17 ;
INFO  01:13:04,472 - #7 }
INFO  01:13:04,472 - #15 void
INFO  01:13:04,472 - #38 main
INFO  01:13:04,472 - #2 (
INFO  01:13:04,472 - #3 )
INFO  01:13:04,472 - #38 int
INFO  01:13:04,473 - #38 x
INFO  01:13:04,473 - #19 ,
INFO  01:13:04,473 - #38 i
INFO  01:13:04,473 - #17 ;
INFO  01:13:04,473 - #38 char
INFO  01:13:04,473 - #38 c
INFO  01:13:04,473 - #17 ;
INFO  01:13:04,473 - #6 {
INFO  01:13:04,473 - #38 pos
INFO  01:13:04,473 - #21 =
INFO  01:13:04,473 - #13 new
INFO  01:13:04,473 - #38 int
INFO  01:13:04,474 - #4 [
INFO  01:13:04,474 - #38 size
INFO  01:13:04,474 - #5 ]
INFO  01:13:04,474 - #17 ;
INFO  01:13:04,474 - #38 neg
INFO  01:13:04,474 - #21 =
INFO  01:13:04,474 - #13 new
INFO  01:13:04,474 - #38 int
INFO  01:13:04,474 - #4 [
INFO  01:13:04,474 - #38 size
INFO  01:13:04,474 - #5 ]
INFO  01:13:04,474 - #17 ;
INFO  01:13:04,475 - #38 i
INFO  01:13:04,475 - #21 =
INFO  01:13:04,475 - #37 0
INFO  01:13:04,475 - #17 ;
INFO  01:13:04,475 - #41 if
INFO  01:13:04,475 - #2 (
INFO  01:13:04,475 - #37 1
INFO  01:13:04,475 - #31 ==
INFO  01:13:04,475 - #37 1
INFO  01:13:04,477 - #3 )
INFO  01:13:04,483 - #6 {
INFO  01:13:04,485 - #10 print
INFO  01:13:04,485 - #2 (
INFO  01:13:04,485 - #37 1
INFO  01:13:04,485 - #3 )
INFO  01:13:04,486 - #17 ;
INFO  01:13:04,487 - #7 }
INFO  01:13:04,487 - #42 else
INFO  01:13:04,487 - #6 {
INFO  01:13:04,487 - #10 print
INFO  01:13:04,493 - #2 (
INFO  01:13:04,493 - #37 2
INFO  01:13:04,494 - #3 )
INFO  01:13:04,494 - #17 ;
INFO  01:13:04,494 - #7 }
INFO  01:13:04,494 - #43 do
INFO  01:13:04,494 - #6 {
INFO  01:13:04,494 - #38 putp
INFO  01:13:04,494 - #2 (
INFO  01:13:04,495 - #37 0
INFO  01:13:04,495 - #19 ,
INFO  01:13:04,495 - #38 i
INFO  01:13:04,495 - #3 )
INFO  01:13:04,496 - #17 ;
INFO  01:13:04,496 - #38 putn
INFO  01:13:04,496 - #2 (
INFO  01:13:04,497 - #37 0
INFO  01:13:04,497 - #19 ,
INFO  01:13:04,497 - #38 i
INFO  01:13:04,497 - #3 )
INFO  01:13:04,497 - #17 ;
INFO  01:13:04,497 - #38 i
INFO  01:13:04,497 - #27 ++
INFO  01:13:04,497 - #17 ;
INFO  01:13:04,497 - #7 }
INFO  01:13:04,498 - #44 while
INFO  01:13:04,498 - #2 (
INFO  01:13:04,498 - #38 i
INFO  01:13:04,498 - #33 <
INFO  01:13:04,498 - #38 size
INFO  01:13:04,499 - #3 )
INFO  01:13:04,499 - #17 ;
INFO  01:13:04,499 - #38 f
INFO  01:13:04,499 - #2 (
INFO  01:13:04,499 - #38 c
INFO  01:13:04,499 - #19 ,
INFO  01:13:04,499 - #38 x
INFO  01:13:04,499 - #19 ,
INFO  01:13:04,499 - #38 i
INFO  01:13:04,499 - #3 )
INFO  01:13:04,500 - #17 ;
INFO  01:13:04,500 - #9 read
INFO  01:13:04,500 - #2 (
INFO  01:13:04,500 - #38 x
INFO  01:13:04,500 - #3 )
INFO  01:13:04,500 - #17 ;
INFO  01:13:04,500 - #43 do
INFO  01:13:04,500 - #6 {
INFO  01:13:04,500 - #41 if
INFO  01:13:04,500 - #2 (
INFO  01:13:04,500 - #38 x
INFO  01:13:04,500 - #34 <=
INFO  01:13:04,500 - #37 0
INFO  01:13:04,501 - #3 )
INFO  01:13:04,501 - #11 break
INFO  01:13:04,501 - #17 ;
INFO  01:13:04,501 - #41 if
INFO  01:13:04,502 - #2 (
INFO  01:13:04,502 - #37 0
INFO  01:13:04,502 - #34 <=
INFO  01:13:04,502 - #38 x
INFO  01:13:04,502 - #30 &&
INFO  01:13:04,503 - #38 x
INFO  01:13:04,503 - #33 <
INFO  01:13:04,503 - #38 size
INFO  01:13:04,503 - #3 )
INFO  01:13:04,503 - #6 {
INFO  01:13:04,503 - #38 putp
INFO  01:13:04,503 - #2 (
INFO  01:13:04,503 - #38 getp
INFO  01:13:04,503 - #2 (
INFO  01:13:04,503 - #38 x
INFO  01:13:04,503 - #19 ,
INFO  01:13:04,503 - #38 i
INFO  01:13:04,504 - #19 ,
INFO  01:13:04,504 - #38 c
INFO  01:13:04,504 - #19 ,
INFO  01:13:04,504 - #37 1
INFO  01:13:04,504 - #3 )
INFO  01:13:04,504 - #23 +
INFO  01:13:04,504 - #37 1
INFO  01:13:04,507 - #3 )
INFO  01:13:04,507 - #17 ;
INFO  01:13:04,507 - #7 }
INFO  01:13:04,507 - #42 else
INFO  01:13:04,507 - #41 if
INFO  01:13:04,507 - #2 (
INFO  01:13:04,507 - #22 -
INFO  01:13:04,507 - #38 size
INFO  01:13:04,507 - #33 <
INFO  01:13:04,508 - #38 x
INFO  01:13:04,508 - #30 &&
INFO  01:13:04,508 - #38 x
INFO  01:13:04,508 - #33 <
INFO  01:13:04,509 - #37 0
INFO  01:13:04,509 - #3 )
INFO  01:13:04,509 - #6 {
INFO  01:13:04,509 - #38 putn
INFO  01:13:04,509 - #2 (
INFO  01:13:04,509 - #38 getn
INFO  01:13:04,509 - #2 (
INFO  01:13:04,509 - #22 -
INFO  01:13:04,509 - #38 x
INFO  01:13:04,509 - #3 )
INFO  01:13:04,509 - #23 +
INFO  01:13:04,510 - #37 1
INFO  01:13:04,510 - #3 )
INFO  01:13:04,510 - #17 ;
INFO  01:13:04,510 - #7 }
INFO  01:13:04,510 - #9 read
INFO  01:13:04,510 - #2 (
INFO  01:13:04,510 - #38 x
INFO  01:13:04,510 - #3 )
INFO  01:13:04,511 - #17 ;
INFO  01:13:04,511 - #7 }
INFO  01:13:04,511 - #44 while
INFO  01:13:04,511 - #2 (
INFO  01:13:04,511 - #39 true
INFO  01:13:04,511 - #3 )
INFO  01:13:04,511 - #17 ;
INFO  01:13:04,511 - #10 print
INFO  01:13:04,511 - #2 (
INFO  01:13:04,511 - #38 x
INFO  01:13:04,512 - #33 <
INFO  01:13:04,512 - #37 0
INFO  01:13:04,512 - #20 ?
INFO  01:13:04,512 - #40 -
INFO  01:13:04,512 - #18 :
INFO  01:13:04,512 - #40 +
INFO  01:13:04,512 - #3 )
INFO  01:13:04,513 - #17 ;
INFO  01:13:04,513 - #7 }
INFO  01:13:04,513 - #7 }
INFO  01:13:04,536 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:13:04,536 - Deklarisana promenljiva pos na liniji 3
INFO  01:13:04,536 - Deklarisana promenljiva neg na liniji 3
INFO  01:13:04,536 - Obradjuje se funkcija putp na liniji 4
INFO  01:13:04,537 - Obradjuje se funkcija putn na liniji 7
INFO  01:13:04,537 - Obradjuje se funkcija getp na liniji 10
INFO  01:13:04,537 - Deklarisana promenljiva d na liniji 10
INFO  01:13:04,538 - Obradjuje se funkcija getn na liniji 13
INFO  01:13:04,538 - Obradjuje se funkcija f na liniji 16
INFO  01:13:04,538 - Deklarisana promenljiva x na liniji 17
INFO  01:13:04,538 - Obradjuje se funkcija main na liniji 20
INFO  01:13:04,538 - Deklarisana promenljiva x na liniji 20
INFO  01:13:04,538 - Deklarisana promenljiva i na liniji 20
INFO  01:13:04,538 - Deklarisana promenljiva c na liniji 21
INFO  01:13:04,539 - Pronadjen poziv funkcije putp na liniji 31
INFO  01:13:04,539 - Pronadjen poziv funkcije putn na liniji 32
INFO  01:13:04,539 - Pronadjen poziv funkcije f na liniji 35
INFO  01:13:04,539 - Pronadjen poziv funkcije getp na liniji 40
INFO  01:13:04,541 - Pronadjen poziv funkcije putp na liniji 40
INFO  01:13:04,541 - Pronadjen poziv funkcije getn na liniji 42
INFO  01:13:04,541 - Pronadjen poziv funkcije putn na liniji 42
INFO  01:13:04,541 - Print calls = 3
INFO  01:13:04,543 - Generating bytecode file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
