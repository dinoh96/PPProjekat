INFO  22:33:51,539 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  22:33:51,621 - #8 program
INFO  22:33:51,621 - #38 p
INFO  22:33:51,621 - #16 const
INFO  22:33:51,623 - #38 int
INFO  22:33:51,623 - #38 size
INFO  22:33:51,623 - #21 =
INFO  22:33:51,624 - #37 10
INFO  22:33:51,624 - #17 ;
INFO  22:33:51,625 - #38 int
INFO  22:33:51,626 - #38 pos
INFO  22:33:51,626 - #4 [
INFO  22:33:51,626 - #5 ]
INFO  22:33:51,626 - #19 ,
INFO  22:33:51,628 - #38 neg
INFO  22:33:51,628 - #4 [
INFO  22:33:51,628 - #5 ]
INFO  22:33:51,628 - #17 ;
INFO  22:33:51,628 - #6 {
INFO  22:33:51,630 - #15 void
INFO  22:33:51,633 - #38 putp
INFO  22:33:51,634 - #2 (
INFO  22:33:51,635 - #38 int
INFO  22:33:51,636 - #38 a
INFO  22:33:51,636 - #19 ,
INFO  22:33:51,638 - #38 int
INFO  22:33:51,638 - #38 idx
INFO  22:33:51,638 - #3 )
INFO  22:33:51,638 - #6 {
INFO  22:33:51,640 - #38 pos
INFO  22:33:51,641 - #4 [
INFO  22:33:51,641 - #38 idx
INFO  22:33:51,643 - #5 ]
INFO  22:33:51,649 - #21 =
INFO  22:33:51,651 - #38 a
INFO  22:33:51,651 - #17 ;
INFO  22:33:51,651 - #7 }
INFO  22:33:51,652 - #15 void
INFO  22:33:51,660 - #38 putn
INFO  22:33:51,661 - #2 (
INFO  22:33:51,661 - #38 int
INFO  22:33:51,662 - #38 a
INFO  22:33:51,663 - #19 ,
INFO  22:33:51,666 - #38 int
INFO  22:33:51,666 - #38 idx
INFO  22:33:51,667 - #3 )
INFO  22:33:51,667 - #6 {
INFO  22:33:51,667 - #38 neg
INFO  22:33:51,667 - #4 [
INFO  22:33:51,668 - #38 idx
INFO  22:33:51,670 - #5 ]
INFO  22:33:51,671 - #21 =
INFO  22:33:51,672 - #38 a
INFO  22:33:51,673 - #17 ;
INFO  22:33:51,676 - #7 }
INFO  22:33:51,677 - #38 int
INFO  22:33:51,677 - #38 getp
INFO  22:33:51,678 - #2 (
INFO  22:33:51,678 - #38 int
INFO  22:33:51,678 - #38 idx
INFO  22:33:51,678 - #3 )
INFO  22:33:51,679 - #6 {
INFO  22:33:51,679 - #14 return
INFO  22:33:51,679 - #38 pos
INFO  22:33:51,681 - #4 [
INFO  22:33:51,681 - #38 idx
INFO  22:33:51,682 - #5 ]
INFO  22:33:51,682 - #17 ;
INFO  22:33:51,684 - #7 }
INFO  22:33:51,684 - #38 int
INFO  22:33:51,684 - #38 getn
INFO  22:33:51,684 - #2 (
INFO  22:33:51,685 - #38 int
INFO  22:33:51,685 - #38 idx
INFO  22:33:51,685 - #3 )
INFO  22:33:51,685 - #6 {
INFO  22:33:51,685 - #14 return
INFO  22:33:51,687 - #38 neg
INFO  22:33:51,687 - #4 [
INFO  22:33:51,687 - #38 idx
INFO  22:33:51,688 - #5 ]
INFO  22:33:51,688 - #17 ;
INFO  22:33:51,690 - #7 }
INFO  22:33:51,690 - #15 void
INFO  22:33:51,691 - #38 f
INFO  22:33:51,692 - #2 (
INFO  22:33:51,693 - #38 char
INFO  22:33:51,693 - #38 ch
INFO  22:33:51,693 - #19 ,
INFO  22:33:51,695 - #38 int
INFO  22:33:51,695 - #38 a
INFO  22:33:51,695 - #19 ,
INFO  22:33:51,696 - #38 int
INFO  22:33:51,697 - #38 arg
INFO  22:33:51,698 - #3 )
INFO  22:33:51,699 - #38 int
INFO  22:33:51,700 - #38 x
INFO  22:33:51,701 - #17 ;
INFO  22:33:51,702 - #6 {
INFO  22:33:51,702 - #38 x
INFO  22:33:51,703 - #21 =
INFO  22:33:51,711 - #38 arg
INFO  22:33:51,711 - #17 ;
INFO  22:33:51,712 - #7 }
INFO  22:33:51,712 - #15 void
INFO  22:33:51,712 - #38 main
INFO  22:33:51,712 - #2 (
INFO  22:33:51,713 - #3 )
INFO  22:33:51,714 - #38 int
INFO  22:33:51,714 - #38 x
INFO  22:33:51,714 - #19 ,
INFO  22:33:51,715 - #38 i
INFO  22:33:51,716 - #17 ;
INFO  22:33:51,716 - #38 char
INFO  22:33:51,716 - #38 c
INFO  22:33:51,717 - #17 ;
INFO  22:33:51,718 - #6 {
INFO  22:33:51,718 - #38 pos
INFO  22:33:51,718 - #21 =
INFO  22:33:51,718 - #13 new
INFO  22:33:51,720 - #38 int
INFO  22:33:51,720 - #4 [
INFO  22:33:51,720 - #38 size
INFO  22:33:51,720 - #5 ]
INFO  22:33:51,721 - #17 ;
INFO  22:33:51,721 - #38 neg
INFO  22:33:51,721 - #21 =
INFO  22:33:51,722 - #13 new
INFO  22:33:51,738 - #38 int
INFO  22:33:51,740 - #4 [
INFO  22:33:51,740 - #38 size
INFO  22:33:51,740 - #5 ]
INFO  22:33:51,740 - #17 ;
INFO  22:33:51,740 - #38 i
INFO  22:33:51,745 - #21 =
INFO  22:33:51,745 - #37 0
INFO  22:33:51,746 - #17 ;
INFO  22:33:51,751 - #41 if
INFO  22:33:51,751 - #2 (
INFO  22:33:51,751 - #37 1
INFO  22:33:51,751 - #31 ==
INFO  22:33:51,751 - #37 1
INFO  22:33:51,753 - #3 )
INFO  22:33:51,765 - #6 {
INFO  22:33:51,769 - #10 print
INFO  22:33:51,769 - #2 (
INFO  22:33:51,770 - #37 1
INFO  22:33:51,770 - #3 )
INFO  22:33:51,771 - #17 ;
INFO  22:33:51,771 - #7 }
INFO  22:33:51,771 - #42 else
INFO  22:33:51,772 - #6 {
INFO  22:33:51,772 - #10 print
INFO  22:33:51,773 - #2 (
INFO  22:33:51,773 - #37 2
INFO  22:33:51,773 - #3 )
INFO  22:33:51,773 - #17 ;
INFO  22:33:51,773 - #7 }
INFO  22:33:51,774 - #43 do
INFO  22:33:51,774 - #6 {
INFO  22:33:51,774 - #38 putp
INFO  22:33:51,774 - #2 (
INFO  22:33:51,775 - #37 0
INFO  22:33:51,775 - #19 ,
INFO  22:33:51,775 - #38 i
INFO  22:33:51,775 - #3 )
INFO  22:33:51,777 - #17 ;
INFO  22:33:51,777 - #38 putn
INFO  22:33:51,778 - #2 (
INFO  22:33:51,778 - #37 0
INFO  22:33:51,778 - #19 ,
INFO  22:33:51,778 - #38 i
INFO  22:33:51,778 - #3 )
INFO  22:33:51,779 - #17 ;
INFO  22:33:51,779 - #38 i
INFO  22:33:51,779 - #27 ++
INFO  22:33:51,779 - #17 ;
INFO  22:33:51,779 - #7 }
INFO  22:33:51,779 - #44 while
INFO  22:33:51,779 - #2 (
INFO  22:33:51,779 - #38 i
INFO  22:33:51,779 - #33 <
INFO  22:33:51,779 - #38 size
INFO  22:33:51,780 - #3 )
INFO  22:33:51,780 - #17 ;
INFO  22:33:51,780 - #38 f
INFO  22:33:51,781 - #2 (
INFO  22:33:51,781 - #38 c
INFO  22:33:51,781 - #19 ,
INFO  22:33:51,781 - #38 x
INFO  22:33:51,781 - #19 ,
INFO  22:33:51,781 - #38 i
INFO  22:33:51,781 - #3 )
INFO  22:33:51,781 - #17 ;
INFO  22:33:51,781 - #9 read
INFO  22:33:51,781 - #2 (
INFO  22:33:51,781 - #38 x
INFO  22:33:51,781 - #3 )
INFO  22:33:51,782 - #17 ;
INFO  22:33:51,782 - #43 do
INFO  22:33:51,782 - #6 {
INFO  22:33:51,782 - #41 if
INFO  22:33:51,782 - #2 (
INFO  22:33:51,782 - #38 x
INFO  22:33:51,782 - #34 <=
INFO  22:33:51,782 - #37 0
INFO  22:33:51,783 - #3 )
INFO  22:33:51,783 - #11 break
INFO  22:33:51,784 - #17 ;
INFO  22:33:51,784 - #41 if
INFO  22:33:51,812 - #2 (
INFO  22:33:51,813 - #37 0
INFO  22:33:51,813 - #34 <=
INFO  22:33:51,813 - #38 x
INFO  22:33:51,813 - #30 &&
INFO  22:33:51,814 - #38 x
INFO  22:33:51,814 - #33 <
INFO  22:33:51,814 - #38 size
INFO  22:33:51,814 - #3 )
INFO  22:33:51,814 - #6 {
INFO  22:33:51,814 - #38 putp
INFO  22:33:51,815 - #2 (
INFO  22:33:51,815 - #38 getp
INFO  22:33:51,815 - #2 (
INFO  22:33:51,815 - #38 x
INFO  22:33:51,815 - #3 )
INFO  22:33:51,816 - #23 +
INFO  22:33:51,816 - #37 1
INFO  22:33:51,822 - #3 )
INFO  22:33:51,822 - #17 ;
INFO  22:33:51,823 - #7 }
INFO  22:33:51,823 - #42 else
INFO  22:33:51,823 - #41 if
INFO  22:33:51,823 - #2 (
INFO  22:33:51,823 - #22 -
INFO  22:33:51,823 - #38 size
INFO  22:33:51,823 - #33 <
INFO  22:33:51,823 - #38 x
INFO  22:33:51,824 - #30 &&
INFO  22:33:51,824 - #38 x
INFO  22:33:51,824 - #33 <
INFO  22:33:51,824 - #37 0
INFO  22:33:51,824 - #3 )
INFO  22:33:51,824 - #6 {
INFO  22:33:51,824 - #38 putn
INFO  22:33:51,825 - #2 (
INFO  22:33:51,825 - #38 getn
INFO  22:33:51,825 - #2 (
INFO  22:33:51,825 - #22 -
INFO  22:33:51,825 - #38 x
INFO  22:33:51,825 - #3 )
INFO  22:33:51,826 - #23 +
INFO  22:33:51,826 - #37 1
INFO  22:33:51,826 - #3 )
INFO  22:33:51,826 - #17 ;
INFO  22:33:51,826 - #7 }
INFO  22:33:51,826 - #9 read
INFO  22:33:51,826 - #2 (
INFO  22:33:51,826 - #38 x
INFO  22:33:51,826 - #3 )
INFO  22:33:51,826 - #17 ;
INFO  22:33:51,827 - #7 }
INFO  22:33:51,827 - #44 while
INFO  22:33:51,827 - #2 (
INFO  22:33:51,827 - #39 true
INFO  22:33:51,827 - #3 )
INFO  22:33:51,827 - #17 ;
INFO  22:33:51,827 - #10 print
INFO  22:33:51,827 - #2 (
INFO  22:33:51,827 - #38 x
INFO  22:33:51,827 - #33 <
INFO  22:33:51,827 - #37 0
INFO  22:33:51,827 - #20 ?
INFO  22:33:51,828 - #40 -
INFO  22:33:51,828 - #18 :
INFO  22:33:51,828 - #40 +
INFO  22:33:51,828 - #3 )
INFO  22:33:51,830 - #17 ;
INFO  22:33:51,830 - #7 }
INFO  22:33:51,830 - #7 }
INFO  22:33:51,920 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  22:33:51,921 - Deklarisana promenljiva pos na liniji 3
INFO  22:33:51,921 - Deklarisana promenljiva neg na liniji 3
INFO  22:33:51,921 - Obradjuje se funkcija putp na liniji 4
