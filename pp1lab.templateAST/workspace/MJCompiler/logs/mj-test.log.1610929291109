INFO  01:20:45,204 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:20:45,272 - #8 program
INFO  01:20:45,273 - #38 p
INFO  01:20:45,273 - #16 const
INFO  01:20:45,275 - #38 int
INFO  01:20:45,275 - #38 size
INFO  01:20:45,276 - #21 =
INFO  01:20:45,276 - #37 10
INFO  01:20:45,276 - #17 ;
INFO  01:20:45,277 - #38 int
INFO  01:20:45,278 - #38 pos
INFO  01:20:45,278 - #4 [
INFO  01:20:45,279 - #5 ]
INFO  01:20:45,279 - #19 ,
INFO  01:20:45,281 - #38 neg
INFO  01:20:45,281 - #4 [
INFO  01:20:45,282 - #5 ]
INFO  01:20:45,282 - #17 ;
INFO  01:20:45,282 - #6 {
INFO  01:20:45,283 - #15 void
INFO  01:20:45,285 - #38 putp
INFO  01:20:45,286 - #2 (
INFO  01:20:45,286 - #38 int
INFO  01:20:45,286 - #38 a
INFO  01:20:45,286 - #19 ,
INFO  01:20:45,288 - #38 int
INFO  01:20:45,289 - #38 idx
INFO  01:20:45,289 - #3 )
INFO  01:20:45,289 - #6 {
INFO  01:20:45,290 - #38 pos
INFO  01:20:45,291 - #4 [
INFO  01:20:45,291 - #38 idx
INFO  01:20:45,291 - #5 ]
INFO  01:20:45,294 - #21 =
INFO  01:20:45,295 - #38 a
INFO  01:20:45,295 - #17 ;
INFO  01:20:45,295 - #7 }
INFO  01:20:45,296 - #15 void
INFO  01:20:45,296 - #38 putn
INFO  01:20:45,297 - #2 (
INFO  01:20:45,297 - #38 int
INFO  01:20:45,297 - #38 a
INFO  01:20:45,297 - #19 ,
INFO  01:20:45,297 - #38 int
INFO  01:20:45,298 - #38 idx
INFO  01:20:45,298 - #3 )
INFO  01:20:45,298 - #6 {
INFO  01:20:45,298 - #38 neg
INFO  01:20:45,298 - #4 [
INFO  01:20:45,298 - #38 idx
INFO  01:20:45,298 - #5 ]
INFO  01:20:45,299 - #21 =
INFO  01:20:45,299 - #38 a
INFO  01:20:45,299 - #17 ;
INFO  01:20:45,299 - #7 }
INFO  01:20:45,299 - #38 int
INFO  01:20:45,299 - #38 getp
INFO  01:20:45,299 - #2 (
INFO  01:20:45,300 - #38 int
INFO  01:20:45,300 - #38 idx
INFO  01:20:45,300 - #3 )
INFO  01:20:45,300 - #38 int
INFO  01:20:45,300 - #38 d
INFO  01:20:45,300 - #17 ;
INFO  01:20:45,300 - #6 {
INFO  01:20:45,301 - #14 return
INFO  01:20:45,301 - #38 pos
INFO  01:20:45,301 - #4 [
INFO  01:20:45,302 - #38 idx
INFO  01:20:45,302 - #5 ]
INFO  01:20:45,302 - #17 ;
INFO  01:20:45,303 - #7 }
INFO  01:20:45,303 - #38 int
INFO  01:20:45,303 - #38 getn
INFO  01:20:45,304 - #2 (
INFO  01:20:45,304 - #38 int
INFO  01:20:45,304 - #38 idx
INFO  01:20:45,304 - #3 )
INFO  01:20:45,304 - #6 {
INFO  01:20:45,304 - #14 return
INFO  01:20:45,305 - #38 neg
INFO  01:20:45,305 - #4 [
INFO  01:20:45,305 - #38 idx
INFO  01:20:45,306 - #5 ]
INFO  01:20:45,307 - #17 ;
INFO  01:20:45,308 - #7 }
INFO  01:20:45,308 - #15 void
INFO  01:20:45,308 - #38 f
INFO  01:20:45,308 - #2 (
INFO  01:20:45,308 - #38 char
INFO  01:20:45,309 - #38 ch
INFO  01:20:45,309 - #19 ,
INFO  01:20:45,309 - #38 int
INFO  01:20:45,309 - #38 a
INFO  01:20:45,310 - #19 ,
INFO  01:20:45,310 - #38 int
INFO  01:20:45,310 - #38 arg
INFO  01:20:45,310 - #3 )
INFO  01:20:45,310 - #38 int
INFO  01:20:45,310 - #38 x
INFO  01:20:45,310 - #17 ;
INFO  01:20:45,311 - #6 {
INFO  01:20:45,311 - #38 x
INFO  01:20:45,311 - #21 =
INFO  01:20:45,311 - #38 arg
INFO  01:20:45,311 - #17 ;
INFO  01:20:45,311 - #7 }
INFO  01:20:45,311 - #15 void
INFO  01:20:45,311 - #38 main
INFO  01:20:45,312 - #2 (
INFO  01:20:45,312 - #3 )
INFO  01:20:45,313 - #38 int
INFO  01:20:45,313 - #38 x
INFO  01:20:45,313 - #19 ,
INFO  01:20:45,313 - #38 i
INFO  01:20:45,313 - #17 ;
INFO  01:20:45,314 - #38 char
INFO  01:20:45,314 - #38 c
INFO  01:20:45,315 - #17 ;
INFO  01:20:45,315 - #6 {
INFO  01:20:45,315 - #38 pos
INFO  01:20:45,315 - #21 =
INFO  01:20:45,315 - #13 new
INFO  01:20:45,315 - #38 int
INFO  01:20:45,315 - #4 [
INFO  01:20:45,315 - #38 size
INFO  01:20:45,316 - #5 ]
INFO  01:20:45,316 - #17 ;
INFO  01:20:45,316 - #38 neg
INFO  01:20:45,316 - #21 =
INFO  01:20:45,316 - #13 new
INFO  01:20:45,316 - #38 int
INFO  01:20:45,317 - #4 [
INFO  01:20:45,317 - #38 size
INFO  01:20:45,317 - #5 ]
INFO  01:20:45,317 - #17 ;
INFO  01:20:45,317 - #38 i
INFO  01:20:45,317 - #21 =
INFO  01:20:45,317 - #37 0
INFO  01:20:45,317 - #17 ;
INFO  01:20:45,318 - #41 if
INFO  01:20:45,318 - #2 (
INFO  01:20:45,318 - #37 1
INFO  01:20:45,318 - #31 ==
INFO  01:20:45,318 - #37 1
INFO  01:20:45,319 - #3 )
INFO  01:20:45,322 - #6 {
INFO  01:20:45,322 - #10 print
INFO  01:20:45,322 - #2 (
INFO  01:20:45,323 - #37 1
INFO  01:20:45,323 - #3 )
INFO  01:20:45,323 - #17 ;
INFO  01:20:45,323 - #7 }
INFO  01:20:45,324 - #42 else
INFO  01:20:45,324 - #6 {
INFO  01:20:45,324 - #10 print
INFO  01:20:45,324 - #2 (
INFO  01:20:45,324 - #37 2
INFO  01:20:45,324 - #3 )
INFO  01:20:45,324 - #17 ;
INFO  01:20:45,324 - #7 }
INFO  01:20:45,324 - #43 do
INFO  01:20:45,325 - #6 {
INFO  01:20:45,325 - #38 putp
INFO  01:20:45,325 - #2 (
INFO  01:20:45,331 - #37 0
INFO  01:20:45,332 - #19 ,
INFO  01:20:45,332 - #38 i
INFO  01:20:45,333 - #3 )
INFO  01:20:45,334 - #17 ;
INFO  01:20:45,335 - #38 putn
INFO  01:20:45,335 - #2 (
INFO  01:20:45,335 - #37 0
INFO  01:20:45,335 - #19 ,
INFO  01:20:45,336 - #38 i
INFO  01:20:45,336 - #3 )
INFO  01:20:45,336 - #17 ;
INFO  01:20:45,336 - #38 i
INFO  01:20:45,336 - #27 ++
INFO  01:20:45,336 - #17 ;
INFO  01:20:45,337 - #7 }
INFO  01:20:45,337 - #44 while
INFO  01:20:45,337 - #2 (
INFO  01:20:45,337 - #38 i
INFO  01:20:45,337 - #33 <
INFO  01:20:45,337 - #38 size
INFO  01:20:45,338 - #3 )
INFO  01:20:45,338 - #17 ;
INFO  01:20:45,338 - #38 f
INFO  01:20:45,338 - #2 (
INFO  01:20:45,338 - #38 c
INFO  01:20:45,338 - #19 ,
INFO  01:20:45,339 - #38 x
INFO  01:20:45,339 - #19 ,
INFO  01:20:45,339 - #38 i
INFO  01:20:45,339 - #3 )
INFO  01:20:45,339 - #17 ;
INFO  01:20:45,339 - #9 read
INFO  01:20:45,339 - #2 (
INFO  01:20:45,339 - #38 x
INFO  01:20:45,339 - #3 )
INFO  01:20:45,339 - #17 ;
INFO  01:20:45,339 - #43 do
INFO  01:20:45,339 - #6 {
INFO  01:20:45,339 - #41 if
INFO  01:20:45,340 - #2 (
INFO  01:20:45,340 - #38 x
INFO  01:20:45,340 - #34 <=
INFO  01:20:45,340 - #37 0
INFO  01:20:45,340 - #3 )
INFO  01:20:45,340 - #11 break
INFO  01:20:45,340 - #17 ;
INFO  01:20:45,340 - #41 if
INFO  01:20:45,341 - #2 (
INFO  01:20:45,341 - #37 0
INFO  01:20:45,341 - #34 <=
INFO  01:20:45,341 - #38 x
INFO  01:20:45,341 - #30 &&
INFO  01:20:45,341 - #38 x
INFO  01:20:45,341 - #33 <
INFO  01:20:45,341 - #38 size
INFO  01:20:45,341 - #3 )
INFO  01:20:45,342 - #6 {
INFO  01:20:45,342 - #38 putp
INFO  01:20:45,342 - #2 (
INFO  01:20:45,342 - #38 getp
INFO  01:20:45,342 - #2 (
INFO  01:20:45,342 - #38 x
INFO  01:20:45,342 - #3 )
INFO  01:20:45,342 - #23 +
INFO  01:20:45,342 - #37 1
INFO  01:20:45,344 - #3 )
INFO  01:20:45,344 - #17 ;
INFO  01:20:45,344 - #7 }
INFO  01:20:45,344 - #42 else
INFO  01:20:45,344 - #41 if
INFO  01:20:45,344 - #2 (
INFO  01:20:45,344 - #22 -
INFO  01:20:45,344 - #38 size
INFO  01:20:45,345 - #33 <
INFO  01:20:45,345 - #38 x
INFO  01:20:45,345 - #30 &&
INFO  01:20:45,345 - #38 x
INFO  01:20:45,345 - #33 <
INFO  01:20:45,345 - #37 0
INFO  01:20:45,345 - #3 )
INFO  01:20:45,345 - #6 {
INFO  01:20:45,345 - #38 putn
INFO  01:20:45,345 - #2 (
INFO  01:20:45,346 - #38 getn
INFO  01:20:45,346 - #2 (
INFO  01:20:45,346 - #22 -
INFO  01:20:45,346 - #38 x
INFO  01:20:45,346 - #3 )
INFO  01:20:45,346 - #23 +
INFO  01:20:45,346 - #37 1
INFO  01:20:45,346 - #3 )
INFO  01:20:45,346 - #17 ;
INFO  01:20:45,347 - #7 }
INFO  01:20:45,347 - #9 read
INFO  01:20:45,347 - #2 (
INFO  01:20:45,347 - #38 x
INFO  01:20:45,347 - #3 )
INFO  01:20:45,347 - #17 ;
INFO  01:20:45,347 - #7 }
INFO  01:20:45,347 - #44 while
INFO  01:20:45,347 - #2 (
INFO  01:20:45,347 - #39 true
INFO  01:20:45,347 - #3 )
INFO  01:20:45,348 - #17 ;
INFO  01:20:45,348 - #10 print
INFO  01:20:45,348 - #2 (
INFO  01:20:45,348 - #38 x
INFO  01:20:45,348 - #33 <
INFO  01:20:45,348 - #37 0
INFO  01:20:45,348 - #20 ?
INFO  01:20:45,348 - #40 -
INFO  01:20:45,349 - #18 :
INFO  01:20:45,349 - #40 +
INFO  01:20:45,349 - #3 )
INFO  01:20:45,350 - #17 ;
INFO  01:20:45,350 - #7 }
INFO  01:20:45,350 - #7 }
INFO  01:20:45,362 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:20:45,362 - Deklarisana promenljiva pos na liniji 3
INFO  01:20:45,362 - Deklarisana promenljiva neg na liniji 3
INFO  01:20:45,362 - Obradjuje se funkcija putp na liniji 4
INFO  01:20:45,362 - Obradjuje se funkcija putn na liniji 7
INFO  01:20:45,362 - Obradjuje se funkcija getp na liniji 10
INFO  01:20:45,363 - Deklarisana promenljiva d na liniji 10
INFO  01:20:45,363 - Obradjuje se funkcija getn na liniji 13
INFO  01:20:45,363 - Obradjuje se funkcija f na liniji 16
INFO  01:20:45,364 - Deklarisana promenljiva x na liniji 17
INFO  01:20:45,364 - Obradjuje se funkcija main na liniji 20
INFO  01:20:45,364 - Deklarisana promenljiva x na liniji 20
INFO  01:20:45,364 - Deklarisana promenljiva i na liniji 20
INFO  01:20:45,364 - Deklarisana promenljiva c na liniji 21
INFO  01:20:45,365 - Pronadjen poziv procedure putp na liniji 31
INFO  01:20:45,367 - Pronadjen poziv procedure putn na liniji 32
INFO  01:20:45,367 - Pronadjen poziv procedure f na liniji 35
INFO  01:20:45,367 - Pronadjen poziv funkcije getp na liniji 40
INFO  01:20:45,372 - Pronadjen poziv procedure putp na liniji 40
ERROR 01:20:45,372 - Semanticka greska na liniji 40 : Neodgovarajuc broj aktuelnih parametera (1) i formalnih parametara (2) za funkciju putp
INFO  01:20:45,373 - Pronadjen poziv funkcije getn na liniji 42
INFO  01:20:45,373 - Pronadjen poziv procedure putn na liniji 42
ERROR 01:20:45,373 - Semanticka greska na liniji 42 : Neodgovarajuc broj aktuelnih parametera (1) i formalnih parametara (2) za funkciju putn
INFO  01:20:45,373 - Print calls = 3
ERROR 01:20:45,374 - Parsiranje NIJE uspesno zavrseno!
