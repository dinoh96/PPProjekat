INFO  01:27:51,611 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:27:51,705 - #8 program
INFO  01:27:51,706 - #38 p
INFO  01:27:51,706 - #16 const
INFO  01:27:51,708 - #38 int
INFO  01:27:51,708 - #38 size
INFO  01:27:51,710 - #21 =
INFO  01:27:51,712 - #37 10
INFO  01:27:51,713 - #17 ;
INFO  01:27:51,715 - #38 boolean
INFO  01:27:51,716 - #38 isFinished
INFO  01:27:51,716 - #17 ;
INFO  01:27:51,718 - #16 const
INFO  01:27:51,719 - #38 char
INFO  01:27:51,719 - #38 yes
INFO  01:27:51,719 - #21 =
INFO  01:27:51,720 - #40 y
INFO  01:27:51,720 - #17 ;
INFO  01:27:51,720 - #38 int
INFO  01:27:51,721 - #38 pos
INFO  01:27:51,721 - #4 [
INFO  01:27:51,723 - #5 ]
INFO  01:27:51,723 - #19 ,
INFO  01:27:51,724 - #38 neg
INFO  01:27:51,724 - #4 [
INFO  01:27:51,724 - #5 ]
INFO  01:27:51,724 - #17 ;
INFO  01:27:51,724 - #6 {
INFO  01:27:51,724 - #15 void
INFO  01:27:51,725 - #38 putp
INFO  01:27:51,725 - #2 (
INFO  01:27:51,725 - #38 int
INFO  01:27:51,726 - #38 a
INFO  01:27:51,726 - #19 ,
INFO  01:27:51,727 - #38 int
INFO  01:27:51,727 - #38 idx
INFO  01:27:51,727 - #3 )
INFO  01:27:51,728 - #6 {
INFO  01:27:51,728 - #38 pos
INFO  01:27:51,729 - #4 [
INFO  01:27:51,729 - #38 idx
INFO  01:27:51,729 - #5 ]
INFO  01:27:51,734 - #21 =
INFO  01:27:51,735 - #38 a
INFO  01:27:51,735 - #17 ;
INFO  01:27:51,735 - #7 }
INFO  01:27:51,736 - #15 void
INFO  01:27:51,737 - #38 putn
INFO  01:27:51,737 - #2 (
INFO  01:27:51,737 - #38 int
INFO  01:27:51,738 - #38 a
INFO  01:27:51,738 - #19 ,
INFO  01:27:51,738 - #38 int
INFO  01:27:51,738 - #38 idx
INFO  01:27:51,738 - #3 )
INFO  01:27:51,738 - #6 {
INFO  01:27:51,739 - #38 neg
INFO  01:27:51,739 - #4 [
INFO  01:27:51,739 - #38 idx
INFO  01:27:51,739 - #5 ]
INFO  01:27:51,739 - #21 =
INFO  01:27:51,739 - #38 a
INFO  01:27:51,739 - #17 ;
INFO  01:27:51,740 - #7 }
INFO  01:27:51,740 - #38 int
INFO  01:27:51,741 - #38 getp
INFO  01:27:51,741 - #2 (
INFO  01:27:51,741 - #38 int
INFO  01:27:51,741 - #38 idx
INFO  01:27:51,741 - #3 )
INFO  01:27:51,741 - #38 int
INFO  01:27:51,741 - #38 d
INFO  01:27:51,741 - #17 ;
INFO  01:27:51,742 - #6 {
INFO  01:27:51,742 - #14 return
INFO  01:27:51,742 - #38 pos
INFO  01:27:51,742 - #4 [
INFO  01:27:51,742 - #38 idx
INFO  01:27:51,742 - #5 ]
INFO  01:27:51,743 - #17 ;
INFO  01:27:51,743 - #7 }
INFO  01:27:51,744 - #38 int
INFO  01:27:51,744 - #38 getn
INFO  01:27:51,744 - #2 (
INFO  01:27:51,744 - #38 int
INFO  01:27:51,744 - #38 idx
INFO  01:27:51,744 - #3 )
INFO  01:27:51,745 - #6 {
INFO  01:27:51,745 - #14 return
INFO  01:27:51,745 - #38 neg
INFO  01:27:51,745 - #4 [
INFO  01:27:51,745 - #38 idx
INFO  01:27:51,745 - #5 ]
INFO  01:27:51,745 - #17 ;
INFO  01:27:51,746 - #7 }
INFO  01:27:51,746 - #15 void
INFO  01:27:51,746 - #38 f
INFO  01:27:51,746 - #2 (
INFO  01:27:51,746 - #38 char
INFO  01:27:51,746 - #38 ch
INFO  01:27:51,746 - #19 ,
INFO  01:27:51,746 - #38 int
INFO  01:27:51,746 - #38 a
INFO  01:27:51,746 - #19 ,
INFO  01:27:51,747 - #38 int
INFO  01:27:51,747 - #38 arg
INFO  01:27:51,747 - #3 )
INFO  01:27:51,747 - #38 int
INFO  01:27:51,747 - #38 x
INFO  01:27:51,747 - #17 ;
INFO  01:27:51,747 - #6 {
INFO  01:27:51,747 - #38 x
INFO  01:27:51,747 - #21 =
INFO  01:27:51,748 - #38 arg
INFO  01:27:51,748 - #17 ;
INFO  01:27:51,748 - #7 }
INFO  01:27:51,748 - #15 void
INFO  01:27:51,749 - #38 main
INFO  01:27:51,749 - #2 (
INFO  01:27:51,749 - #3 )
INFO  01:27:51,749 - #38 int
INFO  01:27:51,750 - #38 x
INFO  01:27:51,750 - #19 ,
INFO  01:27:51,750 - #38 i
INFO  01:27:51,750 - #17 ;
INFO  01:27:51,750 - #38 char
INFO  01:27:51,750 - #38 c
INFO  01:27:51,750 - #17 ;
INFO  01:27:51,750 - #6 {
INFO  01:27:51,751 - #38 pos
INFO  01:27:51,751 - #21 =
INFO  01:27:51,751 - #13 new
INFO  01:27:51,751 - #38 int
INFO  01:27:51,751 - #4 [
INFO  01:27:51,751 - #38 size
INFO  01:27:51,751 - #5 ]
INFO  01:27:51,751 - #17 ;
INFO  01:27:51,751 - #38 neg
INFO  01:27:51,752 - #21 =
INFO  01:27:51,752 - #13 new
INFO  01:27:51,752 - #38 int
INFO  01:27:51,752 - #4 [
INFO  01:27:51,752 - #38 size
INFO  01:27:51,752 - #5 ]
INFO  01:27:51,752 - #17 ;
INFO  01:27:51,752 - #38 i
INFO  01:27:51,752 - #21 =
INFO  01:27:51,752 - #37 0
INFO  01:27:51,752 - #17 ;
INFO  01:27:51,753 - #41 if
INFO  01:27:51,753 - #2 (
INFO  01:27:51,753 - #37 1
INFO  01:27:51,753 - #31 ==
INFO  01:27:51,753 - #37 1
INFO  01:27:51,754 - #3 )
INFO  01:27:51,757 - #6 {
INFO  01:27:51,757 - #10 print
INFO  01:27:51,757 - #2 (
INFO  01:27:51,757 - #37 1
INFO  01:27:51,758 - #3 )
INFO  01:27:51,758 - #17 ;
INFO  01:27:51,758 - #7 }
INFO  01:27:51,758 - #42 else
INFO  01:27:51,758 - #6 {
INFO  01:27:51,759 - #10 print
INFO  01:27:51,766 - #2 (
INFO  01:27:51,766 - #37 2
INFO  01:27:51,766 - #3 )
INFO  01:27:51,766 - #17 ;
INFO  01:27:51,766 - #7 }
INFO  01:27:51,766 - #43 do
INFO  01:27:51,766 - #6 {
INFO  01:27:51,767 - #38 putp
INFO  01:27:51,767 - #2 (
INFO  01:27:51,767 - #37 0
INFO  01:27:51,767 - #19 ,
INFO  01:27:51,767 - #38 i
INFO  01:27:51,767 - #3 )
INFO  01:27:51,768 - #17 ;
INFO  01:27:51,768 - #38 putn
INFO  01:27:51,768 - #2 (
INFO  01:27:51,769 - #37 0
INFO  01:27:51,769 - #19 ,
INFO  01:27:51,769 - #38 i
INFO  01:27:51,769 - #3 )
INFO  01:27:51,769 - #17 ;
INFO  01:27:51,769 - #38 i
INFO  01:27:51,769 - #27 ++
INFO  01:27:51,769 - #17 ;
INFO  01:27:51,769 - #7 }
INFO  01:27:51,769 - #44 while
INFO  01:27:51,769 - #2 (
INFO  01:27:51,770 - #38 i
INFO  01:27:51,770 - #33 <
INFO  01:27:51,770 - #38 size
INFO  01:27:51,771 - #3 )
INFO  01:27:51,771 - #17 ;
INFO  01:27:51,771 - #38 f
INFO  01:27:51,771 - #2 (
INFO  01:27:51,771 - #38 c
INFO  01:27:51,771 - #19 ,
INFO  01:27:51,771 - #38 x
INFO  01:27:51,771 - #19 ,
INFO  01:27:51,772 - #38 i
INFO  01:27:51,772 - #3 )
INFO  01:27:51,772 - #17 ;
INFO  01:27:51,772 - #9 read
INFO  01:27:51,772 - #2 (
INFO  01:27:51,772 - #38 x
INFO  01:27:51,772 - #3 )
INFO  01:27:51,772 - #17 ;
INFO  01:27:51,772 - #43 do
INFO  01:27:51,772 - #6 {
INFO  01:27:51,772 - #41 if
INFO  01:27:51,773 - #2 (
INFO  01:27:51,773 - #38 x
INFO  01:27:51,773 - #34 <=
INFO  01:27:51,773 - #37 0
INFO  01:27:51,773 - #3 )
INFO  01:27:51,774 - #11 break
INFO  01:27:51,774 - #17 ;
INFO  01:27:51,774 - #41 if
INFO  01:27:51,774 - #2 (
INFO  01:27:51,775 - #37 0
INFO  01:27:51,775 - #34 <=
INFO  01:27:51,775 - #38 x
INFO  01:27:51,775 - #30 &&
INFO  01:27:51,775 - #38 x
INFO  01:27:51,775 - #33 <
INFO  01:27:51,775 - #38 size
INFO  01:27:51,775 - #3 )
INFO  01:27:51,775 - #6 {
INFO  01:27:51,775 - #38 putp
INFO  01:27:51,775 - #2 (
INFO  01:27:51,775 - #38 getp
INFO  01:27:51,776 - #2 (
INFO  01:27:51,776 - #38 x
INFO  01:27:51,776 - #3 )
INFO  01:27:51,776 - #23 +
INFO  01:27:51,776 - #37 1
INFO  01:27:51,777 - #19 ,
INFO  01:27:51,777 - #38 x
INFO  01:27:51,777 - #3 )
INFO  01:27:51,777 - #17 ;
INFO  01:27:51,777 - #7 }
INFO  01:27:51,778 - #42 else
INFO  01:27:51,778 - #41 if
INFO  01:27:51,778 - #2 (
INFO  01:27:51,778 - #22 -
INFO  01:27:51,778 - #38 size
INFO  01:27:51,778 - #33 <
INFO  01:27:51,778 - #38 x
INFO  01:27:51,778 - #30 &&
INFO  01:27:51,778 - #38 x
INFO  01:27:51,778 - #33 <
INFO  01:27:51,778 - #37 0
INFO  01:27:51,778 - #3 )
INFO  01:27:51,779 - #6 {
INFO  01:27:51,779 - #38 putn
INFO  01:27:51,779 - #2 (
INFO  01:27:51,779 - #38 getn
INFO  01:27:51,779 - #2 (
INFO  01:27:51,779 - #22 -
INFO  01:27:51,779 - #38 x
INFO  01:27:51,779 - #3 )
INFO  01:27:51,779 - #23 +
INFO  01:27:51,779 - #37 1
INFO  01:27:51,779 - #19 ,
INFO  01:27:51,779 - #38 x
INFO  01:27:51,780 - #3 )
INFO  01:27:51,780 - #17 ;
INFO  01:27:51,780 - #7 }
INFO  01:27:51,780 - #9 read
INFO  01:27:51,780 - #2 (
INFO  01:27:51,780 - #38 x
INFO  01:27:51,780 - #3 )
INFO  01:27:51,781 - #17 ;
INFO  01:27:51,781 - #7 }
INFO  01:27:51,781 - #44 while
INFO  01:27:51,781 - #2 (
INFO  01:27:51,781 - #39 true
INFO  01:27:51,781 - #3 )
INFO  01:27:51,781 - #17 ;
INFO  01:27:51,782 - #10 print
INFO  01:27:51,782 - #2 (
INFO  01:27:51,782 - #38 x
INFO  01:27:51,782 - #33 <
INFO  01:27:51,782 - #37 0
INFO  01:27:51,782 - #20 ?
INFO  01:27:51,782 - #40 -
INFO  01:27:51,782 - #18 :
INFO  01:27:51,782 - #40 +
INFO  01:27:51,782 - #3 )
INFO  01:27:51,783 - #17 ;
INFO  01:27:51,783 - #7 }
INFO  01:27:51,783 - #7 }
INFO  01:27:51,789 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:27:51,790 - Deklarisana promenljiva isFinished na liniji 3
INFO  01:27:51,790 - Deklarisana konstanta yes sa vrednoscu y na liniji 4
INFO  01:27:51,790 - Deklarisana promenljiva pos na liniji 5
INFO  01:27:51,790 - Deklarisana promenljiva neg na liniji 5
INFO  01:27:51,790 - Obradjuje se funkcija putp na liniji 6
INFO  01:27:51,790 - Obradjuje se funkcija putn na liniji 9
INFO  01:27:51,790 - Obradjuje se funkcija getp na liniji 12
INFO  01:27:51,791 - Deklarisana promenljiva d na liniji 12
INFO  01:27:51,791 - Obradjuje se funkcija getn na liniji 15
INFO  01:27:51,791 - Obradjuje se funkcija f na liniji 18
INFO  01:27:51,791 - Deklarisana promenljiva x na liniji 19
INFO  01:27:51,791 - Obradjuje se funkcija main na liniji 22
INFO  01:27:51,791 - Deklarisana promenljiva x na liniji 22
INFO  01:27:51,791 - Deklarisana promenljiva i na liniji 22
INFO  01:27:51,791 - Deklarisana promenljiva c na liniji 23
INFO  01:27:51,791 - Pronadjen poziv procedure putp na liniji 33
INFO  01:27:51,793 - Pronadjen poziv procedure putn na liniji 34
INFO  01:27:51,793 - Pronadjen poziv procedure f na liniji 37
INFO  01:27:51,793 - Pronadjen poziv funkcije getp na liniji 42
INFO  01:27:51,793 - Pronadjen poziv procedure putp na liniji 42
INFO  01:27:51,793 - Pronadjen poziv funkcije getn na liniji 44
INFO  01:27:51,794 - Pronadjen poziv procedure putn na liniji 44
INFO  01:27:51,794 - Print calls = 3
INFO  01:27:51,794 - Generating bytecode file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
