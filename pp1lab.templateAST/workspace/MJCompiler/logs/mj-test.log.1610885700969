INFO  13:10:19,987 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  13:10:20,033 - #8 program
INFO  13:10:20,033 - #38 p
INFO  13:10:20,034 - #16 const
INFO  13:10:20,035 - #38 int
INFO  13:10:20,035 - #38 size
INFO  13:10:20,036 - #21 =
INFO  13:10:20,036 - #37 10
INFO  13:10:20,036 - #17 ;
INFO  13:10:20,037 - #38 int
INFO  13:10:20,037 - #38 pos
INFO  13:10:20,037 - #4 [
INFO  13:10:20,037 - #5 ]
INFO  13:10:20,038 - #19 ,
INFO  13:10:20,039 - #38 neg
INFO  13:10:20,039 - #4 [
INFO  13:10:20,039 - #5 ]
INFO  13:10:20,039 - #17 ;
INFO  13:10:20,039 - #6 {
INFO  13:10:20,040 - #15 void
INFO  13:10:20,041 - #38 putp
INFO  13:10:20,041 - #2 (
INFO  13:10:20,041 - #38 int
INFO  13:10:20,041 - #38 a
INFO  13:10:20,041 - #19 ,
INFO  13:10:20,043 - #38 int
INFO  13:10:20,043 - #38 idx
INFO  13:10:20,043 - #3 )
INFO  13:10:20,043 - #6 {
INFO  13:10:20,045 - #38 pos
INFO  13:10:20,046 - #4 [
INFO  13:10:20,046 - #38 idx
INFO  13:10:20,046 - #5 ]
INFO  13:10:20,048 - #21 =
INFO  13:10:20,049 - #38 a
INFO  13:10:20,049 - #17 ;
INFO  13:10:20,049 - #7 }
INFO  13:10:20,049 - #15 void
INFO  13:10:20,050 - #38 putn
INFO  13:10:20,050 - #2 (
INFO  13:10:20,050 - #38 int
INFO  13:10:20,050 - #38 a
INFO  13:10:20,050 - #19 ,
INFO  13:10:20,051 - #38 int
INFO  13:10:20,051 - #38 idx
INFO  13:10:20,051 - #3 )
INFO  13:10:20,051 - #6 {
INFO  13:10:20,051 - #38 neg
INFO  13:10:20,051 - #4 [
INFO  13:10:20,051 - #38 idx
INFO  13:10:20,051 - #5 ]
INFO  13:10:20,051 - #21 =
INFO  13:10:20,052 - #38 a
INFO  13:10:20,052 - #17 ;
INFO  13:10:20,052 - #7 }
INFO  13:10:20,052 - #38 int
INFO  13:10:20,052 - #38 getp
INFO  13:10:20,052 - #2 (
INFO  13:10:20,052 - #38 int
INFO  13:10:20,052 - #38 idx
INFO  13:10:20,052 - #3 )
INFO  13:10:20,053 - #6 {
INFO  13:10:20,053 - #14 return
INFO  13:10:20,053 - #38 pos
INFO  13:10:20,053 - #4 [
INFO  13:10:20,053 - #38 idx
INFO  13:10:20,053 - #5 ]
INFO  13:10:20,053 - #17 ;
INFO  13:10:20,054 - #7 }
INFO  13:10:20,054 - #38 int
INFO  13:10:20,054 - #38 getn
INFO  13:10:20,054 - #2 (
INFO  13:10:20,054 - #38 int
INFO  13:10:20,054 - #38 idx
INFO  13:10:20,054 - #3 )
INFO  13:10:20,055 - #6 {
INFO  13:10:20,055 - #14 return
INFO  13:10:20,055 - #38 neg
INFO  13:10:20,055 - #4 [
INFO  13:10:20,055 - #38 idx
INFO  13:10:20,055 - #5 ]
INFO  13:10:20,055 - #17 ;
INFO  13:10:20,055 - #7 }
INFO  13:10:20,055 - #15 void
INFO  13:10:20,056 - #38 f
INFO  13:10:20,056 - #2 (
INFO  13:10:20,056 - #38 char
INFO  13:10:20,056 - #38 ch
INFO  13:10:20,056 - #19 ,
INFO  13:10:20,056 - #38 int
INFO  13:10:20,056 - #38 a
INFO  13:10:20,056 - #19 ,
INFO  13:10:20,056 - #38 int
INFO  13:10:20,056 - #38 arg
INFO  13:10:20,057 - #3 )
INFO  13:10:20,057 - #38 int
INFO  13:10:20,057 - #38 x
INFO  13:10:20,057 - #17 ;
INFO  13:10:20,058 - #6 {
INFO  13:10:20,058 - #38 x
INFO  13:10:20,058 - #21 =
INFO  13:10:20,058 - #38 arg
INFO  13:10:20,058 - #17 ;
INFO  13:10:20,058 - #7 }
INFO  13:10:20,059 - #15 void
INFO  13:10:20,059 - #38 main
INFO  13:10:20,059 - #2 (
INFO  13:10:20,059 - #3 )
INFO  13:10:20,059 - #38 int
INFO  13:10:20,060 - #38 x
INFO  13:10:20,060 - #19 ,
INFO  13:10:20,060 - #38 i
INFO  13:10:20,060 - #17 ;
INFO  13:10:20,060 - #38 char
INFO  13:10:20,060 - #38 c
INFO  13:10:20,060 - #17 ;
INFO  13:10:20,060 - #6 {
INFO  13:10:20,060 - #38 pos
INFO  13:10:20,060 - #21 =
INFO  13:10:20,060 - #13 new
INFO  13:10:20,060 - #38 int
INFO  13:10:20,061 - #4 [
INFO  13:10:20,061 - #38 size
INFO  13:10:20,061 - #5 ]
INFO  13:10:20,061 - #17 ;
INFO  13:10:20,061 - #38 neg
INFO  13:10:20,061 - #21 =
INFO  13:10:20,062 - #13 new
INFO  13:10:20,062 - #38 int
INFO  13:10:20,062 - #4 [
INFO  13:10:20,062 - #38 size
INFO  13:10:20,062 - #5 ]
INFO  13:10:20,063 - #17 ;
INFO  13:10:20,063 - #38 i
INFO  13:10:20,063 - #21 =
INFO  13:10:20,063 - #37 0
INFO  13:10:20,063 - #17 ;
INFO  13:10:20,063 - #43 do
INFO  13:10:20,063 - #6 {
INFO  13:10:20,063 - #38 putp
INFO  13:10:20,064 - #2 (
INFO  13:10:20,064 - #37 0
INFO  13:10:20,064 - #19 ,
INFO  13:10:20,064 - #38 i
INFO  13:10:20,064 - #3 )
INFO  13:10:20,065 - #17 ;
INFO  13:10:20,065 - #38 putn
INFO  13:10:20,065 - #2 (
INFO  13:10:20,065 - #37 0
INFO  13:10:20,065 - #19 ,
INFO  13:10:20,065 - #38 i
INFO  13:10:20,065 - #3 )
INFO  13:10:20,066 - #17 ;
INFO  13:10:20,066 - #38 i
INFO  13:10:20,066 - #27 ++
INFO  13:10:20,066 - #17 ;
INFO  13:10:20,066 - #7 }
INFO  13:10:20,066 - #44 while
INFO  13:10:20,066 - #2 (
INFO  13:10:20,066 - #38 i
INFO  13:10:20,066 - #33 <
INFO  13:10:20,066 - #38 size
INFO  13:10:20,067 - #3 )
INFO  13:10:20,069 - #17 ;
INFO  13:10:20,069 - #38 f
INFO  13:10:20,073 - #2 (
INFO  13:10:20,073 - #38 c
INFO  13:10:20,073 - #19 ,
INFO  13:10:20,073 - #38 x
INFO  13:10:20,073 - #19 ,
INFO  13:10:20,073 - #38 i
INFO  13:10:20,074 - #3 )
INFO  13:10:20,074 - #17 ;
INFO  13:10:20,074 - #9 read
INFO  13:10:20,074 - #2 (
INFO  13:10:20,074 - #38 x
INFO  13:10:20,074 - #3 )
INFO  13:10:20,074 - #17 ;
ERROR 13:10:20,074 - 
Sintaksna greska na liniji 31
ERROR 13:10:20,075 - Fatalna greska, parsiranje se ne moze nastaviti na liniji 31
ERROR 13:10:20,081 - Semanticka greska na liniji 31 : Ime x nije deklarisano! 
INFO  13:10:20,082 - Print calls = 0
ERROR 13:10:20,082 - Parsiranje NIJE uspesno zavrseno!
