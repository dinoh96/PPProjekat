INFO  01:13:43,756 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:13:43,818 - #8 program
INFO  01:13:43,818 - #38 p
INFO  01:13:43,819 - #16 const
INFO  01:13:43,820 - #38 int
INFO  01:13:43,820 - #38 size
INFO  01:13:43,821 - #21 =
INFO  01:13:43,821 - #37 10
INFO  01:13:43,821 - #17 ;
INFO  01:13:43,822 - #38 int
INFO  01:13:43,822 - #38 pos
INFO  01:13:43,823 - #4 [
INFO  01:13:43,823 - #5 ]
INFO  01:13:43,824 - #19 ,
INFO  01:13:43,828 - #38 neg
INFO  01:13:43,828 - #4 [
INFO  01:13:43,828 - #5 ]
INFO  01:13:43,828 - #17 ;
INFO  01:13:43,829 - #6 {
INFO  01:13:43,830 - #15 void
INFO  01:13:43,831 - #38 putp
INFO  01:13:43,832 - #2 (
INFO  01:13:43,832 - #38 int
INFO  01:13:43,832 - #38 a
INFO  01:13:43,832 - #19 ,
INFO  01:13:43,834 - #38 int
INFO  01:13:43,835 - #38 idx
INFO  01:13:43,835 - #3 )
INFO  01:13:43,836 - #6 {
INFO  01:13:43,837 - #38 pos
INFO  01:13:43,838 - #4 [
INFO  01:13:43,838 - #38 idx
INFO  01:13:43,838 - #5 ]
INFO  01:13:43,841 - #21 =
INFO  01:13:43,841 - #38 a
INFO  01:13:43,841 - #17 ;
INFO  01:13:43,841 - #7 }
INFO  01:13:43,841 - #15 void
INFO  01:13:43,842 - #38 putn
INFO  01:13:43,842 - #2 (
INFO  01:13:43,843 - #38 int
INFO  01:13:43,843 - #38 a
INFO  01:13:43,843 - #19 ,
INFO  01:13:43,843 - #38 int
INFO  01:13:43,843 - #38 idx
INFO  01:13:43,843 - #3 )
INFO  01:13:43,844 - #6 {
INFO  01:13:43,844 - #38 neg
INFO  01:13:43,844 - #4 [
INFO  01:13:43,844 - #38 idx
INFO  01:13:43,844 - #5 ]
INFO  01:13:43,845 - #21 =
INFO  01:13:43,845 - #38 a
INFO  01:13:43,845 - #17 ;
INFO  01:13:43,845 - #7 }
INFO  01:13:43,846 - #38 int
INFO  01:13:43,846 - #38 getp
INFO  01:13:43,846 - #2 (
INFO  01:13:43,847 - #38 int
INFO  01:13:43,847 - #38 idx
INFO  01:13:43,847 - #19 ,
INFO  01:13:43,847 - #38 int
INFO  01:13:43,848 - #38 a
INFO  01:13:43,848 - #19 ,
INFO  01:13:43,849 - #38 char
INFO  01:13:43,850 - #38 b
INFO  01:13:43,850 - #3 )
INFO  01:13:43,850 - #38 int
INFO  01:13:43,851 - #38 d
INFO  01:13:43,851 - #17 ;
INFO  01:13:43,851 - #6 {
INFO  01:13:43,851 - #14 return
INFO  01:13:43,852 - #38 pos
INFO  01:13:43,852 - #4 [
INFO  01:13:43,852 - #38 idx
INFO  01:13:43,852 - #5 ]
INFO  01:13:43,852 - #17 ;
INFO  01:13:43,853 - #7 }
INFO  01:13:43,853 - #38 int
INFO  01:13:43,853 - #38 getn
INFO  01:13:43,853 - #2 (
INFO  01:13:43,854 - #38 int
INFO  01:13:43,854 - #38 idx
INFO  01:13:43,854 - #3 )
INFO  01:13:43,854 - #6 {
INFO  01:13:43,854 - #14 return
INFO  01:13:43,854 - #38 neg
INFO  01:13:43,854 - #4 [
INFO  01:13:43,855 - #38 idx
INFO  01:13:43,855 - #5 ]
INFO  01:13:43,855 - #17 ;
INFO  01:13:43,856 - #7 }
INFO  01:13:43,856 - #15 void
INFO  01:13:43,856 - #38 f
INFO  01:13:43,856 - #2 (
INFO  01:13:43,856 - #38 char
INFO  01:13:43,856 - #38 ch
INFO  01:13:43,856 - #19 ,
INFO  01:13:43,857 - #38 int
INFO  01:13:43,857 - #38 a
INFO  01:13:43,857 - #19 ,
INFO  01:13:43,862 - #38 int
INFO  01:13:43,862 - #38 arg
INFO  01:13:43,862 - #3 )
INFO  01:13:43,862 - #38 int
INFO  01:13:43,862 - #38 x
INFO  01:13:43,862 - #17 ;
INFO  01:13:43,862 - #6 {
INFO  01:13:43,863 - #38 x
INFO  01:13:43,863 - #21 =
INFO  01:13:43,863 - #38 arg
INFO  01:13:43,863 - #17 ;
INFO  01:13:43,863 - #7 }
INFO  01:13:43,863 - #15 void
INFO  01:13:43,863 - #38 main
INFO  01:13:43,863 - #2 (
INFO  01:13:43,863 - #3 )
INFO  01:13:43,864 - #38 int
INFO  01:13:43,864 - #38 x
INFO  01:13:43,864 - #19 ,
INFO  01:13:43,865 - #38 i
INFO  01:13:43,865 - #17 ;
INFO  01:13:43,865 - #38 char
INFO  01:13:43,865 - #38 c
INFO  01:13:43,865 - #17 ;
INFO  01:13:43,865 - #6 {
INFO  01:13:43,866 - #38 pos
INFO  01:13:43,866 - #21 =
INFO  01:13:43,866 - #13 new
INFO  01:13:43,866 - #38 int
INFO  01:13:43,866 - #4 [
INFO  01:13:43,866 - #38 size
INFO  01:13:43,867 - #5 ]
INFO  01:13:43,867 - #17 ;
INFO  01:13:43,867 - #38 neg
INFO  01:13:43,867 - #21 =
INFO  01:13:43,867 - #13 new
INFO  01:13:43,867 - #38 int
INFO  01:13:43,867 - #4 [
INFO  01:13:43,868 - #38 size
INFO  01:13:43,868 - #5 ]
INFO  01:13:43,868 - #17 ;
INFO  01:13:43,868 - #38 i
INFO  01:13:43,868 - #21 =
INFO  01:13:43,868 - #37 0
INFO  01:13:43,868 - #17 ;
INFO  01:13:43,869 - #41 if
INFO  01:13:43,869 - #2 (
INFO  01:13:43,869 - #37 1
INFO  01:13:43,869 - #31 ==
INFO  01:13:43,869 - #37 1
INFO  01:13:43,871 - #3 )
INFO  01:13:43,874 - #6 {
INFO  01:13:43,875 - #10 print
INFO  01:13:43,875 - #2 (
INFO  01:13:43,875 - #37 1
INFO  01:13:43,875 - #3 )
INFO  01:13:43,876 - #17 ;
INFO  01:13:43,877 - #7 }
INFO  01:13:43,877 - #42 else
INFO  01:13:43,877 - #6 {
INFO  01:13:43,877 - #10 print
INFO  01:13:43,877 - #2 (
INFO  01:13:43,877 - #37 2
INFO  01:13:43,877 - #3 )
INFO  01:13:43,878 - #17 ;
INFO  01:13:43,878 - #7 }
INFO  01:13:43,878 - #43 do
INFO  01:13:43,878 - #6 {
INFO  01:13:43,878 - #38 putp
INFO  01:13:43,878 - #2 (
INFO  01:13:43,879 - #37 0
INFO  01:13:43,879 - #19 ,
INFO  01:13:43,879 - #38 i
INFO  01:13:43,879 - #3 )
INFO  01:13:43,881 - #17 ;
INFO  01:13:43,882 - #38 putn
INFO  01:13:43,882 - #2 (
INFO  01:13:43,882 - #37 0
INFO  01:13:43,882 - #19 ,
INFO  01:13:43,882 - #38 i
INFO  01:13:43,882 - #3 )
INFO  01:13:43,883 - #17 ;
INFO  01:13:43,883 - #38 i
INFO  01:13:43,883 - #27 ++
INFO  01:13:43,883 - #17 ;
INFO  01:13:43,884 - #7 }
INFO  01:13:43,884 - #44 while
INFO  01:13:43,884 - #2 (
INFO  01:13:43,884 - #38 i
INFO  01:13:43,884 - #33 <
INFO  01:13:43,885 - #38 size
INFO  01:13:43,886 - #3 )
INFO  01:13:43,886 - #17 ;
INFO  01:13:43,887 - #38 f
INFO  01:13:43,887 - #2 (
INFO  01:13:43,887 - #38 c
INFO  01:13:43,887 - #19 ,
INFO  01:13:43,887 - #38 x
INFO  01:13:43,887 - #19 ,
INFO  01:13:43,887 - #38 i
INFO  01:13:43,888 - #3 )
INFO  01:13:43,888 - #17 ;
INFO  01:13:43,888 - #9 read
INFO  01:13:43,888 - #2 (
INFO  01:13:43,888 - #38 x
INFO  01:13:43,888 - #3 )
INFO  01:13:43,888 - #17 ;
INFO  01:13:43,888 - #43 do
INFO  01:13:43,889 - #6 {
INFO  01:13:43,889 - #41 if
INFO  01:13:43,889 - #2 (
INFO  01:13:43,889 - #38 x
INFO  01:13:43,889 - #34 <=
INFO  01:13:43,889 - #37 0
INFO  01:13:43,890 - #3 )
INFO  01:13:43,890 - #11 break
INFO  01:13:43,890 - #17 ;
INFO  01:13:43,891 - #41 if
INFO  01:13:43,892 - #2 (
INFO  01:13:43,892 - #37 0
INFO  01:13:43,892 - #34 <=
INFO  01:13:43,892 - #38 x
INFO  01:13:43,892 - #30 &&
INFO  01:13:43,892 - #38 x
INFO  01:13:43,892 - #33 <
INFO  01:13:43,892 - #38 size
INFO  01:13:43,893 - #3 )
INFO  01:13:43,893 - #6 {
INFO  01:13:43,893 - #38 putp
INFO  01:13:43,893 - #2 (
INFO  01:13:43,893 - #38 getp
INFO  01:13:43,893 - #2 (
INFO  01:13:43,893 - #38 x
INFO  01:13:43,893 - #19 ,
INFO  01:13:43,893 - #38 i
INFO  01:13:43,893 - #19 ,
INFO  01:13:43,894 - #38 c
INFO  01:13:43,894 - #19 ,
INFO  01:13:43,894 - #37 1
INFO  01:13:43,894 - #3 )
INFO  01:13:43,894 - #23 +
INFO  01:13:43,895 - #37 1
INFO  01:13:43,897 - #3 )
INFO  01:13:43,897 - #17 ;
INFO  01:13:43,897 - #7 }
INFO  01:13:43,897 - #42 else
INFO  01:13:43,897 - #41 if
INFO  01:13:43,897 - #2 (
INFO  01:13:43,897 - #22 -
INFO  01:13:43,897 - #38 size
INFO  01:13:43,898 - #33 <
INFO  01:13:43,898 - #38 x
INFO  01:13:43,898 - #30 &&
INFO  01:13:43,898 - #38 x
INFO  01:13:43,898 - #33 <
INFO  01:13:43,898 - #37 0
INFO  01:13:43,899 - #3 )
INFO  01:13:43,899 - #6 {
INFO  01:13:43,899 - #38 putn
INFO  01:13:43,899 - #2 (
INFO  01:13:43,899 - #38 getn
INFO  01:13:43,899 - #2 (
INFO  01:13:43,899 - #22 -
INFO  01:13:43,899 - #38 x
INFO  01:13:43,899 - #3 )
INFO  01:13:43,899 - #23 +
INFO  01:13:43,899 - #37 1
INFO  01:13:43,899 - #3 )
INFO  01:13:43,900 - #17 ;
INFO  01:13:43,900 - #7 }
INFO  01:13:43,900 - #9 read
INFO  01:13:43,900 - #2 (
INFO  01:13:43,900 - #38 x
INFO  01:13:43,900 - #3 )
INFO  01:13:43,900 - #17 ;
INFO  01:13:43,900 - #7 }
INFO  01:13:43,900 - #44 while
INFO  01:13:43,901 - #2 (
INFO  01:13:43,901 - #39 true
INFO  01:13:43,901 - #3 )
INFO  01:13:43,901 - #17 ;
INFO  01:13:43,901 - #10 print
INFO  01:13:43,901 - #2 (
INFO  01:13:43,901 - #38 x
INFO  01:13:43,901 - #33 <
INFO  01:13:43,901 - #37 0
INFO  01:13:43,902 - #20 ?
INFO  01:13:43,902 - #40 -
INFO  01:13:43,902 - #18 :
INFO  01:13:43,902 - #40 +
INFO  01:13:43,902 - #3 )
INFO  01:13:43,904 - #17 ;
INFO  01:13:43,904 - #7 }
INFO  01:13:43,904 - #7 }
INFO  01:13:43,912 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:13:43,913 - Deklarisana promenljiva pos na liniji 3
INFO  01:13:43,913 - Deklarisana promenljiva neg na liniji 3
INFO  01:13:43,913 - Obradjuje se funkcija putp na liniji 4
INFO  01:13:43,913 - Obradjuje se funkcija putn na liniji 7
INFO  01:13:43,913 - Obradjuje se funkcija getp na liniji 10
INFO  01:13:43,913 - Deklarisana promenljiva d na liniji 10
INFO  01:13:43,913 - Obradjuje se funkcija getn na liniji 13
INFO  01:13:43,913 - Obradjuje se funkcija f na liniji 16
INFO  01:13:43,913 - Deklarisana promenljiva x na liniji 17
INFO  01:13:43,913 - Obradjuje se funkcija main na liniji 20
INFO  01:13:43,914 - Deklarisana promenljiva x na liniji 20
INFO  01:13:43,914 - Deklarisana promenljiva i na liniji 20
INFO  01:13:43,914 - Deklarisana promenljiva c na liniji 21
INFO  01:13:43,914 - Pronadjen poziv funkcije putp na liniji 31
INFO  01:13:43,914 - Pronadjen poziv funkcije putn na liniji 32
INFO  01:13:43,914 - Pronadjen poziv funkcije f na liniji 35
INFO  01:13:43,914 - Pronadjen poziv funkcije getp na liniji 40
ERROR 01:13:43,914 - Semanticka greska na liniji 40 : Neodgovarajuc broj aktuelnih parametera (4) i formalnih parametara (3) za funkciju getp
ERROR 01:13:43,914 - Semanticka greska na liniji 40 : Nekompatibilni tipovi u izrazu za sabiranje.
INFO  01:13:43,915 - Pronadjen poziv funkcije putp na liniji 40
INFO  01:13:43,915 - Pronadjen poziv funkcije getn na liniji 42
INFO  01:13:43,916 - Pronadjen poziv funkcije putn na liniji 42
INFO  01:13:43,916 - Print calls = 3
ERROR 01:13:43,917 - Parsiranje NIJE uspesno zavrseno!
