INFO  01:27:08,815 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:27:08,854 - #8 program
INFO  01:27:08,854 - #38 p
INFO  01:27:08,854 - #16 const
INFO  01:27:08,855 - #38 int
INFO  01:27:08,855 - #38 size
INFO  01:27:08,855 - #21 =
INFO  01:27:08,856 - #37 10
INFO  01:27:08,856 - #17 ;
INFO  01:27:08,857 - #38 bool
INFO  01:27:08,863 - #38 isFinished
INFO  01:27:08,863 - #17 ;
INFO  01:27:08,865 - #16 const
INFO  01:27:08,866 - #38 char
INFO  01:27:08,867 - #38 yes
INFO  01:27:08,867 - #21 =
INFO  01:27:08,867 - #40 y
INFO  01:27:08,867 - #17 ;
INFO  01:27:08,867 - #38 int
INFO  01:27:08,867 - #38 pos
INFO  01:27:08,867 - #4 [
INFO  01:27:08,869 - #5 ]
INFO  01:27:08,869 - #19 ,
INFO  01:27:08,870 - #38 neg
INFO  01:27:08,870 - #4 [
INFO  01:27:08,870 - #5 ]
INFO  01:27:08,871 - #17 ;
INFO  01:27:08,871 - #6 {
INFO  01:27:08,871 - #15 void
INFO  01:27:08,872 - #38 putp
INFO  01:27:08,872 - #2 (
INFO  01:27:08,872 - #38 int
INFO  01:27:08,872 - #38 a
INFO  01:27:08,872 - #19 ,
INFO  01:27:08,874 - #38 int
INFO  01:27:08,874 - #38 idx
INFO  01:27:08,874 - #3 )
INFO  01:27:08,875 - #6 {
INFO  01:27:08,875 - #38 pos
INFO  01:27:08,876 - #4 [
INFO  01:27:08,876 - #38 idx
INFO  01:27:08,876 - #5 ]
INFO  01:27:08,878 - #21 =
INFO  01:27:08,878 - #38 a
INFO  01:27:08,879 - #17 ;
INFO  01:27:08,879 - #7 }
INFO  01:27:08,879 - #15 void
INFO  01:27:08,880 - #38 putn
INFO  01:27:08,880 - #2 (
INFO  01:27:08,880 - #38 int
INFO  01:27:08,880 - #38 a
INFO  01:27:08,880 - #19 ,
INFO  01:27:08,880 - #38 int
INFO  01:27:08,881 - #38 idx
INFO  01:27:08,881 - #3 )
INFO  01:27:08,881 - #6 {
INFO  01:27:08,881 - #38 neg
INFO  01:27:08,881 - #4 [
INFO  01:27:08,881 - #38 idx
INFO  01:27:08,881 - #5 ]
INFO  01:27:08,881 - #21 =
INFO  01:27:08,881 - #38 a
INFO  01:27:08,881 - #17 ;
INFO  01:27:08,882 - #7 }
INFO  01:27:08,882 - #38 int
INFO  01:27:08,882 - #38 getp
INFO  01:27:08,882 - #2 (
INFO  01:27:08,882 - #38 int
INFO  01:27:08,882 - #38 idx
INFO  01:27:08,882 - #3 )
INFO  01:27:08,882 - #38 int
INFO  01:27:08,882 - #38 d
INFO  01:27:08,883 - #17 ;
INFO  01:27:08,883 - #6 {
INFO  01:27:08,883 - #14 return
INFO  01:27:08,883 - #38 pos
INFO  01:27:08,883 - #4 [
INFO  01:27:08,883 - #38 idx
INFO  01:27:08,883 - #5 ]
INFO  01:27:08,883 - #17 ;
INFO  01:27:08,883 - #7 }
INFO  01:27:08,884 - #38 int
INFO  01:27:08,884 - #38 getn
INFO  01:27:08,884 - #2 (
INFO  01:27:08,884 - #38 int
INFO  01:27:08,884 - #38 idx
INFO  01:27:08,884 - #3 )
INFO  01:27:08,884 - #6 {
INFO  01:27:08,884 - #14 return
INFO  01:27:08,884 - #38 neg
INFO  01:27:08,884 - #4 [
INFO  01:27:08,884 - #38 idx
INFO  01:27:08,884 - #5 ]
INFO  01:27:08,885 - #17 ;
INFO  01:27:08,885 - #7 }
INFO  01:27:08,885 - #15 void
INFO  01:27:08,885 - #38 f
INFO  01:27:08,885 - #2 (
INFO  01:27:08,885 - #38 char
INFO  01:27:08,885 - #38 ch
INFO  01:27:08,885 - #19 ,
INFO  01:27:08,885 - #38 int
INFO  01:27:08,886 - #38 a
INFO  01:27:08,886 - #19 ,
INFO  01:27:08,886 - #38 int
INFO  01:27:08,886 - #38 arg
INFO  01:27:08,886 - #3 )
INFO  01:27:08,886 - #38 int
INFO  01:27:08,886 - #38 x
INFO  01:27:08,886 - #17 ;
INFO  01:27:08,886 - #6 {
INFO  01:27:08,886 - #38 x
INFO  01:27:08,887 - #21 =
INFO  01:27:08,887 - #38 arg
INFO  01:27:08,887 - #17 ;
INFO  01:27:08,887 - #7 }
INFO  01:27:08,887 - #15 void
INFO  01:27:08,887 - #38 main
INFO  01:27:08,887 - #2 (
INFO  01:27:08,887 - #3 )
INFO  01:27:08,888 - #38 int
INFO  01:27:08,888 - #38 x
INFO  01:27:08,888 - #19 ,
INFO  01:27:08,888 - #38 i
INFO  01:27:08,888 - #17 ;
INFO  01:27:08,888 - #38 char
INFO  01:27:08,889 - #38 c
INFO  01:27:08,889 - #17 ;
INFO  01:27:08,889 - #6 {
INFO  01:27:08,889 - #38 pos
INFO  01:27:08,889 - #21 =
INFO  01:27:08,889 - #13 new
INFO  01:27:08,889 - #38 int
INFO  01:27:08,889 - #4 [
INFO  01:27:08,889 - #38 size
INFO  01:27:08,889 - #5 ]
INFO  01:27:08,889 - #17 ;
INFO  01:27:08,890 - #38 neg
INFO  01:27:08,890 - #21 =
INFO  01:27:08,890 - #13 new
INFO  01:27:08,890 - #38 int
INFO  01:27:08,890 - #4 [
INFO  01:27:08,890 - #38 size
INFO  01:27:08,890 - #5 ]
INFO  01:27:08,890 - #17 ;
INFO  01:27:08,890 - #38 i
INFO  01:27:08,890 - #21 =
INFO  01:27:08,891 - #37 0
INFO  01:27:08,891 - #17 ;
INFO  01:27:08,891 - #41 if
INFO  01:27:08,891 - #2 (
INFO  01:27:08,891 - #37 1
INFO  01:27:08,891 - #31 ==
INFO  01:27:08,891 - #37 1
INFO  01:27:08,893 - #3 )
INFO  01:27:08,895 - #6 {
INFO  01:27:08,895 - #10 print
INFO  01:27:08,895 - #2 (
INFO  01:27:08,896 - #37 1
INFO  01:27:08,896 - #3 )
INFO  01:27:08,896 - #17 ;
INFO  01:27:08,896 - #7 }
INFO  01:27:08,896 - #42 else
INFO  01:27:08,897 - #6 {
INFO  01:27:08,897 - #10 print
INFO  01:27:08,903 - #2 (
INFO  01:27:08,903 - #37 2
INFO  01:27:08,903 - #3 )
INFO  01:27:08,903 - #17 ;
INFO  01:27:08,903 - #7 }
INFO  01:27:08,903 - #43 do
INFO  01:27:08,904 - #6 {
INFO  01:27:08,904 - #38 putp
INFO  01:27:08,904 - #2 (
INFO  01:27:08,904 - #37 0
INFO  01:27:08,904 - #19 ,
INFO  01:27:08,904 - #38 i
INFO  01:27:08,904 - #3 )
INFO  01:27:08,905 - #17 ;
INFO  01:27:08,905 - #38 putn
INFO  01:27:08,905 - #2 (
INFO  01:27:08,905 - #37 0
INFO  01:27:08,906 - #19 ,
INFO  01:27:08,906 - #38 i
INFO  01:27:08,906 - #3 )
INFO  01:27:08,906 - #17 ;
INFO  01:27:08,906 - #38 i
INFO  01:27:08,906 - #27 ++
INFO  01:27:08,906 - #17 ;
INFO  01:27:08,906 - #7 }
INFO  01:27:08,906 - #44 while
INFO  01:27:08,906 - #2 (
INFO  01:27:08,906 - #38 i
INFO  01:27:08,906 - #33 <
INFO  01:27:08,906 - #38 size
INFO  01:27:08,907 - #3 )
INFO  01:27:08,907 - #17 ;
INFO  01:27:08,907 - #38 f
INFO  01:27:08,907 - #2 (
INFO  01:27:08,907 - #38 c
INFO  01:27:08,907 - #19 ,
INFO  01:27:08,907 - #38 x
INFO  01:27:08,907 - #19 ,
INFO  01:27:08,907 - #38 i
INFO  01:27:08,907 - #3 )
INFO  01:27:08,907 - #17 ;
INFO  01:27:08,907 - #9 read
INFO  01:27:08,908 - #2 (
INFO  01:27:08,908 - #38 x
INFO  01:27:08,908 - #3 )
INFO  01:27:08,908 - #17 ;
INFO  01:27:08,908 - #43 do
INFO  01:27:08,908 - #6 {
INFO  01:27:08,908 - #41 if
INFO  01:27:08,908 - #2 (
INFO  01:27:08,908 - #38 x
INFO  01:27:08,908 - #34 <=
INFO  01:27:08,908 - #37 0
INFO  01:27:08,908 - #3 )
INFO  01:27:08,909 - #11 break
INFO  01:27:08,909 - #17 ;
INFO  01:27:08,909 - #41 if
INFO  01:27:08,909 - #2 (
INFO  01:27:08,909 - #37 0
INFO  01:27:08,909 - #34 <=
INFO  01:27:08,909 - #38 x
INFO  01:27:08,909 - #30 &&
INFO  01:27:08,909 - #38 x
INFO  01:27:08,910 - #33 <
INFO  01:27:08,910 - #38 size
INFO  01:27:08,910 - #3 )
INFO  01:27:08,910 - #6 {
INFO  01:27:08,910 - #38 putp
INFO  01:27:08,910 - #2 (
INFO  01:27:08,910 - #38 getp
INFO  01:27:08,910 - #2 (
INFO  01:27:08,910 - #38 x
INFO  01:27:08,910 - #3 )
INFO  01:27:08,910 - #23 +
INFO  01:27:08,910 - #37 1
INFO  01:27:08,911 - #19 ,
INFO  01:27:08,912 - #38 x
INFO  01:27:08,912 - #3 )
INFO  01:27:08,912 - #17 ;
INFO  01:27:08,912 - #7 }
INFO  01:27:08,912 - #42 else
INFO  01:27:08,912 - #41 if
INFO  01:27:08,912 - #2 (
INFO  01:27:08,912 - #22 -
INFO  01:27:08,912 - #38 size
INFO  01:27:08,912 - #33 <
INFO  01:27:08,912 - #38 x
INFO  01:27:08,912 - #30 &&
INFO  01:27:08,912 - #38 x
INFO  01:27:08,913 - #33 <
INFO  01:27:08,913 - #37 0
INFO  01:27:08,913 - #3 )
INFO  01:27:08,913 - #6 {
INFO  01:27:08,913 - #38 putn
INFO  01:27:08,913 - #2 (
INFO  01:27:08,913 - #38 getn
INFO  01:27:08,913 - #2 (
INFO  01:27:08,913 - #22 -
INFO  01:27:08,913 - #38 x
INFO  01:27:08,913 - #3 )
INFO  01:27:08,913 - #23 +
INFO  01:27:08,914 - #37 1
INFO  01:27:08,914 - #19 ,
INFO  01:27:08,914 - #38 x
INFO  01:27:08,914 - #3 )
INFO  01:27:08,914 - #17 ;
INFO  01:27:08,914 - #7 }
INFO  01:27:08,914 - #9 read
INFO  01:27:08,914 - #2 (
INFO  01:27:08,914 - #38 x
INFO  01:27:08,914 - #3 )
INFO  01:27:08,914 - #17 ;
INFO  01:27:08,914 - #7 }
INFO  01:27:08,914 - #44 while
INFO  01:27:08,914 - #2 (
INFO  01:27:08,914 - #39 true
INFO  01:27:08,915 - #3 )
INFO  01:27:08,915 - #17 ;
INFO  01:27:08,915 - #10 print
INFO  01:27:08,915 - #2 (
INFO  01:27:08,915 - #38 x
INFO  01:27:08,915 - #33 <
INFO  01:27:08,915 - #37 0
INFO  01:27:08,915 - #20 ?
INFO  01:27:08,915 - #40 -
INFO  01:27:08,915 - #18 :
INFO  01:27:08,915 - #40 +
INFO  01:27:08,915 - #3 )
INFO  01:27:08,916 - #17 ;
INFO  01:27:08,916 - #7 }
INFO  01:27:08,916 - #7 }
INFO  01:27:08,923 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
ERROR 01:27:08,923 - Nije pronadjen tip bool u tabeli simbola
ERROR 01:27:08,923 - Semanticka greska na liniji 3 : Nije definisan tip za promenljivu isFinished
INFO  01:27:08,923 - Deklarisana konstanta yes sa vrednoscu y na liniji 4
INFO  01:27:08,924 - Deklarisana promenljiva pos na liniji 5
INFO  01:27:08,924 - Deklarisana promenljiva neg na liniji 5
INFO  01:27:08,924 - Obradjuje se funkcija putp na liniji 6
INFO  01:27:08,924 - Obradjuje se funkcija putn na liniji 9
INFO  01:27:08,924 - Obradjuje se funkcija getp na liniji 12
INFO  01:27:08,924 - Deklarisana promenljiva d na liniji 12
INFO  01:27:08,924 - Obradjuje se funkcija getn na liniji 15
INFO  01:27:08,925 - Obradjuje se funkcija f na liniji 18
INFO  01:27:08,925 - Deklarisana promenljiva x na liniji 19
INFO  01:27:08,925 - Obradjuje se funkcija main na liniji 22
INFO  01:27:08,925 - Deklarisana promenljiva x na liniji 22
INFO  01:27:08,925 - Deklarisana promenljiva i na liniji 22
INFO  01:27:08,925 - Deklarisana promenljiva c na liniji 23
INFO  01:27:08,925 - Pronadjen poziv procedure putp na liniji 33
INFO  01:27:08,927 - Pronadjen poziv procedure putn na liniji 34
INFO  01:27:08,928 - Pronadjen poziv procedure f na liniji 37
INFO  01:27:08,928 - Pronadjen poziv funkcije getp na liniji 42
INFO  01:27:08,930 - Pronadjen poziv procedure putp na liniji 42
INFO  01:27:08,930 - Pronadjen poziv funkcije getn na liniji 44
INFO  01:27:08,930 - Pronadjen poziv procedure putn na liniji 44
INFO  01:27:08,930 - Print calls = 3
ERROR 01:27:08,931 - Parsiranje NIJE uspesno zavrseno!
