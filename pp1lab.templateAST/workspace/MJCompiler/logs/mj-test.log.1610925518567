INFO  00:17:37,481 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:17:37,547 - #8 program
INFO  00:17:37,547 - #38 p
INFO  00:17:37,547 - #16 const
INFO  00:17:37,549 - #38 int
INFO  00:17:37,549 - #38 size
INFO  00:17:37,550 - #21 =
INFO  00:17:37,551 - #37 10
INFO  00:17:37,551 - #17 ;
INFO  00:17:37,552 - #38 int
INFO  00:17:37,554 - #38 pos
INFO  00:17:37,554 - #4 [
INFO  00:17:37,554 - #5 ]
INFO  00:17:37,554 - #19 ,
INFO  00:17:37,556 - #38 neg
INFO  00:17:37,557 - #4 [
INFO  00:17:37,557 - #5 ]
INFO  00:17:37,558 - #17 ;
INFO  00:17:37,559 - #6 {
INFO  00:17:37,560 - #15 void
INFO  00:17:37,561 - #38 putp
INFO  00:17:37,562 - #2 (
INFO  00:17:37,562 - #38 int
INFO  00:17:37,562 - #38 a
INFO  00:17:37,562 - #19 ,
INFO  00:17:37,564 - #38 int
INFO  00:17:37,564 - #38 idx
INFO  00:17:37,564 - #3 )
INFO  00:17:37,564 - #6 {
INFO  00:17:37,566 - #38 pos
INFO  00:17:37,567 - #4 [
INFO  00:17:37,568 - #38 idx
INFO  00:17:37,568 - #5 ]
INFO  00:17:37,572 - #21 =
INFO  00:17:37,573 - #38 a
INFO  00:17:37,573 - #17 ;
INFO  00:17:37,574 - #7 }
INFO  00:17:37,574 - #15 void
INFO  00:17:37,575 - #38 putn
INFO  00:17:37,575 - #2 (
INFO  00:17:37,575 - #38 int
INFO  00:17:37,576 - #38 a
INFO  00:17:37,576 - #19 ,
INFO  00:17:37,576 - #38 int
INFO  00:17:37,576 - #38 idx
INFO  00:17:37,576 - #3 )
INFO  00:17:37,576 - #6 {
INFO  00:17:37,576 - #38 neg
INFO  00:17:37,576 - #4 [
INFO  00:17:37,576 - #38 idx
INFO  00:17:37,577 - #5 ]
INFO  00:17:37,577 - #21 =
INFO  00:17:37,577 - #38 a
INFO  00:17:37,577 - #17 ;
INFO  00:17:37,577 - #7 }
INFO  00:17:37,577 - #38 int
INFO  00:17:37,577 - #38 getp
INFO  00:17:37,577 - #2 (
INFO  00:17:37,578 - #38 int
INFO  00:17:37,578 - #38 idx
INFO  00:17:37,578 - #19 ,
INFO  00:17:37,578 - #38 int
INFO  00:17:37,578 - #38 a
INFO  00:17:37,578 - #19 ,
INFO  00:17:37,578 - #38 char
INFO  00:17:37,578 - #38 b
INFO  00:17:37,578 - #19 ,
INFO  00:17:37,578 - #38 int
INFO  00:17:37,578 - #38 c
INFO  00:17:37,579 - #3 )
INFO  00:17:37,579 - #6 {
INFO  00:17:37,579 - #14 return
INFO  00:17:37,579 - #38 pos
INFO  00:17:37,579 - #4 [
INFO  00:17:37,579 - #38 idx
INFO  00:17:37,579 - #5 ]
INFO  00:17:37,579 - #17 ;
INFO  00:17:37,579 - #7 }
INFO  00:17:37,579 - #38 int
INFO  00:17:37,580 - #38 getn
INFO  00:17:37,580 - #2 (
INFO  00:17:37,580 - #38 int
INFO  00:17:37,580 - #38 idx
INFO  00:17:37,580 - #3 )
INFO  00:17:37,580 - #6 {
INFO  00:17:37,580 - #14 return
INFO  00:17:37,580 - #38 neg
INFO  00:17:37,580 - #4 [
INFO  00:17:37,580 - #38 idx
INFO  00:17:37,580 - #5 ]
INFO  00:17:37,580 - #17 ;
INFO  00:17:37,580 - #7 }
INFO  00:17:37,581 - #15 void
INFO  00:17:37,581 - #38 f
INFO  00:17:37,581 - #2 (
INFO  00:17:37,581 - #38 char
INFO  00:17:37,581 - #38 ch
INFO  00:17:37,581 - #19 ,
INFO  00:17:37,581 - #38 int
INFO  00:17:37,581 - #38 a
INFO  00:17:37,581 - #19 ,
INFO  00:17:37,586 - #38 int
INFO  00:17:37,586 - #38 arg
INFO  00:17:37,586 - #3 )
INFO  00:17:37,586 - #38 int
INFO  00:17:37,586 - #38 x
INFO  00:17:37,586 - #17 ;
INFO  00:17:37,586 - #6 {
INFO  00:17:37,586 - #38 x
INFO  00:17:37,586 - #21 =
INFO  00:17:37,587 - #38 arg
INFO  00:17:37,587 - #17 ;
INFO  00:17:37,587 - #7 }
INFO  00:17:37,587 - #15 void
INFO  00:17:37,587 - #38 main
INFO  00:17:37,587 - #2 (
INFO  00:17:37,587 - #3 )
INFO  00:17:37,588 - #38 int
INFO  00:17:37,588 - #38 x
INFO  00:17:37,588 - #19 ,
INFO  00:17:37,588 - #38 i
INFO  00:17:37,588 - #17 ;
INFO  00:17:37,588 - #38 char
INFO  00:17:37,588 - #38 c
INFO  00:17:37,588 - #17 ;
INFO  00:17:37,588 - #6 {
INFO  00:17:37,588 - #38 pos
INFO  00:17:37,588 - #21 =
INFO  00:17:37,589 - #13 new
INFO  00:17:37,589 - #38 int
INFO  00:17:37,589 - #4 [
INFO  00:17:37,589 - #38 size
INFO  00:17:37,589 - #5 ]
INFO  00:17:37,589 - #17 ;
INFO  00:17:37,589 - #38 neg
INFO  00:17:37,589 - #21 =
INFO  00:17:37,589 - #13 new
INFO  00:17:37,589 - #38 int
INFO  00:17:37,589 - #4 [
INFO  00:17:37,590 - #38 size
INFO  00:17:37,590 - #5 ]
INFO  00:17:37,590 - #17 ;
INFO  00:17:37,590 - #38 i
INFO  00:17:37,591 - #21 =
INFO  00:17:37,591 - #37 0
INFO  00:17:37,591 - #17 ;
INFO  00:17:37,591 - #41 if
INFO  00:17:37,591 - #2 (
INFO  00:17:37,591 - #37 1
INFO  00:17:37,591 - #31 ==
INFO  00:17:37,592 - #37 1
INFO  00:17:37,593 - #3 )
INFO  00:17:37,596 - #6 {
INFO  00:17:37,596 - #10 print
INFO  00:17:37,597 - #2 (
INFO  00:17:37,597 - #37 1
INFO  00:17:37,597 - #3 )
INFO  00:17:37,597 - #17 ;
INFO  00:17:37,597 - #7 }
INFO  00:17:37,598 - #42 else
INFO  00:17:37,598 - #6 {
INFO  00:17:37,598 - #10 print
INFO  00:17:37,598 - #2 (
INFO  00:17:37,598 - #37 2
INFO  00:17:37,598 - #3 )
INFO  00:17:37,598 - #17 ;
INFO  00:17:37,598 - #7 }
INFO  00:17:37,598 - #43 do
INFO  00:17:37,599 - #6 {
INFO  00:17:37,599 - #38 putp
INFO  00:17:37,599 - #2 (
INFO  00:17:37,599 - #37 0
INFO  00:17:37,599 - #19 ,
INFO  00:17:37,599 - #38 i
INFO  00:17:37,599 - #3 )
INFO  00:17:37,600 - #17 ;
INFO  00:17:37,600 - #38 putn
INFO  00:17:37,600 - #2 (
INFO  00:17:37,600 - #37 0
INFO  00:17:37,600 - #19 ,
INFO  00:17:37,601 - #38 i
INFO  00:17:37,601 - #3 )
INFO  00:17:37,601 - #17 ;
INFO  00:17:37,601 - #38 i
INFO  00:17:37,601 - #27 ++
INFO  00:17:37,601 - #17 ;
INFO  00:17:37,601 - #7 }
INFO  00:17:37,601 - #44 while
INFO  00:17:37,601 - #2 (
INFO  00:17:37,601 - #38 i
INFO  00:17:37,601 - #33 <
INFO  00:17:37,601 - #38 size
INFO  00:17:37,602 - #3 )
INFO  00:17:37,602 - #17 ;
INFO  00:17:37,602 - #38 f
INFO  00:17:37,602 - #2 (
INFO  00:17:37,602 - #38 c
INFO  00:17:37,602 - #19 ,
INFO  00:17:37,602 - #38 x
INFO  00:17:37,602 - #19 ,
INFO  00:17:37,602 - #38 i
INFO  00:17:37,602 - #3 )
INFO  00:17:37,602 - #17 ;
INFO  00:17:37,603 - #9 read
INFO  00:17:37,603 - #2 (
INFO  00:17:37,603 - #38 x
INFO  00:17:37,603 - #3 )
INFO  00:17:37,603 - #17 ;
INFO  00:17:37,603 - #43 do
INFO  00:17:37,603 - #6 {
INFO  00:17:37,603 - #41 if
INFO  00:17:37,603 - #2 (
INFO  00:17:37,603 - #38 x
INFO  00:17:37,603 - #34 <=
INFO  00:17:37,603 - #37 0
INFO  00:17:37,604 - #3 )
INFO  00:17:37,604 - #11 break
INFO  00:17:37,604 - #17 ;
INFO  00:17:37,604 - #41 if
INFO  00:17:37,605 - #2 (
INFO  00:17:37,606 - #37 0
INFO  00:17:37,606 - #34 <=
INFO  00:17:37,606 - #38 x
INFO  00:17:37,606 - #30 &&
INFO  00:17:37,606 - #38 x
INFO  00:17:37,606 - #33 <
INFO  00:17:37,606 - #38 size
INFO  00:17:37,606 - #3 )
INFO  00:17:37,606 - #6 {
INFO  00:17:37,606 - #38 putp
INFO  00:17:37,606 - #2 (
INFO  00:17:37,607 - #38 getp
INFO  00:17:37,607 - #2 (
INFO  00:17:37,607 - #38 x
INFO  00:17:37,607 - #19 ,
INFO  00:17:37,607 - #38 i
INFO  00:17:37,607 - #19 ,
INFO  00:17:37,607 - #38 c
INFO  00:17:37,607 - #19 ,
INFO  00:17:37,607 - #37 1
INFO  00:17:37,607 - #3 )
INFO  00:17:37,607 - #23 +
INFO  00:17:37,608 - #37 1
INFO  00:17:37,609 - #3 )
INFO  00:17:37,609 - #17 ;
INFO  00:17:37,609 - #7 }
INFO  00:17:37,609 - #42 else
INFO  00:17:37,609 - #41 if
INFO  00:17:37,609 - #2 (
INFO  00:17:37,609 - #22 -
INFO  00:17:37,609 - #38 size
INFO  00:17:37,609 - #33 <
INFO  00:17:37,609 - #38 x
INFO  00:17:37,609 - #30 &&
INFO  00:17:37,610 - #38 x
INFO  00:17:37,610 - #33 <
INFO  00:17:37,610 - #37 0
INFO  00:17:37,610 - #3 )
INFO  00:17:37,610 - #6 {
INFO  00:17:37,610 - #38 putn
INFO  00:17:37,610 - #2 (
INFO  00:17:37,610 - #38 getn
INFO  00:17:37,611 - #2 (
INFO  00:17:37,611 - #22 -
INFO  00:17:37,611 - #38 x
INFO  00:17:37,611 - #3 )
INFO  00:17:37,611 - #23 +
INFO  00:17:37,611 - #37 1
INFO  00:17:37,611 - #3 )
INFO  00:17:37,611 - #17 ;
INFO  00:17:37,611 - #7 }
INFO  00:17:37,611 - #9 read
INFO  00:17:37,611 - #2 (
INFO  00:17:37,611 - #38 x
INFO  00:17:37,611 - #3 )
INFO  00:17:37,611 - #17 ;
INFO  00:17:37,612 - #7 }
INFO  00:17:37,612 - #44 while
INFO  00:17:37,612 - #2 (
INFO  00:17:37,612 - #39 true
INFO  00:17:37,612 - #3 )
INFO  00:17:37,612 - #17 ;
INFO  00:17:37,612 - #10 print
INFO  00:17:37,612 - #2 (
INFO  00:17:37,612 - #38 x
INFO  00:17:37,612 - #33 <
INFO  00:17:37,613 - #37 0
INFO  00:17:37,613 - #20 ?
INFO  00:17:37,613 - #40 -
INFO  00:17:37,613 - #18 :
INFO  00:17:37,613 - #40 +
INFO  00:17:37,613 - #3 )
INFO  00:17:37,614 - #17 ;
INFO  00:17:37,614 - #7 }
INFO  00:17:37,614 - #7 }
INFO  00:17:37,626 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  00:17:37,626 - Deklarisana promenljiva pos na liniji 3
INFO  00:17:37,626 - Deklarisana promenljiva neg na liniji 3
INFO  00:17:37,626 - Obradjuje se funkcija putp na liniji 4
INFO  00:17:37,626 - Obradjuje se funkcija putn na liniji 7
INFO  00:17:37,626 - Obradjuje se funkcija getp na liniji 10
INFO  00:17:37,626 - Obradjuje se funkcija getn na liniji 13
INFO  00:17:37,627 - Obradjuje se funkcija f na liniji 16
INFO  00:17:37,627 - Deklarisana promenljiva x na liniji 17
INFO  00:17:37,627 - Obradjuje se funkcija main na liniji 20
INFO  00:17:37,627 - Deklarisana promenljiva x na liniji 20
INFO  00:17:37,627 - Deklarisana promenljiva i na liniji 20
INFO  00:17:37,627 - Deklarisana promenljiva c na liniji 21
INFO  00:17:37,627 - Pronadjen poziv funkcije putp na liniji 31
INFO  00:17:37,627 - Pronadjen poziv funkcije putn na liniji 32
INFO  00:17:37,628 - Pronadjen poziv funkcije f na liniji 35
INFO  00:17:37,628 - Pronadjen poziv funkcije getp na liniji 40
INFO  00:17:37,628 - Pronadjen poziv funkcije putp na liniji 40
INFO  00:17:37,628 - Pronadjen poziv funkcije getn na liniji 42
INFO  00:17:37,628 - Pronadjen poziv funkcije putn na liniji 42
INFO  00:17:37,628 - Print calls = 3
INFO  00:17:37,629 - Generating bytecode file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.obj
