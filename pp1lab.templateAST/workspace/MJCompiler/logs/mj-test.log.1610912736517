INFO  20:23:57,363 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  20:23:57,406 - #8 program
INFO  20:23:57,407 - #38 p
INFO  20:23:57,407 - #16 const
INFO  20:23:57,408 - #38 int
INFO  20:23:57,408 - #38 size
INFO  20:23:57,409 - #21 =
INFO  20:23:57,409 - #37 10
INFO  20:23:57,409 - #17 ;
INFO  20:23:57,410 - #38 int
INFO  20:23:57,411 - #38 pos
INFO  20:23:57,411 - #4 [
INFO  20:23:57,411 - #5 ]
INFO  20:23:57,411 - #19 ,
INFO  20:23:57,412 - #38 neg
INFO  20:23:57,413 - #4 [
INFO  20:23:57,413 - #5 ]
INFO  20:23:57,413 - #17 ;
INFO  20:23:57,413 - #6 {
INFO  20:23:57,414 - #15 void
INFO  20:23:57,414 - #38 putp
INFO  20:23:57,415 - #2 (
INFO  20:23:57,415 - #38 int
INFO  20:23:57,415 - #38 a
INFO  20:23:57,415 - #19 ,
INFO  20:23:57,415 - #38 int
INFO  20:23:57,415 - #38 idx
INFO  20:23:57,416 - #3 )
INFO  20:23:57,416 - #6 {
INFO  20:23:57,416 - #38 pos
INFO  20:23:57,417 - #4 [
INFO  20:23:57,417 - #38 idx
INFO  20:23:57,417 - #5 ]
INFO  20:23:57,419 - #21 =
INFO  20:23:57,419 - #38 a
INFO  20:23:57,419 - #17 ;
INFO  20:23:57,420 - #7 }
INFO  20:23:57,420 - #15 void
INFO  20:23:57,420 - #38 putn
INFO  20:23:57,421 - #2 (
INFO  20:23:57,421 - #38 int
INFO  20:23:57,421 - #38 a
INFO  20:23:57,421 - #19 ,
INFO  20:23:57,421 - #38 int
INFO  20:23:57,421 - #38 idx
INFO  20:23:57,422 - #3 )
INFO  20:23:57,422 - #6 {
INFO  20:23:57,422 - #38 neg
INFO  20:23:57,422 - #4 [
INFO  20:23:57,422 - #38 idx
INFO  20:23:57,422 - #5 ]
INFO  20:23:57,422 - #21 =
INFO  20:23:57,422 - #38 a
INFO  20:23:57,422 - #17 ;
INFO  20:23:57,423 - #7 }
INFO  20:23:57,423 - #38 int
INFO  20:23:57,423 - #38 getp
INFO  20:23:57,423 - #2 (
INFO  20:23:57,423 - #38 int
INFO  20:23:57,423 - #38 idx
INFO  20:23:57,423 - #3 )
INFO  20:23:57,424 - #6 {
INFO  20:23:57,424 - #14 return
INFO  20:23:57,424 - #38 pos
INFO  20:23:57,424 - #4 [
INFO  20:23:57,424 - #38 idx
INFO  20:23:57,424 - #5 ]
INFO  20:23:57,424 - #17 ;
INFO  20:23:57,424 - #7 }
INFO  20:23:57,425 - #38 int
INFO  20:23:57,425 - #38 getn
INFO  20:23:57,425 - #2 (
INFO  20:23:57,425 - #38 int
INFO  20:23:57,425 - #38 idx
INFO  20:23:57,425 - #3 )
INFO  20:23:57,425 - #6 {
INFO  20:23:57,425 - #14 return
INFO  20:23:57,425 - #38 neg
INFO  20:23:57,425 - #4 [
INFO  20:23:57,425 - #38 idx
INFO  20:23:57,426 - #5 ]
INFO  20:23:57,426 - #17 ;
INFO  20:23:57,426 - #7 }
INFO  20:23:57,426 - #15 void
INFO  20:23:57,426 - #38 f
INFO  20:23:57,426 - #2 (
INFO  20:23:57,426 - #38 char
INFO  20:23:57,426 - #38 ch
INFO  20:23:57,426 - #19 ,
INFO  20:23:57,426 - #38 int
INFO  20:23:57,426 - #38 a
INFO  20:23:57,427 - #19 ,
INFO  20:23:57,427 - #38 int
INFO  20:23:57,427 - #38 arg
INFO  20:23:57,427 - #3 )
INFO  20:23:57,427 - #38 int
INFO  20:23:57,428 - #38 x
INFO  20:23:57,428 - #17 ;
INFO  20:23:57,429 - #6 {
INFO  20:23:57,429 - #38 x
INFO  20:23:57,429 - #21 =
INFO  20:23:57,434 - #38 arg
INFO  20:23:57,434 - #17 ;
INFO  20:23:57,434 - #7 }
INFO  20:23:57,434 - #15 void
INFO  20:23:57,434 - #38 main
INFO  20:23:57,434 - #2 (
INFO  20:23:57,434 - #3 )
INFO  20:23:57,435 - #38 int
INFO  20:23:57,435 - #38 x
INFO  20:23:57,435 - #19 ,
INFO  20:23:57,436 - #38 i
INFO  20:23:57,436 - #17 ;
INFO  20:23:57,436 - #38 char
INFO  20:23:57,436 - #38 c
INFO  20:23:57,436 - #17 ;
INFO  20:23:57,436 - #6 {
INFO  20:23:57,436 - #38 pos
INFO  20:23:57,436 - #21 =
INFO  20:23:57,436 - #13 new
INFO  20:23:57,436 - #38 int
INFO  20:23:57,436 - #4 [
INFO  20:23:57,436 - #38 size
INFO  20:23:57,437 - #5 ]
INFO  20:23:57,437 - #17 ;
INFO  20:23:57,437 - #38 neg
INFO  20:23:57,437 - #21 =
INFO  20:23:57,437 - #13 new
INFO  20:23:57,437 - #38 int
INFO  20:23:57,437 - #4 [
INFO  20:23:57,437 - #38 size
INFO  20:23:57,437 - #5 ]
INFO  20:23:57,437 - #17 ;
INFO  20:23:57,438 - #38 i
INFO  20:23:57,438 - #21 =
INFO  20:23:57,438 - #37 0
INFO  20:23:57,438 - #17 ;
INFO  20:23:57,438 - #41 if
INFO  20:23:57,438 - #2 (
INFO  20:23:57,438 - #37 1
INFO  20:23:57,438 - #31 ==
INFO  20:23:57,438 - #37 1
INFO  20:23:57,439 - #3 )
INFO  20:23:57,441 - #6 {
INFO  20:23:57,442 - #10 print
INFO  20:23:57,442 - #2 (
INFO  20:23:57,442 - #37 1
INFO  20:23:57,442 - #3 )
INFO  20:23:57,443 - #17 ;
INFO  20:23:57,443 - #7 }
INFO  20:23:57,443 - #42 else
INFO  20:23:57,443 - #6 {
INFO  20:23:57,443 - #10 print
INFO  20:23:57,443 - #2 (
INFO  20:23:57,443 - #37 2
INFO  20:23:57,443 - #3 )
INFO  20:23:57,443 - #17 ;
INFO  20:23:57,443 - #7 }
INFO  20:23:57,444 - #43 do
INFO  20:23:57,444 - #6 {
INFO  20:23:57,444 - #38 putp
INFO  20:23:57,444 - #2 (
INFO  20:23:57,444 - #37 0
INFO  20:23:57,444 - #19 ,
INFO  20:23:57,444 - #38 i
INFO  20:23:57,444 - #3 )
INFO  20:23:57,445 - #17 ;
INFO  20:23:57,445 - #38 putn
INFO  20:23:57,445 - #2 (
INFO  20:23:57,445 - #37 0
INFO  20:23:57,445 - #19 ,
INFO  20:23:57,445 - #38 i
INFO  20:23:57,445 - #3 )
INFO  20:23:57,445 - #17 ;
INFO  20:23:57,445 - #38 i
INFO  20:23:57,446 - #27 ++
INFO  20:23:57,446 - #17 ;
INFO  20:23:57,446 - #7 }
INFO  20:23:57,446 - #44 while
INFO  20:23:57,446 - #2 (
INFO  20:23:57,446 - #38 i
INFO  20:23:57,446 - #33 <
INFO  20:23:57,446 - #38 size
INFO  20:23:57,447 - #3 )
INFO  20:23:57,447 - #17 ;
INFO  20:23:57,447 - #38 f
INFO  20:23:57,447 - #2 (
INFO  20:23:57,448 - #38 c
INFO  20:23:57,448 - #19 ,
INFO  20:23:57,448 - #38 x
INFO  20:23:57,448 - #19 ,
INFO  20:23:57,448 - #38 i
INFO  20:23:57,448 - #3 )
INFO  20:23:57,448 - #17 ;
INFO  20:23:57,448 - #9 read
INFO  20:23:57,448 - #2 (
INFO  20:23:57,448 - #38 x
INFO  20:23:57,448 - #3 )
INFO  20:23:57,448 - #17 ;
INFO  20:23:57,448 - #43 do
INFO  20:23:57,448 - #6 {
INFO  20:23:57,448 - #41 if
INFO  20:23:57,448 - #2 (
INFO  20:23:57,449 - #38 x
INFO  20:23:57,449 - #34 <=
INFO  20:23:57,449 - #37 0
INFO  20:23:57,449 - #3 )
INFO  20:23:57,450 - #11 break
INFO  20:23:57,450 - #17 ;
INFO  20:23:57,450 - #41 if
INFO  20:23:57,450 - #2 (
INFO  20:23:57,450 - #37 0
INFO  20:23:57,451 - #34 <=
INFO  20:23:57,451 - #38 x
INFO  20:23:57,451 - #30 &&
INFO  20:23:57,451 - #38 x
INFO  20:23:57,451 - #33 <
INFO  20:23:57,451 - #38 size
INFO  20:23:57,451 - #3 )
INFO  20:23:57,451 - #6 {
INFO  20:23:57,451 - #38 putp
INFO  20:23:57,451 - #2 (
INFO  20:23:57,451 - #38 getp
INFO  20:23:57,451 - #2 (
INFO  20:23:57,452 - #38 x
INFO  20:23:57,452 - #3 )
INFO  20:23:57,452 - #23 +
INFO  20:23:57,452 - #37 1
INFO  20:23:57,453 - #3 )
INFO  20:23:57,456 - #17 ;
INFO  20:23:57,456 - #7 }
INFO  20:23:57,456 - #42 else
INFO  20:23:57,456 - #41 if
INFO  20:23:57,456 - #2 (
INFO  20:23:57,456 - #22 -
INFO  20:23:57,456 - #38 size
INFO  20:23:57,456 - #33 <
INFO  20:23:57,456 - #38 x
INFO  20:23:57,456 - #30 &&
INFO  20:23:57,456 - #38 x
INFO  20:23:57,456 - #33 <
INFO  20:23:57,457 - #37 0
INFO  20:23:57,457 - #3 )
INFO  20:23:57,457 - #6 {
INFO  20:23:57,457 - #38 putn
INFO  20:23:57,457 - #2 (
INFO  20:23:57,457 - #38 getn
INFO  20:23:57,457 - #2 (
INFO  20:23:57,457 - #22 -
INFO  20:23:57,457 - #38 x
INFO  20:23:57,457 - #3 )
INFO  20:23:57,457 - #23 +
INFO  20:23:57,457 - #37 1
INFO  20:23:57,457 - #3 )
INFO  20:23:57,457 - #17 ;
INFO  20:23:57,457 - #7 }
INFO  20:23:57,458 - #9 read
INFO  20:23:57,458 - #2 (
INFO  20:23:57,458 - #38 x
INFO  20:23:57,458 - #3 )
INFO  20:23:57,458 - #17 ;
INFO  20:23:57,458 - #7 }
INFO  20:23:57,458 - #44 while
INFO  20:23:57,458 - #2 (
INFO  20:23:57,458 - #39 true
INFO  20:23:57,458 - #3 )
INFO  20:23:57,458 - #17 ;
INFO  20:23:57,458 - #10 print
INFO  20:23:57,458 - #2 (
INFO  20:23:57,458 - #38 x
INFO  20:23:57,458 - #33 <
INFO  20:23:57,459 - #37 0
INFO  20:23:57,459 - #20 ?
INFO  20:23:57,459 - #40 -
INFO  20:23:57,459 - #18 :
INFO  20:23:57,459 - #40 +
INFO  20:23:57,459 - #3 )
INFO  20:23:57,460 - #17 ;
INFO  20:23:57,460 - #7 }
INFO  20:23:57,460 - #7 }
