INFO  00:10:52,403 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:10:52,462 - #8 program
INFO  00:10:52,462 - #38 p
INFO  00:10:52,463 - #16 const
INFO  00:10:52,464 - #38 int
INFO  00:10:52,464 - #38 size
INFO  00:10:52,464 - #21 =
INFO  00:10:52,465 - #37 10
INFO  00:10:52,465 - #17 ;
INFO  00:10:52,466 - #38 int
INFO  00:10:52,467 - #38 pos
INFO  00:10:52,467 - #4 [
INFO  00:10:52,467 - #5 ]
INFO  00:10:52,467 - #19 ,
INFO  00:10:52,470 - #38 neg
INFO  00:10:52,471 - #4 [
INFO  00:10:52,472 - #5 ]
INFO  00:10:52,472 - #17 ;
INFO  00:10:52,472 - #6 {
INFO  00:10:52,473 - #15 void
INFO  00:10:52,477 - #38 putp
INFO  00:10:52,478 - #2 (
INFO  00:10:52,478 - #38 int
INFO  00:10:52,478 - #38 a
INFO  00:10:52,479 - #19 ,
INFO  00:10:52,480 - #38 int
INFO  00:10:52,480 - #38 idx
INFO  00:10:52,480 - #3 )
INFO  00:10:52,482 - #6 {
INFO  00:10:52,482 - #38 pos
INFO  00:10:52,483 - #4 [
INFO  00:10:52,484 - #38 idx
INFO  00:10:52,484 - #5 ]
INFO  00:10:52,487 - #21 =
INFO  00:10:52,487 - #38 a
INFO  00:10:52,487 - #17 ;
INFO  00:10:52,487 - #7 }
INFO  00:10:52,487 - #15 void
INFO  00:10:52,489 - #38 putn
INFO  00:10:52,489 - #2 (
INFO  00:10:52,489 - #38 int
INFO  00:10:52,489 - #38 a
INFO  00:10:52,489 - #19 ,
INFO  00:10:52,489 - #38 int
INFO  00:10:52,490 - #38 idx
INFO  00:10:52,490 - #3 )
INFO  00:10:52,490 - #6 {
INFO  00:10:52,490 - #38 neg
INFO  00:10:52,490 - #4 [
INFO  00:10:52,490 - #38 idx
INFO  00:10:52,490 - #5 ]
INFO  00:10:52,491 - #21 =
INFO  00:10:52,491 - #38 a
INFO  00:10:52,491 - #17 ;
INFO  00:10:52,491 - #7 }
INFO  00:10:52,491 - #38 int
INFO  00:10:52,491 - #38 getp
INFO  00:10:52,491 - #2 (
INFO  00:10:52,492 - #38 int
INFO  00:10:52,492 - #38 idx
INFO  00:10:52,492 - #3 )
INFO  00:10:52,492 - #6 {
INFO  00:10:52,492 - #14 return
INFO  00:10:52,492 - #38 pos
INFO  00:10:52,492 - #4 [
INFO  00:10:52,492 - #38 idx
INFO  00:10:52,492 - #5 ]
INFO  00:10:52,493 - #17 ;
INFO  00:10:52,493 - #7 }
INFO  00:10:52,493 - #38 int
INFO  00:10:52,493 - #38 getn
INFO  00:10:52,493 - #2 (
INFO  00:10:52,493 - #38 int
INFO  00:10:52,493 - #38 idx
INFO  00:10:52,494 - #3 )
INFO  00:10:52,494 - #6 {
INFO  00:10:52,494 - #14 return
INFO  00:10:52,494 - #38 neg
INFO  00:10:52,494 - #4 [
INFO  00:10:52,494 - #38 idx
INFO  00:10:52,494 - #5 ]
INFO  00:10:52,494 - #17 ;
INFO  00:10:52,494 - #7 }
INFO  00:10:52,495 - #15 void
INFO  00:10:52,495 - #38 f
INFO  00:10:52,495 - #2 (
INFO  00:10:52,495 - #38 char
INFO  00:10:52,495 - #38 ch
INFO  00:10:52,495 - #19 ,
INFO  00:10:52,495 - #38 int
INFO  00:10:52,495 - #38 a
INFO  00:10:52,495 - #19 ,
INFO  00:10:52,495 - #38 int
INFO  00:10:52,495 - #38 arg
INFO  00:10:52,495 - #3 )
INFO  00:10:52,496 - #38 int
INFO  00:10:52,496 - #38 x
INFO  00:10:52,496 - #17 ;
INFO  00:10:52,496 - #6 {
INFO  00:10:52,496 - #38 x
INFO  00:10:52,496 - #21 =
INFO  00:10:52,496 - #38 arg
INFO  00:10:52,496 - #17 ;
INFO  00:10:52,496 - #7 }
INFO  00:10:52,496 - #15 void
INFO  00:10:52,497 - #38 main
INFO  00:10:52,497 - #2 (
INFO  00:10:52,497 - #3 )
INFO  00:10:52,498 - #38 int
INFO  00:10:52,498 - #38 x
INFO  00:10:52,498 - #19 ,
INFO  00:10:52,498 - #38 i
INFO  00:10:52,498 - #17 ;
INFO  00:10:52,498 - #38 char
INFO  00:10:52,498 - #38 c
INFO  00:10:52,498 - #17 ;
INFO  00:10:52,498 - #6 {
INFO  00:10:52,499 - #38 pos
INFO  00:10:52,499 - #21 =
INFO  00:10:52,499 - #13 new
INFO  00:10:52,499 - #38 int
INFO  00:10:52,499 - #4 [
INFO  00:10:52,499 - #38 size
INFO  00:10:52,499 - #5 ]
INFO  00:10:52,499 - #17 ;
INFO  00:10:52,499 - #38 neg
INFO  00:10:52,500 - #21 =
INFO  00:10:52,500 - #13 new
INFO  00:10:52,500 - #38 int
INFO  00:10:52,500 - #4 [
INFO  00:10:52,500 - #38 size
INFO  00:10:52,500 - #5 ]
INFO  00:10:52,500 - #17 ;
INFO  00:10:52,500 - #38 i
INFO  00:10:52,500 - #21 =
INFO  00:10:52,501 - #37 0
INFO  00:10:52,501 - #17 ;
INFO  00:10:52,501 - #41 if
INFO  00:10:52,501 - #2 (
INFO  00:10:52,502 - #37 1
INFO  00:10:52,502 - #31 ==
INFO  00:10:52,502 - #37 1
INFO  00:10:52,504 - #3 )
INFO  00:10:52,508 - #6 {
INFO  00:10:52,509 - #10 print
INFO  00:10:52,509 - #2 (
INFO  00:10:52,509 - #37 1
INFO  00:10:52,509 - #3 )
INFO  00:10:52,510 - #17 ;
INFO  00:10:52,510 - #7 }
INFO  00:10:52,510 - #42 else
INFO  00:10:52,510 - #6 {
INFO  00:10:52,510 - #10 print
INFO  00:10:52,510 - #2 (
INFO  00:10:52,510 - #37 2
INFO  00:10:52,510 - #3 )
INFO  00:10:52,511 - #17 ;
INFO  00:10:52,511 - #7 }
INFO  00:10:52,511 - #43 do
INFO  00:10:52,511 - #6 {
INFO  00:10:52,511 - #38 putp
INFO  00:10:52,511 - #2 (
INFO  00:10:52,511 - #37 0
INFO  00:10:52,511 - #19 ,
INFO  00:10:52,511 - #38 i
INFO  00:10:52,517 - #3 )
INFO  00:10:52,518 - #17 ;
INFO  00:10:52,518 - #38 putn
INFO  00:10:52,519 - #2 (
INFO  00:10:52,519 - #37 0
INFO  00:10:52,519 - #19 ,
INFO  00:10:52,519 - #38 i
INFO  00:10:52,519 - #3 )
INFO  00:10:52,519 - #17 ;
INFO  00:10:52,519 - #38 i
INFO  00:10:52,519 - #27 ++
INFO  00:10:52,520 - #17 ;
INFO  00:10:52,520 - #7 }
INFO  00:10:52,520 - #44 while
INFO  00:10:52,520 - #2 (
INFO  00:10:52,520 - #38 i
INFO  00:10:52,520 - #33 <
INFO  00:10:52,520 - #38 size
INFO  00:10:52,521 - #3 )
INFO  00:10:52,521 - #17 ;
INFO  00:10:52,521 - #38 f
INFO  00:10:52,522 - #2 (
INFO  00:10:52,522 - #38 c
INFO  00:10:52,522 - #19 ,
INFO  00:10:52,522 - #38 x
INFO  00:10:52,522 - #19 ,
INFO  00:10:52,522 - #38 i
INFO  00:10:52,522 - #3 )
INFO  00:10:52,522 - #17 ;
INFO  00:10:52,522 - #9 read
INFO  00:10:52,522 - #2 (
INFO  00:10:52,523 - #38 x
INFO  00:10:52,523 - #3 )
INFO  00:10:52,523 - #17 ;
INFO  00:10:52,523 - #43 do
INFO  00:10:52,523 - #6 {
INFO  00:10:52,523 - #41 if
INFO  00:10:52,523 - #2 (
INFO  00:10:52,523 - #38 x
INFO  00:10:52,523 - #34 <=
INFO  00:10:52,523 - #37 0
INFO  00:10:52,524 - #3 )
INFO  00:10:52,524 - #11 break
INFO  00:10:52,524 - #17 ;
INFO  00:10:52,524 - #41 if
INFO  00:10:52,525 - #2 (
INFO  00:10:52,525 - #37 0
INFO  00:10:52,525 - #34 <=
INFO  00:10:52,525 - #38 x
INFO  00:10:52,525 - #30 &&
INFO  00:10:52,525 - #38 x
INFO  00:10:52,525 - #33 <
INFO  00:10:52,526 - #38 size
INFO  00:10:52,526 - #3 )
INFO  00:10:52,526 - #6 {
INFO  00:10:52,526 - #38 putp
INFO  00:10:52,526 - #2 (
INFO  00:10:52,526 - #38 getp
INFO  00:10:52,526 - #2 (
INFO  00:10:52,526 - #38 x
INFO  00:10:52,526 - #19 ,
INFO  00:10:52,526 - #38 i
INFO  00:10:52,526 - #19 ,
INFO  00:10:52,526 - #38 c
INFO  00:10:52,526 - #19 ,
INFO  00:10:52,526 - #37 1
INFO  00:10:52,527 - #3 )
INFO  00:10:52,527 - #23 +
INFO  00:10:52,527 - #37 1
INFO  00:10:52,528 - #3 )
INFO  00:10:52,528 - #17 ;
INFO  00:10:52,528 - #7 }
INFO  00:10:52,528 - #42 else
INFO  00:10:52,528 - #41 if
INFO  00:10:52,528 - #2 (
INFO  00:10:52,528 - #22 -
INFO  00:10:52,528 - #38 size
INFO  00:10:52,528 - #33 <
INFO  00:10:52,528 - #38 x
INFO  00:10:52,529 - #30 &&
INFO  00:10:52,529 - #38 x
INFO  00:10:52,529 - #33 <
INFO  00:10:52,529 - #37 0
INFO  00:10:52,529 - #3 )
INFO  00:10:52,529 - #6 {
INFO  00:10:52,529 - #38 putn
INFO  00:10:52,529 - #2 (
INFO  00:10:52,529 - #38 getn
INFO  00:10:52,529 - #2 (
INFO  00:10:52,529 - #22 -
INFO  00:10:52,529 - #38 x
INFO  00:10:52,529 - #3 )
INFO  00:10:52,529 - #23 +
INFO  00:10:52,530 - #37 1
INFO  00:10:52,530 - #3 )
INFO  00:10:52,530 - #17 ;
INFO  00:10:52,530 - #7 }
INFO  00:10:52,530 - #9 read
INFO  00:10:52,530 - #2 (
INFO  00:10:52,530 - #38 x
INFO  00:10:52,530 - #3 )
INFO  00:10:52,530 - #17 ;
INFO  00:10:52,530 - #7 }
INFO  00:10:52,530 - #44 while
INFO  00:10:52,530 - #2 (
INFO  00:10:52,530 - #39 true
INFO  00:10:52,530 - #3 )
INFO  00:10:52,530 - #17 ;
INFO  00:10:52,531 - #10 print
INFO  00:10:52,531 - #2 (
INFO  00:10:52,531 - #38 x
INFO  00:10:52,531 - #33 <
INFO  00:10:52,531 - #37 0
INFO  00:10:52,531 - #20 ?
INFO  00:10:52,531 - #40 -
INFO  00:10:52,531 - #18 :
INFO  00:10:52,531 - #40 +
INFO  00:10:52,531 - #3 )
INFO  00:10:52,532 - #17 ;
INFO  00:10:52,532 - #7 }
INFO  00:10:52,532 - #7 }
INFO  00:10:52,543 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  00:10:52,544 - Deklarisana promenljiva pos na liniji 3
INFO  00:10:52,544 - Deklarisana promenljiva neg na liniji 3
INFO  00:10:52,544 - Obradjuje se funkcija putp na liniji 4
INFO  00:10:52,544 - Obradjuje se funkcija putn na liniji 7
INFO  00:10:52,544 - Obradjuje se funkcija getp na liniji 10
INFO  00:10:52,545 - Obradjuje se funkcija getn na liniji 13
INFO  00:10:52,545 - Obradjuje se funkcija f na liniji 16
INFO  00:10:52,545 - Deklarisana promenljiva x na liniji 17
INFO  00:10:52,545 - Obradjuje se funkcija main na liniji 20
INFO  00:10:52,545 - Deklarisana promenljiva x na liniji 20
INFO  00:10:52,545 - Deklarisana promenljiva i na liniji 20
INFO  00:10:52,545 - Deklarisana promenljiva c na liniji 21
INFO  00:10:52,545 - Pronadjen poziv funkcije putp na liniji 31
INFO  00:10:52,545 - Pronadjen poziv funkcije putn na liniji 32
INFO  00:10:52,545 - Pronadjen poziv funkcije f na liniji 35
INFO  00:10:52,545 - Pronadjen poziv funkcije getp na liniji 40
ERROR 00:10:52,546 - Semanticka greska na liniji 40 : Neodgovarajuc broj aktuelnih parametera (4) i formalnih parametara (1) za funkciju getp
INFO  00:10:52,546 - Pronadjen poziv funkcije putp na liniji 40
INFO  00:10:52,546 - Pronadjen poziv funkcije getn na liniji 42
INFO  00:10:52,546 - Pronadjen poziv funkcije putn na liniji 42
INFO  00:10:52,546 - Print calls = 3
ERROR 00:10:52,547 - Parsiranje NIJE uspesno zavrseno!
