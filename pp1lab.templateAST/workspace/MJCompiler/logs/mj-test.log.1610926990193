INFO  00:41:00,738 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:41:00,914 - #8 program
INFO  00:41:00,915 - #38 p
INFO  00:41:00,915 - #16 const
INFO  00:41:00,916 - #38 int
INFO  00:41:00,916 - #38 size
INFO  00:41:00,917 - #21 =
INFO  00:41:00,917 - #37 10
INFO  00:41:00,917 - #17 ;
INFO  00:41:00,920 - #38 int
INFO  00:41:00,921 - #38 pos
INFO  00:41:00,921 - #4 [
INFO  00:41:00,921 - #5 ]
INFO  00:41:00,921 - #19 ,
INFO  00:41:00,923 - #38 neg
INFO  00:41:00,923 - #4 [
INFO  00:41:00,923 - #5 ]
INFO  00:41:00,923 - #17 ;
INFO  00:41:00,923 - #6 {
INFO  00:41:00,924 - #15 void
INFO  00:41:00,925 - #38 putp
INFO  00:41:00,926 - #2 (
INFO  00:41:00,926 - #38 int
INFO  00:41:00,926 - #38 a
INFO  00:41:00,926 - #19 ,
INFO  00:41:00,928 - #38 int
INFO  00:41:00,928 - #38 idx
INFO  00:41:00,928 - #3 )
INFO  00:41:00,929 - #6 {
INFO  00:41:00,929 - #38 pos
INFO  00:41:00,930 - #4 [
INFO  00:41:00,930 - #38 idx
INFO  00:41:00,930 - #5 ]
INFO  00:41:00,933 - #21 =
INFO  00:41:00,933 - #38 a
INFO  00:41:00,933 - #17 ;
INFO  00:41:00,934 - #7 }
INFO  00:41:00,935 - #15 void
INFO  00:41:00,936 - #38 putn
INFO  00:41:00,936 - #2 (
INFO  00:41:00,936 - #38 int
INFO  00:41:00,936 - #38 a
INFO  00:41:00,937 - #19 ,
INFO  00:41:00,937 - #38 int
INFO  00:41:00,937 - #38 idx
INFO  00:41:00,937 - #3 )
INFO  00:41:00,937 - #6 {
INFO  00:41:00,937 - #38 neg
INFO  00:41:00,938 - #4 [
INFO  00:41:00,938 - #38 idx
INFO  00:41:00,938 - #5 ]
INFO  00:41:00,938 - #21 =
INFO  00:41:00,938 - #38 a
INFO  00:41:00,938 - #17 ;
INFO  00:41:00,939 - #7 }
INFO  00:41:00,939 - #38 int
INFO  00:41:00,939 - #38 getp
INFO  00:41:00,940 - #2 (
INFO  00:41:00,940 - #38 int
INFO  00:41:00,940 - #38 idx
INFO  00:41:00,940 - #19 ,
INFO  00:41:00,940 - #38 int
INFO  00:41:00,940 - #38 a
INFO  00:41:00,941 - #19 ,
INFO  00:41:00,941 - #38 char
INFO  00:41:00,941 - #38 b
INFO  00:41:00,941 - #19 ,
INFO  00:41:00,942 - #38 int
INFO  00:41:00,942 - #38 c
INFO  00:41:00,942 - #3 )
INFO  00:41:00,942 - #38 int
INFO  00:41:00,942 - #38 d
INFO  00:41:00,942 - #17 ;
INFO  00:41:00,943 - #6 {
INFO  00:41:00,943 - #14 return
INFO  00:41:00,943 - #38 pos
INFO  00:41:00,944 - #4 [
INFO  00:41:00,944 - #38 idx
INFO  00:41:00,944 - #5 ]
INFO  00:41:00,944 - #17 ;
INFO  00:41:00,944 - #7 }
INFO  00:41:00,945 - #38 int
INFO  00:41:00,945 - #38 getn
INFO  00:41:00,945 - #2 (
INFO  00:41:00,945 - #38 int
INFO  00:41:00,945 - #38 idx
INFO  00:41:00,945 - #3 )
INFO  00:41:00,945 - #6 {
INFO  00:41:00,945 - #14 return
INFO  00:41:00,946 - #38 neg
INFO  00:41:00,946 - #4 [
INFO  00:41:00,946 - #38 idx
INFO  00:41:00,946 - #5 ]
INFO  00:41:00,946 - #17 ;
INFO  00:41:00,946 - #7 }
INFO  00:41:00,946 - #15 void
INFO  00:41:00,946 - #38 f
INFO  00:41:00,947 - #2 (
INFO  00:41:00,947 - #38 char
INFO  00:41:00,947 - #38 ch
INFO  00:41:00,947 - #19 ,
INFO  00:41:00,953 - #38 int
INFO  00:41:00,953 - #38 a
INFO  00:41:00,953 - #19 ,
INFO  00:41:00,954 - #38 int
INFO  00:41:00,954 - #38 arg
INFO  00:41:00,954 - #3 )
INFO  00:41:00,954 - #38 int
INFO  00:41:00,954 - #38 x
INFO  00:41:00,954 - #17 ;
INFO  00:41:00,954 - #6 {
INFO  00:41:00,954 - #38 x
INFO  00:41:00,954 - #21 =
INFO  00:41:00,955 - #38 arg
INFO  00:41:00,955 - #17 ;
INFO  00:41:00,955 - #7 }
INFO  00:41:00,955 - #15 void
INFO  00:41:00,955 - #38 main
INFO  00:41:00,955 - #2 (
INFO  00:41:00,955 - #3 )
INFO  00:41:00,957 - #38 int
INFO  00:41:00,957 - #38 x
INFO  00:41:00,957 - #19 ,
INFO  00:41:00,957 - #38 i
INFO  00:41:00,957 - #17 ;
INFO  00:41:00,958 - #38 char
INFO  00:41:00,958 - #38 c
INFO  00:41:00,958 - #17 ;
INFO  00:41:00,958 - #6 {
INFO  00:41:00,958 - #38 pos
INFO  00:41:00,958 - #21 =
INFO  00:41:00,960 - #13 new
INFO  00:41:00,960 - #38 int
INFO  00:41:00,960 - #4 [
INFO  00:41:00,960 - #38 size
INFO  00:41:00,960 - #5 ]
INFO  00:41:00,961 - #17 ;
INFO  00:41:00,961 - #38 neg
INFO  00:41:00,962 - #21 =
INFO  00:41:00,962 - #13 new
INFO  00:41:00,962 - #38 int
INFO  00:41:00,962 - #4 [
INFO  00:41:00,962 - #38 size
INFO  00:41:00,963 - #5 ]
INFO  00:41:00,963 - #17 ;
INFO  00:41:00,963 - #38 i
INFO  00:41:00,963 - #21 =
INFO  00:41:00,963 - #37 0
INFO  00:41:00,963 - #17 ;
INFO  00:41:00,963 - #41 if
INFO  00:41:00,964 - #2 (
INFO  00:41:00,964 - #37 1
INFO  00:41:00,964 - #31 ==
INFO  00:41:00,964 - #37 1
INFO  00:41:00,965 - #3 )
INFO  00:41:00,976 - #6 {
INFO  00:41:00,977 - #10 print
INFO  00:41:00,978 - #2 (
INFO  00:41:00,979 - #37 1
INFO  00:41:00,979 - #3 )
INFO  00:41:00,980 - #17 ;
INFO  00:41:00,983 - #7 }
INFO  00:41:00,983 - #42 else
INFO  00:41:00,983 - #6 {
INFO  00:41:00,983 - #10 print
INFO  00:41:00,983 - #2 (
INFO  00:41:00,983 - #37 2
INFO  00:41:00,984 - #3 )
INFO  00:41:00,984 - #17 ;
INFO  00:41:00,984 - #7 }
INFO  00:41:00,984 - #43 do
INFO  00:41:00,984 - #6 {
INFO  00:41:00,984 - #38 putp
INFO  00:41:00,984 - #2 (
INFO  00:41:00,985 - #37 0
INFO  00:41:00,985 - #19 ,
INFO  00:41:00,985 - #38 i
INFO  00:41:00,985 - #3 )
INFO  00:41:00,986 - #17 ;
INFO  00:41:00,987 - #38 putn
INFO  00:41:00,987 - #2 (
INFO  00:41:00,987 - #37 0
INFO  00:41:00,987 - #19 ,
INFO  00:41:00,987 - #38 i
INFO  00:41:00,987 - #3 )
INFO  00:41:00,988 - #17 ;
INFO  00:41:00,988 - #38 i
INFO  00:41:00,988 - #27 ++
INFO  00:41:00,988 - #17 ;
INFO  00:41:00,988 - #7 }
INFO  00:41:00,988 - #44 while
INFO  00:41:00,988 - #2 (
INFO  00:41:00,988 - #38 i
INFO  00:41:00,988 - #33 <
INFO  00:41:00,988 - #38 size
INFO  00:41:00,989 - #3 )
INFO  00:41:00,989 - #17 ;
INFO  00:41:00,989 - #38 f
INFO  00:41:00,989 - #2 (
INFO  00:41:00,989 - #38 c
INFO  00:41:00,989 - #19 ,
INFO  00:41:00,990 - #38 x
INFO  00:41:00,990 - #19 ,
INFO  00:41:00,990 - #38 i
INFO  00:41:00,990 - #3 )
INFO  00:41:00,990 - #17 ;
INFO  00:41:00,990 - #9 read
INFO  00:41:00,990 - #2 (
INFO  00:41:00,990 - #38 x
INFO  00:41:00,990 - #3 )
INFO  00:41:00,990 - #17 ;
INFO  00:41:00,990 - #43 do
INFO  00:41:00,990 - #6 {
INFO  00:41:00,990 - #41 if
INFO  00:41:00,990 - #2 (
INFO  00:41:00,991 - #38 x
INFO  00:41:00,991 - #34 <=
INFO  00:41:00,991 - #37 0
INFO  00:41:00,991 - #3 )
INFO  00:41:00,991 - #11 break
INFO  00:41:00,991 - #17 ;
INFO  00:41:00,992 - #41 if
INFO  00:41:00,992 - #2 (
INFO  00:41:00,992 - #37 0
INFO  00:41:00,992 - #34 <=
INFO  00:41:00,992 - #38 x
INFO  00:41:00,992 - #30 &&
INFO  00:41:00,992 - #38 x
INFO  00:41:00,993 - #33 <
INFO  00:41:00,993 - #38 size
INFO  00:41:00,993 - #3 )
INFO  00:41:00,993 - #6 {
INFO  00:41:00,993 - #38 putp
INFO  00:41:00,993 - #2 (
INFO  00:41:00,993 - #38 getp
INFO  00:41:00,993 - #2 (
INFO  00:41:00,993 - #38 x
INFO  00:41:00,993 - #19 ,
INFO  00:41:00,993 - #38 i
INFO  00:41:00,993 - #19 ,
INFO  00:41:00,993 - #38 c
INFO  00:41:00,993 - #19 ,
INFO  00:41:00,993 - #37 1
INFO  00:41:00,994 - #3 )
INFO  00:41:00,994 - #23 +
INFO  00:41:00,994 - #37 1
INFO  00:41:00,995 - #3 )
INFO  00:41:00,995 - #17 ;
INFO  00:41:00,995 - #7 }
INFO  00:41:00,995 - #42 else
INFO  00:41:00,995 - #41 if
INFO  00:41:00,995 - #2 (
INFO  00:41:00,995 - #22 -
INFO  00:41:00,995 - #38 size
INFO  00:41:00,995 - #33 <
INFO  00:41:00,996 - #38 x
INFO  00:41:00,996 - #30 &&
INFO  00:41:00,996 - #38 x
INFO  00:41:00,996 - #33 <
INFO  00:41:00,996 - #37 0
INFO  00:41:00,996 - #3 )
INFO  00:41:00,996 - #6 {
INFO  00:41:00,996 - #38 putn
INFO  00:41:00,996 - #2 (
INFO  00:41:00,996 - #38 getn
INFO  00:41:00,996 - #2 (
INFO  00:41:00,996 - #22 -
INFO  00:41:00,996 - #38 x
INFO  00:41:00,996 - #3 )
INFO  00:41:00,996 - #23 +
INFO  00:41:00,997 - #37 1
INFO  00:41:00,997 - #3 )
INFO  00:41:00,997 - #17 ;
INFO  00:41:00,997 - #7 }
INFO  00:41:00,997 - #9 read
INFO  00:41:00,997 - #2 (
INFO  00:41:00,997 - #38 x
INFO  00:41:00,997 - #3 )
INFO  00:41:00,997 - #17 ;
INFO  00:41:00,997 - #7 }
INFO  00:41:00,997 - #44 while
INFO  00:41:00,997 - #2 (
INFO  00:41:00,997 - #39 true
INFO  00:41:00,998 - #3 )
INFO  00:41:00,998 - #17 ;
INFO  00:41:00,998 - #10 print
INFO  00:41:00,998 - #2 (
INFO  00:41:00,998 - #38 x
INFO  00:41:00,998 - #33 <
INFO  00:41:00,998 - #37 0
INFO  00:41:00,999 - #20 ?
INFO  00:41:00,999 - #40 -
INFO  00:41:00,999 - #18 :
INFO  00:41:00,999 - #40 +
INFO  00:41:00,999 - #3 )
INFO  00:41:01,000 - #17 ;
INFO  00:41:01,000 - #7 }
INFO  00:41:01,000 - #7 }
INFO  00:41:01,019 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  00:41:01,019 - Deklarisana promenljiva pos na liniji 3
INFO  00:41:01,020 - Deklarisana promenljiva neg na liniji 3
INFO  00:41:01,020 - Obradjuje se funkcija putp na liniji 4
INFO  00:41:01,020 - Obradjuje se funkcija putn na liniji 7
INFO  00:41:01,022 - Obradjuje se funkcija getp na liniji 10
INFO  00:41:01,022 - Deklarisana promenljiva d na liniji 10
INFO  00:41:01,022 - Obradjuje se funkcija getn na liniji 13
INFO  00:41:01,022 - Obradjuje se funkcija f na liniji 16
INFO  00:41:01,022 - Deklarisana promenljiva x na liniji 17
INFO  00:41:01,022 - Obradjuje se funkcija main na liniji 20
INFO  00:41:01,022 - Deklarisana promenljiva x na liniji 20
INFO  00:41:01,022 - Deklarisana promenljiva i na liniji 20
INFO  00:41:01,022 - Deklarisana promenljiva c na liniji 21
INFO  00:41:01,023 - Pronadjen poziv funkcije putp na liniji 31
INFO  00:41:01,023 - Pronadjen poziv funkcije putn na liniji 32
INFO  00:41:01,023 - Pronadjen poziv funkcije f na liniji 35
INFO  00:41:01,023 - Pronadjen poziv funkcije getp na liniji 40
