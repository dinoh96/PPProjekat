INFO  00:06:57,412 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  00:06:57,557 - #8 program
INFO  00:06:57,557 - #38 p
INFO  00:06:57,557 - #16 const
INFO  00:06:57,560 - #38 int
INFO  00:06:57,560 - #38 size
INFO  00:06:57,564 - #21 =
INFO  00:06:57,565 - #37 10
INFO  00:06:57,572 - #17 ;
INFO  00:06:57,575 - #38 int
INFO  00:06:57,580 - #38 pos
INFO  00:06:57,580 - #4 [
INFO  00:06:57,580 - #5 ]
INFO  00:06:57,581 - #19 ,
INFO  00:06:57,590 - #38 neg
INFO  00:06:57,591 - #4 [
INFO  00:06:57,592 - #5 ]
INFO  00:06:57,593 - #17 ;
INFO  00:06:57,594 - #6 {
INFO  00:06:57,596 - #15 void
INFO  00:06:57,599 - #38 putp
INFO  00:06:57,600 - #2 (
INFO  00:06:57,602 - #38 int
INFO  00:06:57,602 - #38 a
INFO  00:06:57,603 - #19 ,
INFO  00:06:57,607 - #38 int
INFO  00:06:57,607 - #38 idx
INFO  00:06:57,607 - #3 )
INFO  00:06:57,609 - #6 {
INFO  00:06:57,610 - #38 pos
INFO  00:06:57,611 - #4 [
INFO  00:06:57,611 - #38 idx
INFO  00:06:57,611 - #5 ]
INFO  00:06:57,617 - #21 =
INFO  00:06:57,618 - #38 a
INFO  00:06:57,618 - #17 ;
INFO  00:06:57,618 - #7 }
INFO  00:06:57,618 - #15 void
INFO  00:06:57,620 - #38 putn
INFO  00:06:57,620 - #2 (
INFO  00:06:57,620 - #38 int
INFO  00:06:57,621 - #38 a
INFO  00:06:57,621 - #19 ,
INFO  00:06:57,622 - #38 int
INFO  00:06:57,622 - #38 idx
INFO  00:06:57,622 - #3 )
INFO  00:06:57,622 - #6 {
INFO  00:06:57,622 - #38 neg
INFO  00:06:57,623 - #4 [
INFO  00:06:57,623 - #38 idx
INFO  00:06:57,625 - #5 ]
INFO  00:06:57,625 - #21 =
INFO  00:06:57,626 - #38 a
INFO  00:06:57,626 - #17 ;
INFO  00:06:57,626 - #7 }
INFO  00:06:57,626 - #38 int
INFO  00:06:57,626 - #38 getp
INFO  00:06:57,627 - #2 (
INFO  00:06:57,627 - #38 int
INFO  00:06:57,627 - #38 idx
INFO  00:06:57,627 - #3 )
INFO  00:06:57,627 - #6 {
INFO  00:06:57,627 - #14 return
INFO  00:06:57,628 - #38 pos
INFO  00:06:57,629 - #4 [
INFO  00:06:57,630 - #38 idx
INFO  00:06:57,630 - #5 ]
INFO  00:06:57,630 - #17 ;
INFO  00:06:57,631 - #7 }
INFO  00:06:57,631 - #38 int
INFO  00:06:57,631 - #38 getn
INFO  00:06:57,631 - #2 (
INFO  00:06:57,631 - #38 int
INFO  00:06:57,631 - #38 idx
INFO  00:06:57,632 - #3 )
INFO  00:06:57,632 - #6 {
INFO  00:06:57,632 - #14 return
INFO  00:06:57,632 - #38 neg
INFO  00:06:57,632 - #4 [
INFO  00:06:57,632 - #38 idx
INFO  00:06:57,632 - #5 ]
INFO  00:06:57,633 - #17 ;
INFO  00:06:57,633 - #7 }
INFO  00:06:57,633 - #15 void
INFO  00:06:57,633 - #38 f
INFO  00:06:57,633 - #2 (
INFO  00:06:57,634 - #38 char
INFO  00:06:57,634 - #38 ch
INFO  00:06:57,634 - #19 ,
INFO  00:06:57,634 - #38 int
INFO  00:06:57,634 - #38 a
INFO  00:06:57,634 - #19 ,
INFO  00:06:57,635 - #38 int
INFO  00:06:57,636 - #38 arg
INFO  00:06:57,638 - #3 )
INFO  00:06:57,638 - #38 int
INFO  00:06:57,638 - #38 x
INFO  00:06:57,638 - #17 ;
INFO  00:06:57,641 - #6 {
INFO  00:06:57,642 - #38 x
INFO  00:06:57,642 - #21 =
INFO  00:06:57,666 - #38 arg
INFO  00:06:57,666 - #17 ;
INFO  00:06:57,666 - #7 }
INFO  00:06:57,666 - #15 void
INFO  00:06:57,666 - #38 main
INFO  00:06:57,666 - #2 (
INFO  00:06:57,667 - #3 )
INFO  00:06:57,668 - #38 int
INFO  00:06:57,668 - #38 x
INFO  00:06:57,668 - #19 ,
INFO  00:06:57,668 - #38 i
INFO  00:06:57,668 - #17 ;
INFO  00:06:57,669 - #38 char
INFO  00:06:57,669 - #38 c
INFO  00:06:57,669 - #17 ;
INFO  00:06:57,669 - #6 {
INFO  00:06:57,669 - #38 pos
INFO  00:06:57,669 - #21 =
INFO  00:06:57,669 - #13 new
INFO  00:06:57,669 - #38 int
INFO  00:06:57,669 - #4 [
INFO  00:06:57,670 - #38 size
INFO  00:06:57,670 - #5 ]
INFO  00:06:57,670 - #17 ;
INFO  00:06:57,670 - #38 neg
INFO  00:06:57,670 - #21 =
INFO  00:06:57,670 - #13 new
INFO  00:06:57,670 - #38 int
INFO  00:06:57,673 - #4 [
INFO  00:06:57,673 - #38 size
INFO  00:06:57,673 - #5 ]
INFO  00:06:57,673 - #17 ;
INFO  00:06:57,674 - #38 i
INFO  00:06:57,674 - #21 =
INFO  00:06:57,675 - #37 0
INFO  00:06:57,675 - #17 ;
INFO  00:06:57,679 - #41 if
INFO  00:06:57,680 - #2 (
INFO  00:06:57,680 - #37 1
INFO  00:06:57,680 - #31 ==
INFO  00:06:57,680 - #37 1
INFO  00:06:57,682 - #3 )
INFO  00:06:57,693 - #6 {
INFO  00:06:57,694 - #10 print
INFO  00:06:57,695 - #2 (
INFO  00:06:57,695 - #37 1
INFO  00:06:57,695 - #3 )
INFO  00:06:57,696 - #17 ;
INFO  00:06:57,696 - #7 }
INFO  00:06:57,696 - #42 else
INFO  00:06:57,696 - #6 {
INFO  00:06:57,696 - #10 print
INFO  00:06:57,697 - #2 (
INFO  00:06:57,697 - #37 2
INFO  00:06:57,697 - #3 )
INFO  00:06:57,697 - #17 ;
INFO  00:06:57,697 - #7 }
INFO  00:06:57,697 - #43 do
INFO  00:06:57,697 - #6 {
INFO  00:06:57,697 - #38 putp
INFO  00:06:57,698 - #2 (
INFO  00:06:57,698 - #37 0
INFO  00:06:57,698 - #19 ,
INFO  00:06:57,698 - #38 i
INFO  00:06:57,698 - #3 )
INFO  00:06:57,700 - #17 ;
INFO  00:06:57,700 - #38 putn
INFO  00:06:57,700 - #2 (
INFO  00:06:57,700 - #37 0
INFO  00:06:57,700 - #19 ,
INFO  00:06:57,701 - #38 i
INFO  00:06:57,704 - #3 )
INFO  00:06:57,704 - #17 ;
INFO  00:06:57,704 - #38 i
INFO  00:06:57,705 - #27 ++
INFO  00:06:57,705 - #17 ;
INFO  00:06:57,705 - #7 }
INFO  00:06:57,705 - #44 while
INFO  00:06:57,706 - #2 (
INFO  00:06:57,706 - #38 i
INFO  00:06:57,706 - #33 <
INFO  00:06:57,706 - #38 size
INFO  00:06:57,707 - #3 )
INFO  00:06:57,707 - #17 ;
INFO  00:06:57,707 - #38 f
INFO  00:06:57,707 - #2 (
INFO  00:06:57,708 - #38 c
INFO  00:06:57,708 - #19 ,
INFO  00:06:57,708 - #38 x
INFO  00:06:57,708 - #19 ,
INFO  00:06:57,708 - #38 i
INFO  00:06:57,708 - #3 )
INFO  00:06:57,708 - #17 ;
INFO  00:06:57,708 - #9 read
INFO  00:06:57,708 - #2 (
INFO  00:06:57,708 - #38 x
INFO  00:06:57,708 - #3 )
INFO  00:06:57,708 - #17 ;
INFO  00:06:57,709 - #43 do
INFO  00:06:57,709 - #6 {
INFO  00:06:57,709 - #41 if
INFO  00:06:57,709 - #2 (
INFO  00:06:57,709 - #38 x
INFO  00:06:57,709 - #34 <=
INFO  00:06:57,709 - #37 0
INFO  00:06:57,711 - #3 )
INFO  00:06:57,711 - #11 break
INFO  00:06:57,711 - #17 ;
INFO  00:06:57,711 - #41 if
INFO  00:06:57,712 - #2 (
INFO  00:06:57,712 - #37 0
INFO  00:06:57,712 - #34 <=
INFO  00:06:57,712 - #38 x
INFO  00:06:57,712 - #30 &&
INFO  00:06:57,712 - #38 x
INFO  00:06:57,712 - #33 <
INFO  00:06:57,713 - #38 size
INFO  00:06:57,713 - #3 )
INFO  00:06:57,713 - #6 {
INFO  00:06:57,713 - #38 putp
INFO  00:06:57,713 - #2 (
INFO  00:06:57,713 - #38 getp
INFO  00:06:57,715 - #2 (
INFO  00:06:57,715 - #38 x
INFO  00:06:57,715 - #19 ,
INFO  00:06:57,715 - #38 i
INFO  00:06:57,715 - #19 ,
INFO  00:06:57,715 - #38 c
INFO  00:06:57,715 - #19 ,
INFO  00:06:57,715 - #37 1
INFO  00:06:57,715 - #3 )
INFO  00:06:57,716 - #23 +
INFO  00:06:57,716 - #37 1
INFO  00:06:57,717 - #3 )
INFO  00:06:57,718 - #17 ;
INFO  00:06:57,718 - #7 }
INFO  00:06:57,718 - #42 else
INFO  00:06:57,718 - #41 if
INFO  00:06:57,718 - #2 (
INFO  00:06:57,718 - #22 -
INFO  00:06:57,719 - #38 size
INFO  00:06:57,719 - #33 <
INFO  00:06:57,719 - #38 x
INFO  00:06:57,719 - #30 &&
INFO  00:06:57,719 - #38 x
INFO  00:06:57,719 - #33 <
INFO  00:06:57,719 - #37 0
INFO  00:06:57,720 - #3 )
INFO  00:06:57,720 - #6 {
INFO  00:06:57,720 - #38 putn
INFO  00:06:57,720 - #2 (
INFO  00:06:57,720 - #38 getn
INFO  00:06:57,720 - #2 (
INFO  00:06:57,720 - #22 -
INFO  00:06:57,720 - #38 x
INFO  00:06:57,720 - #3 )
INFO  00:06:57,721 - #23 +
INFO  00:06:57,721 - #37 1
INFO  00:06:57,721 - #3 )
INFO  00:06:57,721 - #17 ;
INFO  00:06:57,721 - #7 }
INFO  00:06:57,721 - #9 read
INFO  00:06:57,722 - #2 (
INFO  00:06:57,722 - #38 x
INFO  00:06:57,722 - #3 )
INFO  00:06:57,722 - #17 ;
INFO  00:06:57,722 - #7 }
INFO  00:06:57,722 - #44 while
INFO  00:06:57,722 - #2 (
INFO  00:06:57,724 - #39 true
INFO  00:06:57,724 - #3 )
INFO  00:06:57,724 - #17 ;
INFO  00:06:57,724 - #10 print
INFO  00:06:57,724 - #2 (
INFO  00:06:57,724 - #38 x
INFO  00:06:57,724 - #33 <
INFO  00:06:57,724 - #37 0
INFO  00:06:57,724 - #20 ?
INFO  00:06:57,725 - #40 -
INFO  00:06:57,725 - #18 :
INFO  00:06:57,725 - #40 +
INFO  00:06:57,725 - #3 )
INFO  00:06:57,727 - #17 ;
INFO  00:06:57,728 - #7 }
INFO  00:06:57,728 - #7 }
INFO  00:06:57,772 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  00:06:57,773 - Deklarisana promenljiva pos na liniji 3
INFO  00:06:57,773 - Deklarisana promenljiva neg na liniji 3
INFO  00:06:57,774 - Obradjuje se funkcija putp na liniji 4
INFO  00:06:57,776 - Obradjuje se funkcija putn na liniji 7
INFO  00:06:57,776 - Obradjuje se funkcija getp na liniji 10
INFO  00:06:57,776 - Obradjuje se funkcija getn na liniji 13
INFO  00:06:57,776 - Obradjuje se funkcija f na liniji 16
INFO  00:06:57,776 - Deklarisana promenljiva x na liniji 17
INFO  00:06:57,776 - Obradjuje se funkcija main na liniji 20
INFO  00:06:57,776 - Deklarisana promenljiva x na liniji 20
INFO  00:06:57,777 - Deklarisana promenljiva i na liniji 20
INFO  00:06:57,777 - Deklarisana promenljiva c na liniji 21
INFO  00:06:57,778 - Pronadjen poziv funkcije putp na liniji 31
INFO  00:06:57,778 - Pronadjen poziv funkcije putn na liniji 32
INFO  00:06:57,778 - Pronadjen poziv funkcije f na liniji 35
INFO  00:06:57,779 - Pronadjen poziv funkcije getp na liniji 40
