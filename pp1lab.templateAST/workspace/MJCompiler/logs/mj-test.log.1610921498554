INFO  23:07:55,434 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  23:07:55,655 - #8 program
INFO  23:07:55,656 - #38 p
INFO  23:07:55,656 - #16 const
INFO  23:07:55,658 - #38 int
INFO  23:07:55,658 - #38 size
INFO  23:07:55,659 - #21 =
INFO  23:07:55,660 - #37 10
INFO  23:07:55,661 - #17 ;
INFO  23:07:55,662 - #38 int
INFO  23:07:55,664 - #38 pos
INFO  23:07:55,664 - #4 [
INFO  23:07:55,664 - #5 ]
INFO  23:07:55,665 - #19 ,
INFO  23:07:55,668 - #38 neg
INFO  23:07:55,668 - #4 [
INFO  23:07:55,668 - #5 ]
INFO  23:07:55,668 - #17 ;
INFO  23:07:55,668 - #6 {
INFO  23:07:55,669 - #15 void
INFO  23:07:55,671 - #38 putp
INFO  23:07:55,673 - #2 (
INFO  23:07:55,674 - #38 int
INFO  23:07:55,674 - #38 a
INFO  23:07:55,674 - #19 ,
INFO  23:07:55,677 - #38 int
INFO  23:07:55,678 - #38 idx
INFO  23:07:55,678 - #3 )
INFO  23:07:55,679 - #6 {
INFO  23:07:55,680 - #38 pos
INFO  23:07:55,682 - #4 [
INFO  23:07:55,683 - #38 idx
INFO  23:07:55,683 - #5 ]
INFO  23:07:55,689 - #21 =
INFO  23:07:55,689 - #38 a
INFO  23:07:55,690 - #17 ;
INFO  23:07:55,690 - #7 }
INFO  23:07:55,695 - #15 void
INFO  23:07:55,699 - #38 putn
INFO  23:07:55,699 - #2 (
INFO  23:07:55,699 - #38 int
INFO  23:07:55,700 - #38 a
INFO  23:07:55,701 - #19 ,
INFO  23:07:55,703 - #38 int
INFO  23:07:55,704 - #38 idx
INFO  23:07:55,704 - #3 )
INFO  23:07:55,704 - #6 {
INFO  23:07:55,704 - #38 neg
INFO  23:07:55,704 - #4 [
INFO  23:07:55,704 - #38 idx
INFO  23:07:55,708 - #5 ]
INFO  23:07:55,709 - #21 =
INFO  23:07:55,709 - #38 a
INFO  23:07:55,709 - #17 ;
INFO  23:07:55,711 - #7 }
INFO  23:07:55,711 - #38 int
INFO  23:07:55,712 - #38 getp
INFO  23:07:55,712 - #2 (
INFO  23:07:55,713 - #38 int
INFO  23:07:55,714 - #38 idx
INFO  23:07:55,714 - #3 )
INFO  23:07:55,714 - #6 {
INFO  23:07:55,714 - #14 return
INFO  23:07:55,714 - #38 pos
INFO  23:07:55,716 - #4 [
INFO  23:07:55,717 - #38 idx
INFO  23:07:55,717 - #5 ]
INFO  23:07:55,717 - #17 ;
INFO  23:07:55,717 - #7 }
INFO  23:07:55,718 - #38 int
INFO  23:07:55,718 - #38 getn
INFO  23:07:55,718 - #2 (
INFO  23:07:55,718 - #38 int
INFO  23:07:55,718 - #38 idx
INFO  23:07:55,718 - #3 )
INFO  23:07:55,718 - #6 {
INFO  23:07:55,719 - #14 return
INFO  23:07:55,719 - #38 neg
INFO  23:07:55,719 - #4 [
INFO  23:07:55,720 - #38 idx
INFO  23:07:55,720 - #5 ]
INFO  23:07:55,720 - #17 ;
INFO  23:07:55,721 - #7 }
INFO  23:07:55,721 - #15 void
INFO  23:07:55,722 - #38 f
INFO  23:07:55,722 - #2 (
INFO  23:07:55,722 - #38 char
INFO  23:07:55,723 - #38 ch
INFO  23:07:55,724 - #19 ,
INFO  23:07:55,725 - #38 int
INFO  23:07:55,725 - #38 a
INFO  23:07:55,726 - #19 ,
INFO  23:07:55,726 - #38 int
INFO  23:07:55,727 - #38 arg
INFO  23:07:55,728 - #3 )
INFO  23:07:55,729 - #38 int
INFO  23:07:55,729 - #38 x
INFO  23:07:55,729 - #17 ;
INFO  23:07:55,730 - #6 {
INFO  23:07:55,731 - #38 x
INFO  23:07:55,731 - #21 =
INFO  23:07:55,737 - #38 arg
INFO  23:07:55,738 - #17 ;
INFO  23:07:55,738 - #7 }
INFO  23:07:55,738 - #15 void
INFO  23:07:55,738 - #38 main
INFO  23:07:55,739 - #2 (
INFO  23:07:55,739 - #3 )
INFO  23:07:55,740 - #38 int
INFO  23:07:55,740 - #38 x
INFO  23:07:55,740 - #19 ,
INFO  23:07:55,741 - #38 i
INFO  23:07:55,741 - #17 ;
INFO  23:07:55,746 - #38 char
INFO  23:07:55,747 - #38 c
INFO  23:07:55,747 - #17 ;
INFO  23:07:55,747 - #6 {
INFO  23:07:55,747 - #38 pos
INFO  23:07:55,747 - #21 =
INFO  23:07:55,748 - #13 new
INFO  23:07:55,748 - #38 int
INFO  23:07:55,748 - #4 [
INFO  23:07:55,748 - #38 size
INFO  23:07:55,748 - #5 ]
INFO  23:07:55,749 - #17 ;
INFO  23:07:55,749 - #38 neg
INFO  23:07:55,749 - #21 =
INFO  23:07:55,749 - #13 new
INFO  23:07:55,749 - #38 int
INFO  23:07:55,751 - #4 [
INFO  23:07:55,751 - #38 size
INFO  23:07:55,751 - #5 ]
INFO  23:07:55,751 - #17 ;
INFO  23:07:55,751 - #38 i
INFO  23:07:55,752 - #21 =
INFO  23:07:55,752 - #37 0
INFO  23:07:55,752 - #17 ;
INFO  23:07:55,752 - #41 if
INFO  23:07:55,753 - #2 (
INFO  23:07:55,753 - #37 1
INFO  23:07:55,753 - #31 ==
INFO  23:07:55,753 - #37 1
INFO  23:07:55,759 - #3 )
INFO  23:07:55,766 - #6 {
INFO  23:07:55,767 - #10 print
INFO  23:07:55,768 - #2 (
INFO  23:07:55,768 - #37 1
INFO  23:07:55,768 - #3 )
INFO  23:07:55,769 - #17 ;
INFO  23:07:55,769 - #7 }
INFO  23:07:55,769 - #42 else
INFO  23:07:55,771 - #6 {
INFO  23:07:55,771 - #10 print
INFO  23:07:55,771 - #2 (
INFO  23:07:55,772 - #37 2
INFO  23:07:55,772 - #3 )
INFO  23:07:55,772 - #17 ;
INFO  23:07:55,772 - #7 }
INFO  23:07:55,772 - #43 do
INFO  23:07:55,772 - #6 {
INFO  23:07:55,773 - #38 putp
INFO  23:07:55,773 - #2 (
INFO  23:07:55,773 - #37 0
INFO  23:07:55,774 - #19 ,
INFO  23:07:55,774 - #38 i
INFO  23:07:55,774 - #3 )
INFO  23:07:55,776 - #17 ;
INFO  23:07:55,777 - #38 putn
INFO  23:07:55,777 - #2 (
INFO  23:07:55,777 - #37 0
INFO  23:07:55,777 - #19 ,
INFO  23:07:55,779 - #38 i
INFO  23:07:55,779 - #3 )
INFO  23:07:55,779 - #17 ;
INFO  23:07:55,780 - #38 i
INFO  23:07:55,780 - #27 ++
INFO  23:07:55,780 - #17 ;
INFO  23:07:55,781 - #7 }
INFO  23:07:55,781 - #44 while
INFO  23:07:55,781 - #2 (
INFO  23:07:55,781 - #38 i
INFO  23:07:55,781 - #33 <
INFO  23:07:55,781 - #38 size
INFO  23:07:55,784 - #3 )
INFO  23:07:55,798 - #17 ;
INFO  23:07:55,798 - #38 f
INFO  23:07:55,798 - #2 (
INFO  23:07:55,799 - #38 c
INFO  23:07:55,800 - #19 ,
INFO  23:07:55,800 - #38 x
INFO  23:07:55,800 - #19 ,
INFO  23:07:55,801 - #38 i
INFO  23:07:55,801 - #3 )
INFO  23:07:55,801 - #17 ;
INFO  23:07:55,801 - #9 read
INFO  23:07:55,801 - #2 (
INFO  23:07:55,801 - #38 x
INFO  23:07:55,801 - #3 )
INFO  23:07:55,801 - #17 ;
INFO  23:07:55,802 - #43 do
INFO  23:07:55,802 - #6 {
INFO  23:07:55,802 - #41 if
INFO  23:07:55,802 - #2 (
INFO  23:07:55,803 - #38 x
INFO  23:07:55,803 - #34 <=
INFO  23:07:55,803 - #37 0
INFO  23:07:55,804 - #3 )
INFO  23:07:55,804 - #11 break
INFO  23:07:55,804 - #17 ;
INFO  23:07:55,804 - #41 if
INFO  23:07:55,806 - #2 (
INFO  23:07:55,806 - #37 0
INFO  23:07:55,806 - #34 <=
INFO  23:07:55,806 - #38 x
INFO  23:07:55,806 - #30 &&
INFO  23:07:55,806 - #38 x
INFO  23:07:55,806 - #33 <
INFO  23:07:55,806 - #38 size
INFO  23:07:55,807 - #3 )
INFO  23:07:55,807 - #6 {
INFO  23:07:55,807 - #38 putp
INFO  23:07:55,807 - #2 (
INFO  23:07:55,807 - #38 getp
INFO  23:07:55,807 - #2 (
INFO  23:07:55,807 - #38 x
INFO  23:07:55,807 - #3 )
INFO  23:07:55,808 - #23 +
INFO  23:07:55,808 - #37 1
INFO  23:07:55,811 - #3 )
INFO  23:07:55,811 - #17 ;
INFO  23:07:55,811 - #7 }
INFO  23:07:55,811 - #42 else
INFO  23:07:55,812 - #41 if
INFO  23:07:55,812 - #2 (
INFO  23:07:55,812 - #22 -
INFO  23:07:55,812 - #38 size
INFO  23:07:55,812 - #33 <
INFO  23:07:55,812 - #38 x
INFO  23:07:55,812 - #30 &&
INFO  23:07:55,812 - #38 x
INFO  23:07:55,812 - #33 <
INFO  23:07:55,812 - #37 0
INFO  23:07:55,812 - #3 )
INFO  23:07:55,812 - #6 {
INFO  23:07:55,812 - #38 putn
INFO  23:07:55,813 - #2 (
INFO  23:07:55,813 - #38 getn
INFO  23:07:55,813 - #2 (
INFO  23:07:55,813 - #22 -
INFO  23:07:55,813 - #38 x
INFO  23:07:55,813 - #3 )
INFO  23:07:55,813 - #23 +
INFO  23:07:55,813 - #37 1
INFO  23:07:55,813 - #3 )
INFO  23:07:55,813 - #17 ;
INFO  23:07:55,813 - #7 }
INFO  23:07:55,814 - #9 read
INFO  23:07:55,814 - #2 (
INFO  23:07:55,814 - #38 x
INFO  23:07:55,814 - #3 )
INFO  23:07:55,814 - #17 ;
INFO  23:07:55,815 - #7 }
INFO  23:07:55,815 - #44 while
INFO  23:07:55,815 - #2 (
INFO  23:07:55,815 - #39 true
INFO  23:07:55,815 - #3 )
INFO  23:07:55,815 - #17 ;
INFO  23:07:55,815 - #10 print
INFO  23:07:55,815 - #2 (
INFO  23:07:55,815 - #38 x
INFO  23:07:55,817 - #33 <
INFO  23:07:55,817 - #37 0
INFO  23:07:55,817 - #20 ?
INFO  23:07:55,817 - #40 -
INFO  23:07:55,817 - #18 :
INFO  23:07:55,817 - #40 +
INFO  23:07:55,818 - #3 )
INFO  23:07:55,820 - #17 ;
INFO  23:07:55,820 - #7 }
INFO  23:07:55,820 - #7 }
INFO  23:07:55,852 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  23:07:55,852 - Deklarisana promenljiva pos na liniji 3
INFO  23:07:55,852 - Deklarisana promenljiva neg na liniji 3
INFO  23:07:55,852 - Obradjuje se funkcija putp na liniji 4
