INFO  01:14:16,660 - Compiling source file: C:\Users\v-dihadz\Desktop\PP1 Projekti\Dino 2k21\pp1lab.templateAST\workspace\MJCompiler\test\program.mj
INFO  01:14:16,733 - #8 program
INFO  01:14:16,733 - #38 p
INFO  01:14:16,733 - #16 const
INFO  01:14:16,758 - #38 int
INFO  01:14:16,758 - #38 size
INFO  01:14:16,760 - #21 =
INFO  01:14:16,760 - #37 10
INFO  01:14:16,760 - #17 ;
INFO  01:14:16,762 - #38 int
INFO  01:14:16,763 - #38 pos
INFO  01:14:16,763 - #4 [
INFO  01:14:16,763 - #5 ]
INFO  01:14:16,763 - #19 ,
INFO  01:14:16,766 - #38 neg
INFO  01:14:16,766 - #4 [
INFO  01:14:16,766 - #5 ]
INFO  01:14:16,766 - #17 ;
INFO  01:14:16,766 - #6 {
INFO  01:14:16,767 - #15 void
INFO  01:14:16,768 - #38 putp
INFO  01:14:16,770 - #2 (
INFO  01:14:16,770 - #38 int
INFO  01:14:16,770 - #38 a
INFO  01:14:16,770 - #19 ,
INFO  01:14:16,774 - #38 int
INFO  01:14:16,774 - #38 idx
INFO  01:14:16,774 - #3 )
INFO  01:14:16,775 - #6 {
INFO  01:14:16,776 - #38 pos
INFO  01:14:16,777 - #4 [
INFO  01:14:16,778 - #38 idx
INFO  01:14:16,778 - #5 ]
INFO  01:14:16,782 - #21 =
INFO  01:14:16,782 - #38 a
INFO  01:14:16,782 - #17 ;
INFO  01:14:16,782 - #7 }
INFO  01:14:16,782 - #15 void
INFO  01:14:16,784 - #38 putn
INFO  01:14:16,784 - #2 (
INFO  01:14:16,784 - #38 int
INFO  01:14:16,784 - #38 a
INFO  01:14:16,784 - #19 ,
INFO  01:14:16,784 - #38 int
INFO  01:14:16,784 - #38 idx
INFO  01:14:16,784 - #3 )
INFO  01:14:16,785 - #6 {
INFO  01:14:16,785 - #38 neg
INFO  01:14:16,785 - #4 [
INFO  01:14:16,785 - #38 idx
INFO  01:14:16,785 - #5 ]
INFO  01:14:16,785 - #21 =
INFO  01:14:16,785 - #38 a
INFO  01:14:16,785 - #17 ;
INFO  01:14:16,786 - #7 }
INFO  01:14:16,786 - #38 int
INFO  01:14:16,786 - #38 getp
INFO  01:14:16,786 - #2 (
INFO  01:14:16,786 - #38 int
INFO  01:14:16,786 - #38 idx
INFO  01:14:16,786 - #19 ,
INFO  01:14:16,786 - #38 int
INFO  01:14:16,786 - #38 a
INFO  01:14:16,787 - #19 ,
INFO  01:14:16,787 - #38 char
INFO  01:14:16,787 - #38 b
INFO  01:14:16,787 - #19 ,
INFO  01:14:16,787 - #38 char
INFO  01:14:16,787 - #38 c
INFO  01:14:16,787 - #3 )
INFO  01:14:16,787 - #38 int
INFO  01:14:16,788 - #38 d
INFO  01:14:16,788 - #17 ;
INFO  01:14:16,788 - #6 {
INFO  01:14:16,788 - #14 return
INFO  01:14:16,788 - #38 pos
INFO  01:14:16,788 - #4 [
INFO  01:14:16,788 - #38 idx
INFO  01:14:16,788 - #5 ]
INFO  01:14:16,789 - #17 ;
INFO  01:14:16,789 - #7 }
INFO  01:14:16,789 - #38 int
INFO  01:14:16,789 - #38 getn
INFO  01:14:16,789 - #2 (
INFO  01:14:16,789 - #38 int
INFO  01:14:16,789 - #38 idx
INFO  01:14:16,790 - #3 )
INFO  01:14:16,790 - #6 {
INFO  01:14:16,790 - #14 return
INFO  01:14:16,790 - #38 neg
INFO  01:14:16,790 - #4 [
INFO  01:14:16,790 - #38 idx
INFO  01:14:16,790 - #5 ]
INFO  01:14:16,791 - #17 ;
INFO  01:14:16,791 - #7 }
INFO  01:14:16,791 - #15 void
INFO  01:14:16,791 - #38 f
INFO  01:14:16,791 - #2 (
INFO  01:14:16,791 - #38 char
INFO  01:14:16,791 - #38 ch
INFO  01:14:16,791 - #19 ,
INFO  01:14:16,798 - #38 int
INFO  01:14:16,799 - #38 a
INFO  01:14:16,799 - #19 ,
INFO  01:14:16,799 - #38 int
INFO  01:14:16,799 - #38 arg
INFO  01:14:16,799 - #3 )
INFO  01:14:16,799 - #38 int
INFO  01:14:16,799 - #38 x
INFO  01:14:16,799 - #17 ;
INFO  01:14:16,799 - #6 {
INFO  01:14:16,800 - #38 x
INFO  01:14:16,800 - #21 =
INFO  01:14:16,800 - #38 arg
INFO  01:14:16,800 - #17 ;
INFO  01:14:16,800 - #7 }
INFO  01:14:16,801 - #15 void
INFO  01:14:16,801 - #38 main
INFO  01:14:16,801 - #2 (
INFO  01:14:16,801 - #3 )
INFO  01:14:16,803 - #38 int
INFO  01:14:16,803 - #38 x
INFO  01:14:16,803 - #19 ,
INFO  01:14:16,804 - #38 i
INFO  01:14:16,804 - #17 ;
INFO  01:14:16,805 - #38 char
INFO  01:14:16,805 - #38 c
INFO  01:14:16,805 - #17 ;
INFO  01:14:16,806 - #6 {
INFO  01:14:16,806 - #38 pos
INFO  01:14:16,806 - #21 =
INFO  01:14:16,806 - #13 new
INFO  01:14:16,806 - #38 int
INFO  01:14:16,806 - #4 [
INFO  01:14:16,806 - #38 size
INFO  01:14:16,807 - #5 ]
INFO  01:14:16,807 - #17 ;
INFO  01:14:16,807 - #38 neg
INFO  01:14:16,807 - #21 =
INFO  01:14:16,807 - #13 new
INFO  01:14:16,808 - #38 int
INFO  01:14:16,808 - #4 [
INFO  01:14:16,808 - #38 size
INFO  01:14:16,808 - #5 ]
INFO  01:14:16,808 - #17 ;
INFO  01:14:16,808 - #38 i
INFO  01:14:16,808 - #21 =
INFO  01:14:16,808 - #37 0
INFO  01:14:16,808 - #17 ;
INFO  01:14:16,808 - #41 if
INFO  01:14:16,808 - #2 (
INFO  01:14:16,808 - #37 1
INFO  01:14:16,808 - #31 ==
INFO  01:14:16,809 - #37 1
INFO  01:14:16,811 - #3 )
INFO  01:14:16,816 - #6 {
INFO  01:14:16,817 - #10 print
INFO  01:14:16,817 - #2 (
INFO  01:14:16,817 - #37 1
INFO  01:14:16,818 - #3 )
INFO  01:14:16,819 - #17 ;
INFO  01:14:16,819 - #7 }
INFO  01:14:16,819 - #42 else
INFO  01:14:16,819 - #6 {
INFO  01:14:16,819 - #10 print
INFO  01:14:16,819 - #2 (
INFO  01:14:16,820 - #37 2
INFO  01:14:16,820 - #3 )
INFO  01:14:16,820 - #17 ;
INFO  01:14:16,820 - #7 }
INFO  01:14:16,820 - #43 do
INFO  01:14:16,820 - #6 {
INFO  01:14:16,821 - #38 putp
INFO  01:14:16,821 - #2 (
INFO  01:14:16,821 - #37 0
INFO  01:14:16,821 - #19 ,
INFO  01:14:16,821 - #38 i
INFO  01:14:16,821 - #3 )
INFO  01:14:16,822 - #17 ;
INFO  01:14:16,822 - #38 putn
INFO  01:14:16,822 - #2 (
INFO  01:14:16,823 - #37 0
INFO  01:14:16,823 - #19 ,
INFO  01:14:16,823 - #38 i
INFO  01:14:16,823 - #3 )
INFO  01:14:16,823 - #17 ;
INFO  01:14:16,823 - #38 i
INFO  01:14:16,823 - #27 ++
INFO  01:14:16,823 - #17 ;
INFO  01:14:16,823 - #7 }
INFO  01:14:16,823 - #44 while
INFO  01:14:16,824 - #2 (
INFO  01:14:16,824 - #38 i
INFO  01:14:16,824 - #33 <
INFO  01:14:16,824 - #38 size
INFO  01:14:16,825 - #3 )
INFO  01:14:16,825 - #17 ;
INFO  01:14:16,825 - #38 f
INFO  01:14:16,825 - #2 (
INFO  01:14:16,825 - #38 c
INFO  01:14:16,826 - #19 ,
INFO  01:14:16,826 - #38 x
INFO  01:14:16,826 - #19 ,
INFO  01:14:16,826 - #38 i
INFO  01:14:16,826 - #3 )
INFO  01:14:16,826 - #17 ;
INFO  01:14:16,826 - #9 read
INFO  01:14:16,826 - #2 (
INFO  01:14:16,826 - #38 x
INFO  01:14:16,826 - #3 )
INFO  01:14:16,826 - #17 ;
INFO  01:14:16,826 - #43 do
INFO  01:14:16,826 - #6 {
INFO  01:14:16,826 - #41 if
INFO  01:14:16,826 - #2 (
INFO  01:14:16,826 - #38 x
INFO  01:14:16,826 - #34 <=
INFO  01:14:16,827 - #37 0
INFO  01:14:16,828 - #3 )
INFO  01:14:16,828 - #11 break
INFO  01:14:16,828 - #17 ;
INFO  01:14:16,828 - #41 if
INFO  01:14:16,829 - #2 (
INFO  01:14:16,830 - #37 0
INFO  01:14:16,830 - #34 <=
INFO  01:14:16,830 - #38 x
INFO  01:14:16,830 - #30 &&
INFO  01:14:16,830 - #38 x
INFO  01:14:16,830 - #33 <
INFO  01:14:16,830 - #38 size
INFO  01:14:16,830 - #3 )
INFO  01:14:16,830 - #6 {
INFO  01:14:16,830 - #38 putp
INFO  01:14:16,830 - #2 (
INFO  01:14:16,830 - #38 getp
INFO  01:14:16,830 - #2 (
INFO  01:14:16,831 - #38 x
INFO  01:14:16,831 - #19 ,
INFO  01:14:16,831 - #38 i
INFO  01:14:16,831 - #19 ,
INFO  01:14:16,831 - #38 c
INFO  01:14:16,831 - #19 ,
INFO  01:14:16,831 - #37 1
INFO  01:14:16,831 - #3 )
INFO  01:14:16,831 - #23 +
INFO  01:14:16,831 - #37 1
INFO  01:14:16,836 - #3 )
INFO  01:14:16,836 - #17 ;
INFO  01:14:16,836 - #7 }
INFO  01:14:16,836 - #42 else
INFO  01:14:16,837 - #41 if
INFO  01:14:16,837 - #2 (
INFO  01:14:16,837 - #22 -
INFO  01:14:16,837 - #38 size
INFO  01:14:16,837 - #33 <
INFO  01:14:16,837 - #38 x
INFO  01:14:16,837 - #30 &&
INFO  01:14:16,838 - #38 x
INFO  01:14:16,838 - #33 <
INFO  01:14:16,838 - #37 0
INFO  01:14:16,838 - #3 )
INFO  01:14:16,838 - #6 {
INFO  01:14:16,838 - #38 putn
INFO  01:14:16,838 - #2 (
INFO  01:14:16,839 - #38 getn
INFO  01:14:16,839 - #2 (
INFO  01:14:16,839 - #22 -
INFO  01:14:16,839 - #38 x
INFO  01:14:16,839 - #3 )
INFO  01:14:16,839 - #23 +
INFO  01:14:16,839 - #37 1
INFO  01:14:16,839 - #3 )
INFO  01:14:16,840 - #17 ;
INFO  01:14:16,840 - #7 }
INFO  01:14:16,840 - #9 read
INFO  01:14:16,840 - #2 (
INFO  01:14:16,840 - #38 x
INFO  01:14:16,840 - #3 )
INFO  01:14:16,840 - #17 ;
INFO  01:14:16,840 - #7 }
INFO  01:14:16,840 - #44 while
INFO  01:14:16,840 - #2 (
INFO  01:14:16,841 - #39 true
INFO  01:14:16,841 - #3 )
INFO  01:14:16,841 - #17 ;
INFO  01:14:16,841 - #10 print
INFO  01:14:16,841 - #2 (
INFO  01:14:16,841 - #38 x
INFO  01:14:16,841 - #33 <
INFO  01:14:16,841 - #37 0
INFO  01:14:16,842 - #20 ?
INFO  01:14:16,842 - #40 -
INFO  01:14:16,842 - #18 :
INFO  01:14:16,842 - #40 +
INFO  01:14:16,842 - #3 )
INFO  01:14:16,844 - #17 ;
INFO  01:14:16,844 - #7 }
INFO  01:14:16,844 - #7 }
INFO  01:14:16,854 - Deklarisana konstanta size sa vrednoscu 10 na liniji 2
INFO  01:14:16,854 - Deklarisana promenljiva pos na liniji 3
INFO  01:14:16,854 - Deklarisana promenljiva neg na liniji 3
INFO  01:14:16,854 - Obradjuje se funkcija putp na liniji 4
INFO  01:14:16,854 - Obradjuje se funkcija putn na liniji 7
INFO  01:14:16,854 - Obradjuje se funkcija getp na liniji 10
INFO  01:14:16,854 - Deklarisana promenljiva d na liniji 10
INFO  01:14:16,854 - Obradjuje se funkcija getn na liniji 13
INFO  01:14:16,855 - Obradjuje se funkcija f na liniji 16
INFO  01:14:16,855 - Deklarisana promenljiva x na liniji 17
INFO  01:14:16,855 - Obradjuje se funkcija main na liniji 20
INFO  01:14:16,855 - Deklarisana promenljiva x na liniji 20
INFO  01:14:16,855 - Deklarisana promenljiva i na liniji 20
INFO  01:14:16,855 - Deklarisana promenljiva c na liniji 21
INFO  01:14:16,855 - Pronadjen poziv funkcije putp na liniji 31
INFO  01:14:16,856 - Pronadjen poziv funkcije putn na liniji 32
INFO  01:14:16,856 - Pronadjen poziv funkcije f na liniji 35
INFO  01:14:16,856 - Pronadjen poziv funkcije getp na liniji 40
ERROR 01:14:16,857 - Semanticka greska na liniji 40 : Ne poklapaju se tipovi parametara na poziciji 4
INFO  01:14:16,857 - Pronadjen poziv funkcije putp na liniji 40
INFO  01:14:16,857 - Pronadjen poziv funkcije getn na liniji 42
INFO  01:14:16,857 - Pronadjen poziv funkcije putn na liniji 42
INFO  01:14:16,857 - Print calls = 3
ERROR 01:14:16,858 - Parsiranje NIJE uspesno zavrseno!
