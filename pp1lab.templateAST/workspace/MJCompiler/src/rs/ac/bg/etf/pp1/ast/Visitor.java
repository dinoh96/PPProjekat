// generated with ast extension for cup
// version 0.8
// 29/0/2021 0:23:42


package rs.ac.bg.etf.pp1.ast;

public interface Visitor { 

    public void visit(Unmatched Unmatched);
    public void visit(Mulop Mulop);
    public void visit(Matched Matched);
    public void visit(Relop Relop);
    public void visit(FormalParamDecl FormalParamDecl);
    public void visit(StatementList StatementList);
    public void visit(MulopFactor MulopFactor);
    public void visit(Addop Addop);
    public void visit(OrCondTerm OrCondTerm);
    public void visit(Factor Factor);
    public void visit(DesignatorActPars DesignatorActPars);
    public void visit(Designator Designator);
    public void visit(ConstantVars ConstantVars);
    public void visit(ActParsList ActParsList);
    public void visit(IfCondition IfCondition);
    public void visit(ConstNode ConstNode);
    public void visit(ListOfVariables ListOfVariables);
    public void visit(FactorActPars FactorActPars);
    public void visit(VarOrConstDeclList VarOrConstDeclList);
    public void visit(VarDeclList VarDeclList);
    public void visit(FormalParamList FormalParamList);
    public void visit(Expr Expr);
    public void visit(ActPars ActPars);
    public void visit(MethodTypeName MethodTypeName);
    public void visit(DesignatorStatement DesignatorStatement);
    public void visit(AndCondFact AndCondFact);
    public void visit(ArrayVarNode ArrayVarNode);
    public void visit(Statement Statement);
    public void visit(Expression Expression);
    public void visit(ReturnExpr ReturnExpr);
    public void visit(NonTernaryExpression NonTernaryExpression);
    public void visit(CondFact CondFact);
    public void visit(PrintAddition PrintAddition);
    public void visit(MethodDeclList MethodDeclList);
    public void visit(GlobalVarDeclList GlobalVarDeclList);
    public void visit(FormPars FormPars);
    public void visit(ListOfConstants ListOfConstants);
    public void visit(SingleCondFact SingleCondFact);
    public void visit(MultiCondFact MultiCondFact);
    public void visit(NoAndCondFact NoAndCondFact);
    public void visit(YesAndCondFact YesAndCondFact);
    public void visit(CondTerm CondTerm);
    public void visit(NoOrCondTerm NoOrCondTerm);
    public void visit(YesOrCondTerm YesOrCondTerm);
    public void visit(Condition Condition);
    public void visit(NoMulopFactor NoMulopFactor);
    public void visit(YesMulopFactor YesMulopFactor);
    public void visit(Term Term);
    public void visit(NoActParsList NoActParsList);
    public void visit(YesActParsList YesActParsList);
    public void visit(ExprWithActPars ExprWithActPars);
    public void visit(NoFactorActPars NoFactorActPars);
    public void visit(YesFactorActPars YesFactorActPars);
    public void visit(BoolVar BoolVar);
    public void visit(CharVar CharVar);
    public void visit(IntVar IntVar);
    public void visit(FuncCall FuncCall);
    public void visit(NewObjectVar NewObjectVar);
    public void visit(ExpressionVar ExpressionVar);
    public void visit(ConstFactors ConstFactors);
    public void visit(Variable Variable);
    public void visit(TermExpr TermExpr);
    public void visit(AddExpr AddExpr);
    public void visit(PositiveExpr PositiveExpr);
    public void visit(NegativeExpr NegativeExpr);
    public void visit(Colon Colon);
    public void visit(QMark QMark);
    public void visit(TernaryExpression TernaryExpression);
    public void visit(TernaryExpr TernaryExpr);
    public void visit(NonTernaryExpr NonTernaryExpr);
    public void visit(NoDesignatorActPars NoDesignatorActPars);
    public void visit(YesDesignatorActPars YesDesignatorActPars);
    public void visit(ProcCall ProcCall);
    public void visit(DesignatorDecrement DesignatorDecrement);
    public void visit(DesignatorIncrement DesignatorIncrement);
    public void visit(DesignatorAssignment DesignatorAssignment);
    public void visit(GreaterEqual GreaterEqual);
    public void visit(GreaterThan GreaterThan);
    public void visit(LesserEqual LesserEqual);
    public void visit(LesserThan LesserThan);
    public void visit(NotEquals NotEquals);
    public void visit(Equals Equals);
    public void visit(Modulus Modulus);
    public void visit(Division Division);
    public void visit(Multiplication Multiplication);
    public void visit(Subtraction Subtraction);
    public void visit(Addition Addition);
    public void visit(DesignatorArrayName DesignatorArrayName);
    public void visit(DesignatorArray DesignatorArray);
    public void visit(DesignatorNonArray DesignatorNonArray);
    public void visit(NoPrintAddition NoPrintAddition);
    public void visit(YesPrintAddition YesPrintAddition);
    public void visit(NoReturnExpr NoReturnExpr);
    public void visit(YesReturnExpr YesReturnExpr);
    public void visit(BlockStatement BlockStatement);
    public void visit(ErrorStmt ErrorStmt);
    public void visit(DoWhile DoWhile);
    public void visit(MatchedIf MatchedIf);
    public void visit(ContinueStmt ContinueStmt);
    public void visit(BreakStmt BreakStmt);
    public void visit(ReturnStmt ReturnStmt);
    public void visit(PrintStmt PrintStmt);
    public void visit(ReadStmt ReadStmt);
    public void visit(DesignatorStmt DesignatorStmt);
    public void visit(IfConditionError IfConditionError);
    public void visit(IfCond IfCond);
    public void visit(UnmatchedIfElse UnmatchedIfElse);
    public void visit(UnmatchedIf UnmatchedIf);
    public void visit(WhileKeyWord WhileKeyWord);
    public void visit(DoKeyWord DoKeyWord);
    public void visit(ElseKeyWord ElseKeyWord);
    public void visit(IfKeyWord IfKeyWord);
    public void visit(UnmachedStmt UnmachedStmt);
    public void visit(MatchedStmt MatchedStmt);
    public void visit(NoStmt NoStmt);
    public void visit(Statements Statements);
    public void visit(FormalParamDeclError FormalParamDeclError);
    public void visit(FormalParameterDecl FormalParameterDecl);
    public void visit(SingleFormalParamDecl SingleFormalParamDecl);
    public void visit(FormalParamDecls FormalParamDecls);
    public void visit(NoFormParam NoFormParam);
    public void visit(FormParams FormParams);
    public void visit(VoidMethodTypeName VoidMethodTypeName);
    public void visit(NonVoidMethodTypeName NonVoidMethodTypeName);
    public void visit(MethodDecl MethodDecl);
    public void visit(NoMethodDecl NoMethodDecl);
    public void visit(MethodDeclarations MethodDeclarations);
    public void visit(Type Type);
    public void visit(NoArrayDecl NoArrayDecl);
    public void visit(ArrayDecl ArrayDecl);
    public void visit(VarNode VarNode);
    public void visit(SingleVariable SingleVariable);
    public void visit(MultipleVariables MultipleVariables);
    public void visit(ErrorConstNodeComma ErrorConstNodeComma);
    public void visit(ConstantNode ConstantNode);
    public void visit(SingleConstant SingleConstant);
    public void visit(MultipleConstants MultipleConstants);
    public void visit(VarDecl VarDecl);
    public void visit(ConstDecl ConstDecl);
    public void visit(NoVarDeclarations NoVarDeclarations);
    public void visit(VarDeclarations VarDeclarations);
    public void visit(ConstDeclarationList ConstDeclarationList);
    public void visit(VariablesDeclarationList VariablesDeclarationList);
    public void visit(NoGlobalVarDeclarationList NoGlobalVarDeclarationList);
    public void visit(GlobalVarDeclarationList GlobalVarDeclarationList);
    public void visit(ProgName ProgName);
    public void visit(Program Program);

}
